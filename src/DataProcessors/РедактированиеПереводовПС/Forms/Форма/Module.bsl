//////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьПометкиСервер(Флаг = Ложь)	
	Для Каждого ТекСтрока Из ТаблицаПереводов Цикл		
		ТекСтрока.Записать = Флаг;                		
	КонецЦикла; // Для Каждого ТекСтрока Из ТаблицаПереводов Цикл	
КонецПроцедуры // УстановитьПометкиСервер

&НаКлиенте
Процедура ПоказатьВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт	
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		Возврат;		
	КонецЕсли; // Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда		
	
	ЗаписатьПереводыНаСервере();		
	ЗаполнитьНаСервере();		
КонецПроцедуры // ПоказатьВопросЗавершение 

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ТаблицаПереводов.Очистить();
	
	Запрос 			= Новый Запрос;
	ТекстСОтбором	= "ВЫБРАТЬ Различные
		               |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения.Ссылка КАК Ссылка,
					   |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения.Наименование КАК Наименование
					   | Поместить ВТ_КаталогПредметовСнабжения
		               |ИЗ
		               |	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП";
	
	Запрос.Текст 	= "ВЫБРАТЬ
		               |	КаталогПредметовСнабжения.Ссылка КАК Ссылка,
		               |	КаталогПредметовСнабжения.Наименование КАК Наименование
		               |ИЗ
		               |	%Источник% КАК КаталогПредметовСнабжения
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
		               |		ПО КаталогПредметовСнабжения.Ссылка = ДополнительныеНаименования.Владелец
		               |			И (ДополнительныеНаименования.ИмяРеквизита = ""Наименование"")
		               |			И (ДополнительныеНаименования.Язык = &Язык)
		               |ГДЕ
		               |	КаталогПредметовСнабжения.Наименование ПОДОБНО """ + СокрЛП(ИскомоеНаименование) + "%""
		               |	И ЕСТЬNULL(ДополнительныеНаименования.Перевод, """") = """"
					   |УПОРЯДОЧИТЬ ПО
					   |	Наименование";
	Если ЗначениеЗаполнено(Корабль) Тогда
		ТекстСОтбором 	= ТекстСОтбором + " ГДЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец = &Корабль; ";
		Запрос.Текст 	= ТекстСОтбором + СтрЗаменить(Запрос.Текст, "%Источник%", "ВТ_КаталогПредметовСнабжения");
		Запрос.УстановитьПараметр("Корабль", Корабль);
	ИначеЕсли ЗначениеЗаполнено(Флот) Тогда
		ТекстСОтбором 	= ТекстСОтбором + " ГДЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец.Заказчик = &Флот; ";
		Запрос.Текст 	= ТекстСОтбором + СтрЗаменить(Запрос.Текст, "%Источник%", "ВТ_КаталогПредметовСнабжения");
		Запрос.УстановитьПараметр("Флот", Флот);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%Источник%", "Справочник.КаталогПредметовСнабжения");
	КонецЕсли; // Если ЗначениеЗаполнено(Корабль) Тогда
	
								
	Запрос.УстановитьПараметр("Язык", Язык); 
	Выборка 	= Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовСтр 				= ТаблицаПереводов.Добавить();
		НовСтр.Наименование = Выборка.Наименование;
		НовСтр.Перевод	    = "";
		НовСтр.СсылкаПС	    = Выборка.Ссылка;
	КонецЦикла;	// Пока Выборка.Следующий() Цикл
	
	Если ЗначениеЗаполнено(Перевод) Тогда
		ПеревестиНаСервере();		
	КонецЕсли; // Если ЗначениеЗаполнено(Перевод) Тогда	
КонецПроцедуры // ЗаполнитьНаСервере

&НаСервере
Процедура ПеревестиНаСервере()
	
	Перевод 		= СокрЛП(Перевод);
	СтрокаПеревод 	= ВРег(Лев(Перевод,1)) + Сред(Перевод,2);	
	Для Каждого ТекСтрока Из ТаблицаПереводов Цикл				
		ТекСтрока.Перевод = СтрокаПеревод 	+ " "
											+ СокрЛП(ОбщиеФункцииКлиентСервер.ТранслитироватьОбозначениеРусВАнг(СтрЗаменить(ВРег(ТекСтрока.Наименование), ВРег(ИскомоеНаименование), "")));					
	КонецЦикла; // Для Каждого ТекСтрока Из ТаблицаПереводов Цикл			
КонецПроцедуры // ПеревестиНаСервере

&НаСервере
Процедура ЗаписатьПереводыНаСервере()
	
	ИмяРеквизита 	= "Наименование";
	
	Для Каждого ТекСтрока Из ТаблицаПереводов Цикл
		Если Не ТекСтрока.Записать Тогда
			Продолжить;
		КонецЕсли; // Если Не ТекСтрока.Записать Тогда
		
		Результат = ОбщиеФункцииСервер.ЗаписатьПеревод(ТекСтрока.СсылкаПС, ИмяРеквизита, Язык, СокрЛП(ТекСтрока.Перевод));
		
		Если НЕ Результат.Выполнено Тогда
			Сообщить("Ошибка при записи перевода: " + Строка(ТекСтрока.СсылкаПС) + ", " + Результат.Описание);
		КонецЕсли; // Если НЕ Результат.Выполнено Тогда		
	КонецЦикла; // Для Каждого ТекСтрока Из ТаблицаПереводов Цикл	
КонецПроцедуры // ЗаписатьПереводыНаСервере


//////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура Заполнить(Команда)  
	
	Если НЕ ЗначениеЗаполнено(ИскомоеНаименование) Тогда		
		ПоказатьПредупреждение(, "Не указано искомое наименование");
		Возврат;		
	КонецЕсли; // Если НЕ ЗначениеЗаполнено(ИскомоеНаименование) Тогда
	
	ЗаполнитьНаСервере();	
КонецПроцедуры // Заполнить

&НаКлиенте
Процедура Перевести(Команда)
	
	Если Не ЗначениеЗаполнено(Язык) Тогда		
		ПоказатьПредупреждение(, "Не выбран язык");
		Возврат;		
	КонецЕсли; // Если Не ЗначениеЗаполнено(Язык) Тогда		
	
	Если НЕ ЗначениеЗаполнено(Перевод) Тогда		
		ПоказатьПредупреждение(, "Не указан перевод");
		Возврат;		
	КонецЕсли; // Если НЕ ЗначениеЗаполнено(Перевод) Тогда
	
	ПеревестиНаСервере();
	
КонецПроцедуры // Перевести

&НаКлиенте
Процедура ЗаписатьПереводы(Команда) 	
	ОписаниеОповещения 	= Новый ОписаниеОповещения("ПоказатьВопросЗавершение", ЭтотОбъект);	
	ПоказатьВопрос(ОписаниеОповещения, 
						"Записать переводы для языка " + Строка(Язык) + "?", 
						РежимДиалогаВопрос.ДаНет, 
						30);	
КонецПроцедуры // ЗаписатьПереводы

&НаКлиенте
Процедура УстановитьПометки(Команда)	
	УстановитьПометкиСервер(Истина);	
КонецПроцедуры // УстановитьПометки

&НаКлиенте
Процедура СнятьПометки(Команда)	
	УстановитьПометкиСервер(Ложь);	
КонецПроцедуры // СнятьПометки

//////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаКлиенте
Процедура ТаблицаПереводовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 	
	ПоказатьЗначение(, Элемент.ТекущиеДанные.СсылкаПС);	
КонецПроцедуры // ТаблицаПереводовВыбор
 
