
///////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Оригинал", Оригинал) И Параметры.Свойство("Дубликаты") Тогда
		
		МассивДубликатов = Параметры.Дубликаты;
		ИндексОригинала = МассивДубликатов.Найти(Оригинал);
		Если НЕ ИндексОригинала = Неопределено Тогда
			МассивДубликатов.Удалить(ИндексОригинала);			
		КонецЕсли;  
	
		Дубликаты.ЗагрузитьЗначения(МассивДубликатов);	
	
	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииНаСервере

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("СтартОбработкиУдаления", 0.1, Истина);
	
КонецПроцедуры // ПриОткрытии

//////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область Действия

&НаКлиенте
Процедура СтартОбработкиУдаления()

	РезультатОбработки  = ИнициализироватьРезультатОбработки();	
	ПараметрыОбработки 	= ИнициализироватьПараметрыОбработки();	
	
	ВыполнитьПроверкуИПодготовкуСценарияДействийНаСервере(ПараметрыОбработки, РезультатОбработки);
		
	Если РезультатОбработки.Отказ И ЭтаФорма.Открыта() Тогда
	    Закрыть(РезультатОбработки);	
	КонецЕсли; 
	
	Если ПараметрыОбработки.СценарийОбработкиМастераКлиент.Количество() > 0 Тогда
	
		ВыполнитьОбработкуНаКлиенте(ПараметрыОбработки, РезультатОбработки);
		
	Иначе
		
		ВыполнитьОбработкуНаСервере(ПараметрыОбработки, РезультатОбработки);
		
		Если ЭтаФорма.Открыта() Тогда
			Закрыть(РезультатОбработки);	
		КонецЕсли; 
		
	КонецЕсли;		
		
КонецПроцедуры // СтартОбработкиУдаления

&НаКлиенте
Функция ИнициализироватьПараметрыОбработки()

	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("Оригинал", 						Оригинал);
	ПараметрыОбработки.Вставить("Дубликаты", 						Дубликаты.ВыгрузитьЗначения());
	ПараметрыОбработки.Вставить("СценарийОбработкиМастераКлиент", 	Новый Структура);
	ПараметрыОбработки.Вставить("СценарийОбработкиСервер", 			Новый Структура);
	ПараметрыОбработки.Вставить("ДополнительныеПараметры", 			Новый Структура);
	
	Возврат ПараметрыОбработки;
	
КонецФункции // ИнициализироватьПараметрыОбработки

&НаКлиенте
Функция ИнициализироватьРезультатОбработки()

	Возврат Новый Структура("Отказ, ОписаниеОтказа", Ложь, "");
	
КонецФункции // ИнициализироватьРезультатОбработки

&НаСервере
Процедура ВыполнитьПроверкуИПодготовкуСценарияДействийНаСервере(ПараметрыОбработки, РезультатОбработки)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект"); 
	ОбработкаОбъект.ВыполнитьПроверкуИПодготовкуСценарияДействий(ПараметрыОбработки, РезультатОбработки);

КонецПроцедуры // ВыполнитьПроверкуИПодготовкуСценарияДействийНаСервере 

&НаКлиенте
Процедура ВыполнитьОбработкуНаКлиенте(ПараметрыОбработки, РезультатОбработки)

	Если ПараметрыОбработки.СценарийОбработкиМастераКлиент.Количество() > 0 Тогда
	
		ЗапуститьСценарийОбработкиМастера(ПараметрыОбработки, РезультатОбработки);	
	    Возврат;
		
	КонецЕсли; 
	
	ВыполнитьОбработкуНаСервере(ПараметрыОбработки, РезультатОбработки);
	Закрыть(РезультатОбработки);
	
КонецПроцедуры // ВыполнитьОбработкуНаКлиенте

&НаСервере
Процедура ВыполнитьОбработкуНаСервере(ПараметрыОбработки, РезультатОбработки)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект"); 
	ОбработкаОбъект.ВыполнитьОбработку(ПараметрыОбработки, РезультатОбработки);
		
КонецПроцедуры // ВыполнитьОбработкуНаСервере

#КонецОбласти

#Область ОбработкаСценарияКлиент

&НаКлиенте
Процедура ЗапуститьСценарийОбработкиМастера(ПараметрыОбработки, РезультатОбработки)

	Оповещение = Новый ОписаниеОповещения("ЗапуститьСценарийОбработкиМастераДалее", ЭтотОбъект, Новый Структура("ПараметрыОбработки, РезультатОбработки", ПараметрыОбработки, РезультатОбработки));  
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ПараметрыОбработки", ПараметрыОбработки);	
	ФормаМастера = ОткрытьФорму("Обработка.МастерУдаленияДублейСтруктурыЗаказа.Форма.ПошаговыйМастер", ПараметрыОткрытия, ЭтаФорма,,,,Оповещение, РежимоткрытияОкнаФормы.БлокироватьОкноВладельца);		

	Если ФормаМастера = Неопределено Тогда
	
		ПараметрыОбработки.СценарийОбработкиМастераКлиент.Очистить();
		ВыполнитьОбработкуНаКлиенте(ПараметрыОбработки, РезультатОбработки);
		
	КонецЕсли; 
	
КонецПроцедуры // ЗапуститьСценарийОбработкиМастера  

&НаКлиенте
Процедура ЗапуститьСценарийОбработкиМастераДалее(ВозвращаемоеЗначение, ДополнительныеПараметры) Экспорт

	Если ТипЗнч(ВозвращаемоеЗначение) = Тип("Структура") И ВозвращаемоеЗначение.ОбработатьНаСервере = Истина Тогда
		
		РезультатОбработки = ДополнительныеПараметры.РезультатОбработки;
		ПараметрыОбработки = ДополнительныеПараметры.ПараметрыОбработки;
		
		Если ВозвращаемоеЗначение.Свойство("СпецификацияПредметаСнабжения") Тогда
			
			ПараметрыОбработки.СценарийОбработкиСервер.Вставить("ОбработатьОбъединениеСпецификацийСервер", ВозвращаемоеЗначение.СпецификацияПредметаСнабжения);		
		КонецЕсли;
		
		Если ВозвращаемоеЗначение.Свойство("ЭлементыСтруктурыДляОбновления") Тогда
		    ПараметрыОбработки.СценарийОбработкиСервер.Вставить("ОбработатьСохранениеДанныхПоСвязаннымЭлементамСервер", ВозвращаемоеЗначение.ЭлементыСтруктурыДляОбновления);		
		КонецЕсли; 
		
		Если ВозвращаемоеЗначение.Свойство("ЭлементыСтруктурыДляУдаления") И ВозвращаемоеЗначение.ЭлементыСтруктурыДляУдаления.Количество() > 0 Тогда
		    ПараметрыОбработки.СценарийОбработкиСервер.Вставить("ОбработатьУдалениеЭлементовСтруктурыСервер", ВозвращаемоеЗначение.ЭлементыСтруктурыДляУдаления);		
		КонецЕсли; 
		
		Если ВозвращаемоеЗначение.Свойство("ЭлементыСтруктурыДляОбновленияПодчиненные") И ВозвращаемоеЗначение.ЭлементыСтруктурыДляОбновленияПодчиненные.Количество() > 0 Тогда
		    ПараметрыОбработки.СценарийОбработкиСервер.Вставить("ОбновитьДанныеДубликатовСервер", ВозвращаемоеЗначение.ЭлементыСтруктурыДляОбновленияПодчиненные);		
		КонецЕсли; 
		
		ПараметрыОбработки.СценарийОбработкиМастераКлиент.Очистить();
		ВыполнитьОбработкуНаКлиенте(ПараметрыОбработки, РезультатОбработки);
		
	Иначе
		
		Закрыть(Новый Структура("Отказ, ОписаниеОтказа", Истина, "Действие отменено пользователем!"));
		
	КонецЕсли; 	
	
КонецПроцедуры // ЗапуститьСценарийОбработкиМастераДалее  

#КонецОбласти 