
&НаСервере
Функция ОтправитьНаПочту(АдресФайла = "", АдресПочтыКонтрагента = "", ТекстОшибки="")
	
	Если АдресФайла = "" Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Если АдресПочтыКонтрагента = "" Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресФайла);

	ФайлАрхив = КаталогВременныхФайлов() + "Respond.zip";
	Архив = Новый ЗаписьZipФайла(ФайлАрхив);
	Архив.Добавить(ДанныеХранилища);
	Архив.Записать();

	Вложения = Новый Соответствие;
	Вложения.Вставить("Respond.zip", ФайлАрхив);
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Кому", АдресПочтыКонтрагента);
	ПараметрыСообщения.Вставить("Тема", "Ответ");
	ПараметрыСообщения.Вставить("Вложения", Вложения);
	
	Попытка
		РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты, ПараметрыСообщения);
		Рез = Истина;
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Рез = Ложь;
	КонецПопытки;
	
	УдалитьФайлы(ДанныеХранилища);
	УдалитьФайлы(ФайлАрхив);
	
	Возврат Рез; 
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьЭлементХМЛ(ЗаписьХМЛ, Имя, Значение)
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента(Имя);
	ЗаписьХМЛ.ЗаписатьТекст(Значение);
	ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // Version
		
КонецПроцедуры 

// Возвращает текстовый хмл с данными по кораблю
//
&НаСервере
Функция ВыгрузитьДанныеПоКораблюВФайл(Корабль)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения КАК Ссылка
	|ПОМЕСТИТЬ ПС_Различные
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|ГДЕ
	|	НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПометкаУдаления
	|	И СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец = &Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПС_Различные.Ссылка КАК Наименование,
	|	ПС_Различные.Ссылка.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КаталогПредметовСнабженияХарактеристики.Характеристика КАК Характеристика,
	|	КаталогПредметовСнабженияХарактеристики.Значение КАК Значение,
	|	КаталогПредметовСнабженияХарактеристики.ЕдиницаИзмерения КАК ЕдиницаИзмеренияХар
	|ИЗ
	|	ПС_Различные КАК ПС_Различные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения.Характеристики КАК КаталогПредметовСнабженияХарактеристики
	|		ПО ПС_Различные.Ссылка = КаталогПредметовСнабженияХарактеристики.Ссылка
	|ИТОГИ ПО
	|	Наименование";
	Запрос.УстановитьПараметр("Владелец", Корабль);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Версия = "1.00";
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	ЗаписьХМЛ.УстановитьСтроку("UTF-8");
	ЗаписьХМЛ.ЗаписатьОбъявлениеXML();
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfRequests");
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Request");
	
	ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Version", 		Версия);
	ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Type", 			ТипЗапроса);
	ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "RequestAbonent", КодАбонента);
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfItems");
	
	Пока Выборка.Следующий() Цикл
		
		ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Item");
		
		ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Name", 			Строка(Выборка.Наименование));
		
		Характеристики = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если Характеристики.Количество() > 0 Тогда
			ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfCharacteristics");
			Пока Характеристики.Следующий() Цикл
				
				ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Characteristic");
				
				ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Name",  Строка(Характеристики.Характеристика));
				ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Value", XMLСтрока(Характеристики.Значение));
				ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Unit",  Строка(Характеристики.ЕдиницаИзмеренияХар));
				
				ЗаписьХМЛ.ЗаписатьКонецЭлемента();
				
			КонецЦикла; 
			ЗаписьХМЛ.ЗаписатьКонецЭлемента();
		КонецЕсли; 
		
		ЗаписьХМЛ.ЗаписатьКонецЭлемента();
		
	КонецЦикла; 
	ЗаписьХМЛ.ЗаписатьКонецЭлемента();
	ЗаписьХМЛ.ЗаписатьКонецЭлемента();
	ЗаписьХМЛ.ЗаписатьКонецЭлемента();
	
	Возврат ЗаписьХМЛ.Закрыть();
	
КонецФункции
 
&НаСервере
Процедура ВыгрузитьИОтправитьНаСервере()
	
	Если НЕ АдресПолучателя = "" Тогда
		
		ТекстХМЛ = ВыгрузитьДанныеПоКораблюВФайл(Корабль);
		
		ФайлХМЛ = КаталогВременныхФайлов() + "Request.xml";
		Запись = Новый ЗаписьXML;
		Запись.ОткрытьФайл(ФайлХМЛ);
		Запись.ЗаписатьТекст(ТекстХМЛ);
		Запись.Закрыть();
		
		АдресФайла = ПоместитьВоВременноеХранилище(ФайлХМЛ);		
		
		ТекстОшибки = "";
		Если НЕ ОтправитьНаПочту(АдресФайла, АдресПолучателя, ТекстОшибки) Тогда
			Сообщить(ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИОтправить(Команда)
	
	ВыгрузитьИОтправитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТипЗапроса  = "ЗапросНаКлассификацию";
	КодАбонента = "170607";
	//АдресПолучателя = "mdm_admin@seaproject.ru"; 
	АдресПолучателя = "";
	
	Сервер		 = "sp-1c";
	БазаДанных   = "osk_mdm_bd";
	Пользователь = "Администратор";
	Пароль       = "";
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьИСохранитьНаСервере(АдресФайла = "")
	
	АдресФайла = ПоместитьВоВременноеХранилище(ВыгрузитьДанныеПоКораблюВФайл(Корабль));		
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьИСохранить(Команда)
	
	АдресФайла = "";
	
	ВыгрузитьИСохранитьНаСервере(АдресФайла);
	
	Если НЕ АдресФайла = "" И НЕ ПутьКФайлу = "" Тогда
		
		ЗаписьXMLСтрока = ПолучитьИзВременногоХранилища(АдресФайла);
		
		Текст= Новый ТекстовыйДокумент;
		Текст.УстановитьТекст(ЗаписьXMLСтрока);
		Текст.Записать(ПутьКФайлу);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла = ПутьКФайлу;
	Диалог.Фильтр = "xml|*.xml";
	Диалог.МножественныйВыбор = Ложь;
	
    Диалог.Показать(Новый ОписаниеОповещения("ОбработкаВыборафайла", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыборафайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ПутьКФайлу = ВыбранныеФайлы[0];
    КонецЕсли;
    
КонецПроцедуры

// Формат НСИ наш
&НаСервере
Функция ВыгрузитьДанныеПоКораблюВФайлПоПроекту(Проект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения КАК Ссылка
	|ПОМЕСТИТЬ ПС_Различные
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|ГДЕ
	|	НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПометкаУдаления
	|	И СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец.Владелец = &Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПС_Различные.Ссылка КАК Ссылка,
	|	ПС_Различные.Ссылка.Наименование КАК Наименование,
	|	ПС_Различные.Ссылка.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	ПС_Различные КАК ПС_Различные
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Версия = "1.00";
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	ЗаписьХМЛ.УстановитьСтроку("UTF-8");
	ЗаписьХМЛ.ЗаписатьОбъявлениеXML();
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfRequests");
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Request");
	
	ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Version", 		Версия);
	ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Type", 			ТипЗапроса);
	ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "RequestAbonent", КодАбонента);
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfItems");
	
	Пока Выборка.Следующий() Цикл
		
		ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Item");
		
		ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Name", Строка(Выборка.Наименование));
		
		ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfCharacteristics");
		Для каждого Хар Из Выборка.Ссылка.Характеристики Цикл
			
			ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Characteristic");
			
			ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Name",  Строка(Хар.Характеристика));
			ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Value", XMLСтрока(Хар.Значение));
			ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Unit",  Строка(Хар.ЕдиницаИзмеренияХар));
			
			ЗаписьХМЛ.ЗаписатьКонецЭлемента();
			
		КонецЦикла; 
		ЗаписьХМЛ.ЗаписатьКонецЭлемента();
		
		ЗаписьХМЛ.ЗаписатьКонецЭлемента();
		
	КонецЦикла; 
	ЗаписьХМЛ.ЗаписатьКонецЭлемента();
	ЗаписьХМЛ.ЗаписатьКонецЭлемента();
	ЗаписьХМЛ.ЗаписатьКонецЭлемента();
	
	Возврат ЗаписьХМЛ.Закрыть();
	
КонецФункции

// Формат Акселот
&НаСервере
Функция ВыгрузитьДанныеПоКораблюВФайлПоПроектуАкселот(Проект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения КАК Ссылка
	|ПОМЕСТИТЬ ПС_Различные
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|ГДЕ
	|	НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПометкаУдаления
	|	И СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец.Владелец = &Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПС_Различные.Ссылка.Код КАК Код,
	|	ПС_Различные.Ссылка КАК Ссылка,
	|	ПС_Различные.Ссылка.Наименование КАК Наименование,
	|	ПС_Различные.Ссылка.Характеристики.(
	|		Характеристика КАК Характеристика,
	|		Значение КАК Значение,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|	) КАК Характеристики
	|ИЗ
	|	ПС_Различные КАК ПС_Различные
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("Проект", Проект);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Версия = "1.00";
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	ЗаписьХМЛ.УстановитьСтроку("UTF-8");
	ЗаписьХМЛ.ЗаписатьОбъявлениеXML();
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("RequestMessage");
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("MessageInfo");
		ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Type", 			ТипЗапроса);
		ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "AbonentId", КодАбонента);
	ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // MessageInfo
	
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("MessageData");
	
	Пока Выборка.Следующий() Цикл
		
		ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Request");
		
		ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Code", Строка(Выборка.Код));
		ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Name", Строка(Выборка.Наименование));
		
		ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfProperties");
		ВыборкаХар = Выборка.Характеристики.Выбрать();
		Пока ВыборкаХар.Следующий() Цикл
			
			ЗаписьХМЛ.ЗаписатьНачалоЭлемента("Property");
			ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Name",  Строка(ВыборкаХар.Характеристика));
			ЗаписатьЭлементХМЛ(ЗаписьХМЛ, "Value", XMLСтрока(ВыборкаХар.Значение));
			ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // Property
			
		КонецЦикла; 
		ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // ArrayOfProperties
			
		ЗаписьХМЛ.ЗаписатьНачалоЭлемента("ArrayOfFilesInfo");
		ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // ArrayOfFilesInfo
		
		ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // Request
		
	КонецЦикла; 
	
	ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // MessageData
	ЗаписьХМЛ.ЗаписатьКонецЭлемента(); // RequestMessage
	
	Возврат ЗаписьХМЛ.Закрыть();
	
КонецФункции

&НаСервере
Процедура ВыгрузитьВНСИНаСервере()
	
	V8 = Новый COMОбъект("V83.COMConnector");   
	
	СтрокаСоединения =  "srvr='" + Сервер + "'; ref='" + БазаДанных + "'; usr='" + Пользователь + "'; pwd='" + Пароль + "';";
	
	Попытка     
		Соединение = V8.Connect(СтрокаСоединения);          
	Исключение
		аа = ОписаниеОшибки();
	КонецПопытки;    
	
	ТекстХМЛ = ВыгрузитьДанныеПоКораблюВФайлПоПроектуАкселот(Проект);
	АдресСырыхДанных = Соединение.ПоместитьВоВременноеХранилище(ТекстХМЛ);
	
	Запись = Соединение.NewObject("Структура");
	//Запись = Новый Структура;
	Запись.Вставить("Дата", Дата(0001,01,01));
	Запись.Вставить("ИД", Неопределено);
	Запись.Вставить("Автор", "");
	Запись.Вставить("ДополнительныеСвойства", "");
	Запись.Вставить("Источник", "ЗИП-Э");
	Запись.Вставить("КлючНабора", "");
	
	// ЗАписываем сырые данные в регистр
	ДанныеЗаписи = Соединение.нсиСырыеДанные.ЗаписатьСырыеДанные(АдресСырыхДанных, Запись, Соединение.Перечисления.нсиСостояниеОбработкиСырыхДанных.Новое); 	
	
	Если НЕ ДанныеЗаписи = Неопределено Тогда
		Сообщить("Успешно");
	КонецЕсли;
	
	Соединение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВНСИ(Команда)
	ВыгрузитьВНСИНаСервере();
КонецПроцедуры