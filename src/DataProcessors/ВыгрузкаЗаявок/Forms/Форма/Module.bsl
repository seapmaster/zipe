#Область ПеременныеМодуля

#Если Сервер Тогда
Перем СоответствиеТекстовЗапросовДокументам;
#КонецЕсли

#КонецОбласти

#Область ВыгрузкаДанных

&НаСервере
Функция ПолучитьДокументы(ТекДокумент,ПакетXDTO,ИмяXDTO,СсылкаНаДокумент=Неопределено,Табличнаячасть=Неопределено)
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = СоответствиеТекстовЗапросовДокументам[ТекДокумент+Табличнаячасть];
	
	Если ТекстЗапроса = Неопределено Тогда
		
		Если Табличнаячасть = Неопределено Тогда
			
			МД = Метаданные.Документы[ТекДокумент];
			СтрокаРеквизитов = "Ссылка, Ссылка КАК ГУИД, Дата, Номер" ;
			
		Иначе
		
			СтрокаРеквизитов = "Ссылка, Ссылка КАК ГУИД, Ссылка.Дата КАК СсылкаДата, Ссылка.Номер КАК СсылкаНомер";
			МД = Метаданные.Документы[ТекДокумент].ТабличныеЧасти[Табличнаячасть];
		
		КонецЕсли; 
		
		//Для каждого ТекРеквизит Из МД.Реквизиты Цикл
		Для каждого ТекРеквизит Из ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяXDTO)).Свойства() Цикл
			Если НЕ МД.Реквизиты.Найти(ТекРеквизит.Имя) = Неопределено Тогда
				СтрокаРеквизитов = СтрокаРеквизитов + ", 
				|ВЫБОР КОГДА " + ТекРеквизит.Имя + " ЕСТЬ NULL ТОГДА """" ИНАЧЕ " + ТекРеквизит.Имя + " КОНЕЦ КАК " + ТекРеквизит.Имя;
			Иначе
				Если Найти(ТекРеквизит.Имя,"__") И НЕ Найти(ТекРеквизит.Имя,"__0__") Тогда
					
					МСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекРеквизит.Имя,"__");
					
					Если НЕ МД.Реквизиты.Найти(МСтрок[0]) = Неопределено ИЛИ МСтрок[0] = "Ссылка" И МСтрок.Количество() > 1 Тогда
						СтрокаРеквизитов = СтрокаРеквизитов + ", 
						|ВЫБОР КОГДА " + СтрЗаменить(ТекРеквизит.Имя,"__",".") + " ЕСТЬ NULL ТОГДА """" ИНАЧЕ " + СтрЗаменить(ТекРеквизит.Имя,"__",".") + " КОНЕЦ КАК " + ТекРеквизит.Имя;
					КонецЕсли; 
					
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
		Запрос.Текст = 
		"ВЫБРАТЬ " + СтрокаРеквизитов + "
		|ИЗ
		|	Документ." + ТекДокумент + ?(Табличнаячасть=Неопределено,"","."+Табличнаячасть) + " КАК Док
		|	ГДЕ 1=1
		|	" + ?(СсылкаНаДокумент=Неопределено,"","И Док.Ссылка = &СсылкаНаДокумент") + "
		|";
		
		СоответствиеТекстовЗапросовДокументам[ТекДокумент+Табличнаячасть] = Запрос.Текст;
	Иначе 
		
		Запрос.Текст = ТекстЗапроса;
		
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СсылкаНаДокумент",СсылкаНаДокумент);

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Выбрать();
	КонецЕсли; 
	
КонецФункции


&НаСервере
Функция ВыгрузитьДокумент(ТекДокумент,ПакетXDTO,ИмяМассиваXDTO,ИмяXDTO)

	
	Выборка = ПолучитьДокументы(ТекДокумент,ПакетXDTO,ИмяXDTO);
	Если Выборка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	МассивXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяМассиваXDTO));
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ЭлементXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяXDTO));
			
			ЗаполнитьЗначенияСвойств(ЭлементXDTO,Выборка);
			
		Исключение
			
			Сообщить("Ошибка при выгрузки данных: " + ТекДокумент + ", элемент: " + Выборка.Ссылка + ". " + ОписаниеОшибки());
			
			Продолжить;
			
		КонецПопытки; 
			
		МассивXDTO[ИмяXDTO].Добавить(ЭлементXDTO);
		
	КонецЦикла;
	
	Возврат МассивXDTO;

КонецФункции


&НаСервере
Функция ВыгрузитьФайлы(СсылкаНаОбъект,ПакетXDTO,ИмяВладельцаXDTO)
	
	ИмяМассиваXDTO = "ArrayOfAKPSObjectAttachment";
	ИмяXDTO = "AKPSObjectAttachment";
	ВыгружатьГруппы = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрисоединенныеФайлы.ПрисоединенныйФайл КАК Ссылка,
		|	ПрисоединенныеФайлы.ХранимыйФайл
		|ИЗ
		|	РегистрСведений.ПрисоединенныеФайлы КАК ПрисоединенныеФайлы
		|	ГДЕ ПрисоединенныеФайлы.ПрисоединенныйФайл.ВладелецФайла = &СсылкаНаОбъект
		|";
		
	Запрос.УстановитьПараметр("СсылкаНаОбъект",СсылкаНаОбъект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяВладельцаXDTO).Свойства.Получить(ИмяМассиваXDTO).Тип);
	
	Пока Выборка.Следующий() Цикл
		
		МД = Выборка.Ссылка.Метаданные();
		
		Попытка
			
			ЭлементXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяXDTO));
			
			ЭлементXDTO.id = Выборка.Ссылка.УникальныйИдентификатор();
			ЭлементXDTO.orderId = Выборка.Ссылка.ВладелецФайла.УникальныйИдентификатор();
			ЭлементXDTO.resourceId = Выборка.Ссылка.УникальныйИдентификатор();
			ЭлементXDTO.name = Выборка.Ссылка.Наименование;
			ЭлементXDTO.resourceExtension = Выборка.Ссылка.Расширение;
			
			ЭлементXDTO.designation = ИмяВладельцаXDTO;
			
			МассивXDTO[ИмяXDTO].Добавить(ЭлементXDTO);
			
			Выборка.ХранимыйФайл.Получить().Записать(""+Константы.ПутьДляВыгрузкиКартинок.Получить() + "\" + Выборка.Ссылка.УникальныйИдентификатор() + "." + Выборка.Ссылка.Расширение);
			
		Исключение
			
			Сообщить("Ошибка при выгрузки данных: " + МД.Имя + ", элемент: " + Выборка.Ссылка + ". " + ОписаниеОшибки());
			
			Продолжить;
			
		КонецПопытки; 
		
	КонецЦикла;
	
	
	Возврат МассивXDTO;

КонецФункции

&НаСервере
Функция ВыгрузитьЗаявки(ПакетXDTO)
	
	ТекДокумент = "Заявка";
	ИмяМассиваXDTO = "ArrayOfAKPSOrder";
	ИмяXDTO = "AKPSOrder";
	
	Выборка = ПолучитьДокументы(ТекДокумент,ПакетXDTO,ИмяXDTO);
	Если Выборка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	МассивXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяМассиваXDTO));
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ЭлементXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяXDTO));
			
			ЗаполнитьЗначенияСвойств(ЭлементXDTO,Выборка);
			
			//Прикрепленные файлы
			МассивФайлов = ВыгрузитьФайлы(Выборка.Ссылка,ПакетXDTO,ИмяXDTO);
			Если НЕ МассивФайлов = Неопределено Тогда 
				ЭлементXDTO.ArrayOfAKPSObjectAttachment = МассивФайлов;
			КонецЕсли;
			
			//Позиции заявки
			МассивПозиций = ВыгрузитьПозиции("Заявка",Выборка.Ссылка,ПакетXDTO,ИмяXDTO,"ArrayOfAKPSOrdersElement","AKPSOrdersElement","Позиции");
			Если НЕ МассивПозиций = Неопределено Тогда 
				ЭлементXDTO.ArrayOfAKPSOrdersElement = МассивПозиций;
			КонецЕсли;
			
		Исключение
			
			Сообщить("Ошибка при выгрузки данных: " + ТекДокумент + ", элемент: " + Выборка.Ссылка + ". " + ОписаниеОшибки());
			
			Продолжить;
			
		КонецПопытки; 
			
		МассивXDTO[ИмяXDTO].Добавить(ЭлементXDTO);
		
	КонецЦикла;
	
	Возврат МассивXDTO;

КонецФункции

&НаСервере
Функция ВыгрузитьПозиции(ТекДокумент,СсылкаНаДокумент,ПакетXDTO,ИмяВладельцаXDTO,ИмяМассиваXDTO,ИмяXDTO,ТабличнаяЧасть)

	Выборка = ПолучитьДокументы(ТекДокумент,ПакетXDTO,ИмяXDTO,СсылкаНаДокумент,ТабличнаяЧасть);
	Если Выборка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	МассивXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяВладельцаXDTO).Свойства.Получить(ИмяМассиваXDTO).Тип);
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ЭлементXDTO = ФабрикаXDTO.Создать(ПакетXDTO.Получить(ИмяXDTO));
			
			ЗаполнитьЗначенияСвойств(ЭлементXDTO,Выборка);
			
		Исключение
			
			Сообщить("Ошибка при выгрузки данных: " + ТекДокумент + "." + ТабличнаяЧасть + ", элемент: " + Выборка.Ссылка + ". " + ОписаниеОшибки());
			
			Продолжить;
			
		КонецПопытки; 
			
		МассивXDTO[ИмяXDTO].Добавить(ЭлементXDTO);
		
	КонецЦикла;
	
	Возврат МассивXDTO;

КонецФункции


&НаСервере
Функция ПолучитьДанные()
	
	СоответствиеТекстовЗапросовДокументам = Новый Соответствие;
	
	
	ПакетXDTO = ФабрикаXDTO.Пакеты.Получить("http://seaproject.ru/iss_zip/import_from_site");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("Request");
	
	МассивXDTO = ВыгрузитьЗаявки(ПакетXDTO);
	Если НЕ МассивXDTO = Неопределено Тогда
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,МассивXDTO,"ArrayOfAKPSOrder");
	КонецЕсли; 
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
	Возврат ЗаписьXML.Закрыть(); 
	
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
	
	Состояние("Идет выгрузка",0);
	Сообщить(""+ТекущаяДата()+" Начало выгрузки");
	
	ЗаписьXMLСтрока = ПолучитьДанные();
	
	Состояние("Выгрузка завершена",100);
	
	Текст= Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(ЗаписьXMLСтрока);
	Текст.Записать(ПутьКФайлу);
	
	Сообщить(""+ТекущаяДата()+" Окончание выгрузки");
	
КонецПроцедуры

#КонецОбласти


#Область ОбработкаСобытийФормы

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла = ПутьКФайлу;
	Диалог.Фильтр = "XML|*.xml";
	Диалог.МножественныйВыбор = Ложь;
	
    Диалог.Показать(Новый ОписаниеОповещения("ОбработкаВыборафайла", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыборафайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
    
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ПутьКФайлу = ВыбранныеФайлы[0];
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

