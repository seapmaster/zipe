

///////// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаВыборафайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт    
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ПутьКФайлу = ВыбранныеФайлы[0];
		Директория = ДополнительныеПараметры.Каталог + "pics\";
		ДиректорияJS = ДополнительныеПараметры.Каталог + "JS\";
    КонецЕсли;     
КонецПроцедуры // ОбработкаВыборафайла

&НаКлиенте
Процедура ДобавитьКорабли(МножественныйВыбор)  	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных; 	
	Если Значениезаполнено(Флот) Тогда
		ЭлементОтбора 					= ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Заказчик");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение 	= Флот;
		ЭлементОтбора.Использование 	= Истина;	
	КонецЕсли;
	
	Если Проекты.Количество() > 0 Тогда
		ЭлементОтбора 					= ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Владелец");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение 	= ПолучитьМассивПроектов();
		ЭлементОтбора.Использование 	= Истина;	
	КонецЕсли;
	
    ПараметрыОткрытия = Новый Структура;    
    ПараметрыОткрытия.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", 	 МножественныйВыбор);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодобратьКораблиЗавершить", ЭтаФорма);
	ОткрытьФорму("Справочник.Заказы.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор, , , ОписаниеОповещения);
КонецПроцедуры // ДобавитьКорабли


&НаКлиенте   
Процедура ПодобратьКораблиЗавершить(РезультатЗакрытия, ДопПараметры) Экспорт 	
	Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Массив") Тогда	
		Для каждого Корабль Из РезультатЗакрытия Цикл
			ДобавитьНовыйКорабль(Корабль);	
		КонецЦикла; 
	Иначе
		ДобавитьНовыйКорабль(РезультатЗакрытия);	
	КонецЕсли;
КонецПроцедуры // ПодобратьКораблиЗавершить


Функция ПолучитьМассивПроектов()
	Возврат Проекты.Выгрузить().ВыгрузитьКолонку("Проект");
КонецФункции // ПолучитьМассивПроектов

&НаКлиенте   
Процедура ДобавитьНовыйКорабль(Корабль)
	Если Корабли.НайтиСтроки(Новый Структура("Корабль",Корабль)).Количество() = 0 Тогда		
		НоваяСтрока 		= Корабли.Добавить();
		НоваяСтрока.Корабль = Корабль;		
	КонецЕсли;
КонецПроцедуры // ДобавитьНовыйКорабль

&НаСервере
Процедура ПривестиТаблицуКораблей()	
	Если ЗначениеЗаполнено(Флот) Тогда 
		Для Индекс = -Корабли.Количество()+1 По 0 Цикл
			Если НЕ Корабли[-Индекс].Корабль.Заказчик = Флот Тогда
				Корабли.Удалить(-Индекс);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли; 
	Если Проекты.Количество() > 0 Тогда 
		Для Индекс = -Корабли.Количество()+1 По 0 Цикл
			Строки = Проекты.НайтиСтроки(Новый Структура("Проект", Корабли[-Индекс].Корабль.Владелец));
			Если Строки.Количество() = 0 Тогда
				Корабли.Удалить(-Индекс);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры // ПривестиТаблицуКораблей

&НаКлиенте
Процедура ДобавитьПроекты(МножественныйВыбор)  	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных; 	
	Если Значениезаполнено(Флот) Тогда
		ЭлементОтбора 					= ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение 	= ПолучитьПроектыДляФлота(Флот);
		ЭлементОтбора.Использование 	= Истина;	
	КонецЕсли;
           
    ПараметрыОткрытия = Новый Структура;    
    ПараметрыОткрытия.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", 	 МножественныйВыбор);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьПроектыЗавершить", ЭтаФорма);
	ОткрытьФорму("Справочник.ПроектыКораблей.ФормаВыбора", 
							ПараметрыОткрытия, 
							ЭтотОбъект, 
							УникальныйИдентификатор, , , 
							ОписаниеОповещения, 
							РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // ДобавитьПроекты

&НаКлиенте   
Процедура ДобавитьПроектыЗавершить(РезультатЗакрытия, ДопПараметры) Экспорт 	
	Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Массив") Тогда	
		Для каждого Проект Из РезультатЗакрытия Цикл
			ДобавитьНовыйПроект(Проект);	
		КонецЦикла; 
	Иначе
		ДобавитьНовыйПроект(РезультатЗакрытия);	
	КонецЕсли;
	ПривестиТаблицуКораблей();
КонецПроцедуры // ДобавитьПроектыЗавершить

&НаКлиенте   
Процедура ДобавитьНовыйПроект(Проект)
	Если Проекты.НайтиСтроки(Новый Структура("Проект", Проект)).Количество() = 0 Тогда		
		НоваяСтрока 		= Проекты.Добавить();
		НоваяСтрока.Проект  = Проект;		
	КонецЕсли;
КонецПроцедуры // ДобавитьНовыйПроект

&НаСервереБезКонтекста  
Функция ПолучитьПроектыДляФлота(Флот)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Заказы.Владелец КАК Проект
		|ИЗ
		|	Справочник.Заказы КАК Заказы
		|ГДЕ
		|	Заказы.Заказчик = &Флот";
	Запрос.УстановитьПараметр("Флот", Флот);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Проект");
КонецФункции // ПолучитьПроектыДляФлота   

Функция ВыгрузитьНаСервере()
	
	АдресХранилищаКонечногоФайла = "";
	
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("Флот", 						   Флот);
	ПараметрыВыгрузки.Вставить("Проекты", 					   Проекты.Выгрузить().ВыгрузитьКолонку("Проект"));
	ПараметрыВыгрузки.Вставить("Корабли", 					   Корабли.Выгрузить().ВыгрузитьКолонку("Корабль"));
	ПараметрыВыгрузки.Вставить("ВыгружатьФайлы", 			   ВыгружатьФайлы);
	ПараметрыВыгрузки.Вставить("АдресХранилищаКонечногоФайла", АдресХранилищаКонечногоФайла);
	ПараметрыВыгрузки.Вставить("МассивФайлов", 				   Новый Массив); 
	ПараметрыВыгрузки.Вставить("СформироватьАрхивНаСервере",   ?(ФормироватьАрхив = 0, Истина, Ложь));
	ПараметрыВыгрузки.Вставить("Директория",   					Директория);
	ПараметрыВыгрузки.Вставить("ПутьКФайлу",   					ПутьКФайлу);
	ПараметрыВыгрузки.Вставить("ДиректорияJS",   				ДиректорияJS);
	ПараметрыВыгрузки.Вставить("КоличествоФоновыхЗаданий",		КоличествоФоновыхЗадач);


	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыгрузитьСерверМодульОбъекта(ПараметрыВыгрузки);

	Возврат ПараметрыВыгрузки;
	
КонецФункции // ВыгрузитьНаСервере

&НаКлиенте
Асинх Процедура СохранитьАрхивВФайлНаКлиенте(Результат) 
	
	МассивФайловНаДиске	= Новый Массив;
	
	ПутьФайлаJSON = Директория + "ExportToSite.json";
	
	ДанныеХранилища = ПолучитьИзВременногоХранилища(Результат.АдресХранилищаКонечногоФайла);
	Ждать ДанныеХранилища.ЗаписатьАсинх(ПутьФайлаJSON);	
	
	МассивФайловНаДиске.Добавить(ПутьФайлаJSON);
	
	Архив = Новый ЗаписьZipФайла(ПутьКФайлу, , , МетодСжатияZIP.Копирование, УровеньСЖатияZIP.Минимальный);
	Архив.Добавить(ПутьФайлаJSON, РежимСохраненияПутейZIP.НеСохранятьПути);
	
	ПорцияФайлов = Новый Массив;
	
	СтруктураФайлов = Новый Массив;
	
	Счетчик = 0;
	
	МассивФайловКартинок = Результат.МассивФайлов;
	
	ОбщееКоличество = МассивФайловКартинок.Количество();
	
	Для Каждого СсылкаНаФайл из МассивФайловКартинок Цикл
		
		ИндексТекущегоЭлемента = МассивФайловКартинок.Найти(СсылкаНаФайл);
		
		Если Счетчик = 50 Или ИндексТекущегоЭлемента = ОбщееКоличество - 1 Тогда
			//добавлена одна строка, добавляющая последний файл в порцию 16.04.2020
			//ПорцияФайлов.Добавить(СсылкаНаФайл);
			Если ИндексТекущегоЭлемента = ОбщееКоличество - 1 Тогда
				 ПорцияФайлов.Добавить(СсылкаНаФайл);
			КонецЕсли;	 
			СтруктураФайлов = ПолучитьФайлыКартинок(ПорцияФайлов);
			
			Для Каждого ПрисоединенныйФайлСтруктура из СтруктураФайлов Цикл
				
				ПутьКВременномуФайлу 	= Директория + ПрисоединенныйФайлСтруктура.ФайлСсылка.УникальныйИдентификатор() + "." + ПрисоединенныйФайлСтруктура.Расширение;
				
				ДанныеХранилища 		= ПолучитьИзВременногоХранилища(ПрисоединенныйФайлСтруктура.СсылкаНаДвоичныеДанныеФайла);
				Ждать ДанныеХранилища.ЗаписатьАсинх(ПутьКВременномуФайлу); 		
				
				МассивФайловНаДиске.Добавить(ПутьКВременномуФайлу);
				
				Архив.Добавить(ПутьКВременномуФайлу, РежимСохраненияПутейZIP.НеСохранятьПути);	
				
			КонецЦикла;
			
			ПорцияФайлов.Очистить();
			ПорцияФайлов.Добавить(СсылкаНаФайл);
			
			Счетчик = 1;
			
		Иначе
			ПорцияФайлов.Добавить(СсылкаНаФайл);
			
			Счетчик = Счетчик + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Архив.Записать();
	УдалитьВременныеФайлы(МассивФайловНаДиске);
	
КонецПроцедуры  // СохранитьАрхиввФайлНаКлиенте

&НаСервереБезКонтекста
Функция ПолучитьФайлыКартинок(МассивФайлов)
	МассивФайловКартинок = Новый Массив;
	Для каждого ПрисоединенныйФайл Из МассивФайлов Цикл
		ДанныеФайла 	 = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ПрисоединенныйФайл, , Истина);
		ДанныеФайла.Вставить("ФайлСсылка", ПрисоединенныйФайл);
		МассивФайловКартинок.Добавить(ДанныеФайла);
	КонецЦикла;
	Возврат МассивФайловКартинок;
КонецФункции // ПолучитьФайлыКартинок

&НаКлиенте
Асинх Процедура УдалитьВременныеФайлы(МассивДляУдаления)
	Для каждого ПутьКВременномуФайлу Из МассивДляУдаления Цикл
		УдалитьФайлыАсинх(ПутьКВременномуФайлу);	
	КонецЦикла; 
КонецПроцедуры  // УдалитьВременныеФайлы

#КонецОбласти 
///////////////////////////////////////////////////////////



///////// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытиыйФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.КоличествоФоновыхЗадач.Видимость = РольДоступна("ПолныеПрава");
	КоличествоФоновыхЗадач = 26;
КонецПроцедуры // ПриСозданииНаСервере

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла = ПутьКФайлу;
	Диалог.Фильтр = "ZIP|*.zip";
	Диалог.МножественныйВыбор = Ложь;
    Диалог.Показать(Новый ОписаниеОповещения("ОбработкаВыборафайла", ЭтотОбъект, Диалог));	
КонецПроцедуры // ПутьКФайлуНачалоВыбора

&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	ПривестиТаблицуКораблей();
КонецПроцедуры // ЗаказчикПриИзменении

&НаКлиенте
Процедура ПроектыПослеУдаления(Элемент)
	ПривестиТаблицуКораблей();
КонецПроцедуры // ПроектыПослеУдаления

&НаКлиенте
Процедура ПутьКФайлуПриИзменении(Элемент)
	Директория = ПутьКФайлу + "pics\";
	ДиректорияJS = ПутьКФайлу + "JS\";
	Если СтрНайти(ПутьКФайлу,"ForSite.zip") = 0 Тогда
		ПутьКфайлу = ПутьКфайлу + "ForSite.zip";
	КонецЕсли;
КонецПроцедуры // ПутьКФайлуПриИзменении



#КонецОбласти
//////////////////////////////////////////////////////////



//////////// КОМАНДЫ ФОРМЫ
#Область КомандыФормы

&НаКлиенте
Процедура ДобавитьКорабль(Команда)
	ДобавитьКорабли(Ложь);
КонецПроцедуры // ДобавитьКорабль

&НаКлиенте
Процедура ПодобратьКорабли(Команда)  	
	ДобавитьКорабли(Истина);
КонецПроцедуры // ПодобратьКорабли

&НаКлиенте
Процедура ДобавитьПроект(Команда)
	ДобавитьПроекты(Ложь);
КонецПроцедуры // ДобавитьПроект

&НаКлиенте
Процедура ПодобратьПроекты(Команда)
	ДобавитьПроекты(Истина);
КонецПроцедуры // ПодобратьПроекты

&НаКлиенте
Процедура Выгрузить(Команда)

	Сообщить(Формат(ТекущаяДата(),"ДЛФ=ДВ") + " - Начало выгрузки.");
	
	РезультатВыгрузки = ВыгрузитьНаСервере();	
	Если ФормироватьАрхив = 1 Тогда
		СохранитьАрхивВФайлНаКлиенте(РезультатВыгрузки);
		Сообщить(Формат(ТекущаяДата(),"ДЛФ=ДВ") + " - Конец выгрузки.");
	КонецЕсли;
	
КонецПроцедуры // Выгрузить


#КонецОбласти
///////////////////////////////////////////////////////////



/////////// ФУНКЦИИ ДЛЯ ТЕСТА
#Область ТестовыеПроцедурыИФункции

&НаКлиенте
Процедура ТестJSON(Команда)
	ТестJSONНаСервере();
КонецПроцедуры // ТестJSON

&НаСервере
Процедура ТестJSONНаСервере()
	АдресХранилищаКонечногоФайла = "";
	
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("Флот", 						   Флот);
	ПараметрыВыгрузки.Вставить("Проекты", 					   Проекты.Выгрузить().ВыгрузитьКолонку("Проект"));
	ПараметрыВыгрузки.Вставить("Корабли", 					   Корабли.Выгрузить().ВыгрузитьКолонку("Корабль"));
	ПараметрыВыгрузки.Вставить("ВыгружатьФайлы", 			   ВыгружатьФайлы);
	ПараметрыВыгрузки.Вставить("АдресХранилищаКонечногоФайла", АдресХранилищаКонечногоФайла);
	ПараметрыВыгрузки.Вставить("МассивФайлов", 				   Новый Массив); 
	ПараметрыВыгрузки.Вставить("СформироватьАрхивНаСервере",   ?(ФормироватьАрхив = 0, Истина, Ложь));
	ПараметрыВыгрузки.Вставить("Директория",   					Директория);
	ПараметрыВыгрузки.Вставить("ПутьКФайлу",   					ПутьКФайлу);
	ПараметрыВыгрузки.Вставить("ДиректорияJS",   				ДиректорияJS);
	ПараметрыВыгрузки.Вставить("КоличествоФоновыхЗаданий",		КоличествоФоновыхЗадач);
	
	ОбменССайтом.СформироватьФайлJSON(ПараметрыВыгрузки);
КонецПроцедуры // ТестJSONНаСервере


#КонецОбласти
///////////////////////////////////////////////////////////
