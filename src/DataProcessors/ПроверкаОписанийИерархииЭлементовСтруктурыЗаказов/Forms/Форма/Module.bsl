&НаКлиенте
Процедура ВыполнитьИсправление(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьИсправлениеЗавершение", ЭтаФорма), "Данные в БД будут необратимо изменены. Продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИсправлениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Сообщить("Исправление начато в "+ТекущаяДата());
		Состояние("Выполняется исправление описаний иерархии",,,БиблиотекаКартинок.ДлительнаяОперация48);
		ВыполнитьИсправлениеОписанияИерархий();
		Сообщить("Исправление окончено в "+ТекущаяДата());
	Иначе
		Сообщить("Прервано пользователем!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьИсправлениеОписанияИерархий()
	
	ТаблицаФактическихОписанийИерархии = ПолучитьТаблицуФактическихОписанийИерархии();
	
	ОписаниеИерархийНаборЗаписей = РегистрыСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.СоздатьНаборЗаписей();
	ОписаниеИерархийНаборЗаписей.Загрузить(ТаблицаФактическихОписанийИерархии);
	ОписаниеИерархийНаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверку(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьПроверкуЗавершение", ЭтаФорма), "Результат предыдущей проверки будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Сообщить("Проверка начата в "+ТекущаяДата());
		Состояние("Выполняется проверка описаний иерархии",,,БиблиотекаКартинок.ДлительнаяОперация48);
		ВыполнитьПроверкуОписанийИерархии();
		Сообщить("Проверка окончена в "+ТекущаяДата());
	Иначе
		Сообщить("Прервано пользователем!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверкуОписанийИерархии()
	
	ТаблицаФактическихОписанийИерархии = ПолучитьТаблицуФактическихОписанийИерархии();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаФактическихОписанийИерархии.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	ТаблицаФактическихОписанийИерархии.ОписаниеИерархии КАК ФактическаяИерархия
	|ПОМЕСТИТЬ втТаблицаФактическихОписанийИерархии
	|ИЗ
	|	&ТаблицаФактическихОписанийИерархии КАК ТаблицаФактическихОписанийИерархии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЭлементСтруктуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаФактическихОписанийИерархии.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	ВЫРАЗИТЬ(втТаблицаФактическихОписанийИерархии.ФактическаяИерархия КАК СТРОКА(1024)) КАК ФактическаяИерархия,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ОписаниеИерархии, """") КАК СТРОКА(1024)) КАК ИерархияВРегистре
	|ПОМЕСТИТЬ втОписанияИерархий
	|ИЗ
	|	втТаблицаФактическихОписанийИерархии КАК втТаблицаФактическихОписанийИерархии
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП КАК ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП
	|		ПО втТаблицаФактическихОписанийИерархии.ЭлементСтруктуры = ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ЭлементСтруктуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОписанияИерархий.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	втОписанияИерархий.ФактическаяИерархия КАК ФактическаяИерархия,
	|	втОписанияИерархий.ИерархияВРегистре КАК ИерархияВРегистре
	|ИЗ
	|	втОписанияИерархий КАК втОписанияИерархий
	|ГДЕ
	|	НЕ втОписанияИерархий.ФактическаяИерархия = втОписанияИерархий.ИерархияВРегистре";
	Запрос.УстановитьПараметр("ТаблицаФактическихОписанийИерархии",ТаблицаФактическихОписанийИерархии);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ОписанияИерархий.Загрузить(ТаблицаЗапроса);
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуФактическихОписанийИерархии()
	
	ТаблицаФактическихОписанийИерархии = Новый ТаблицаЗначений;
	ТаблицаФактическихОписанийИерархии.Колонки.Добавить("ЭлементСтруктуры",Новый ОписаниеТипов("СправочникСсылка.СтруктураЗаказаПоКомплектующимИзделиямИЗИП"));
	ТаблицаФактическихОписанийИерархии.Колонки.Добавить("ОписаниеИерархии",Новый ОписаниеТипов("Строка"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка КАК Ссылка,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Наименование КАК Наименование
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП1
	|		ПО СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка = СтруктураЗаказаПоКомплектующимИзделиямИЗИП1.Родитель
	|ГДЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП1.Ссылка ЕСТЬ NULL
	|ИТОГИ ПО
	|	Ссылка ТОЛЬКО ИЕРАРХИЯ";
	
	ДеревоЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	СтруктураЗаказаПустаяСсылка = Справочники.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПустаяСсылка();
	
	ДобавитьФактическиеОписанияИерархии(ДеревоЗапроса.Строки,ТаблицаФактическихОписанийИерархии,СтруктураЗаказаПустаяСсылка,,СтруктураЗаказаПустаяСсылка);
	
	Сообщить("Обработано "+Строка(ТаблицаФактическихОписанийИерархии.Количество())+" записей");
	
	Возврат ТаблицаФактическихОписанийИерархии;
	
КонецФункции

&НаСервере
Процедура ДобавитьФактическиеОписанияИерархии(СтрокиДерева,ТаблицаФактическихОписанийИерархии,РодительЭлемента,ОписаниеИерархии = "",СтруктураЗаказаПустаяСсылка)
	
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		
		Если Не СтрокаДерева.Ссылка = РодительЭлемента И Не РодительЭлемента = СтруктураЗаказаПустаяСсылка Тогда
			
			СтрокаФактическоеОписаниеИерархии = ТаблицаФактическихОписанийИерархии.Добавить();
			СтрокаФактическоеОписаниеИерархии.ЭлементСтруктуры = СтрокаДерева.Ссылка;
			СтрокаФактическоеОписаниеИерархии.ОписаниеИерархии = ОписаниеИерархии;
			
		КонецЕсли;
		
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			
			Если СтрокаДерева.Ссылка = РодительЭлемента Тогда
				
				ТекущееОписаниеИерархии = ОписаниеИерархии;
				
			Иначе
				
				ОписаниеРодительскихУровней = ?(ЗначениеЗаполнено(ОписаниеИерархии),ОписаниеИерархии + "/","");
				ТекущееОписаниеИерархии = ОписаниеРодительскихУровней + СтрокаДерева.Наименование;
				
			КонецЕсли;
			
			ДобавитьФактическиеОписанияИерархии(СтрокаДерева.Строки,ТаблицаФактическихОписанийИерархии,СтрокаДерева.Ссылка,ТекущееОписаниеИерархии,СтруктураЗаказаПустаяСсылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
