&НаСервере
Процедура ВыполнитьГенерациюКодов()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПредметыСнабжения.ПредметСнабжения КАК ПредметСнабжения
	|ПОМЕСТИТЬ втПредметыСнабжения
	|ИЗ
	|	&ПредметыСнабжения КАК ПредметыСнабжения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПредметСнабжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ПредметСнабжения КАК ПредметСнабжения,
	|	ВложенныйЗапрос.INCAT КАК INCAT
	|ПОМЕСТИТЬ втКоды
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВложенныйЗапрос.ПредметСнабжения) КАК ПредметСнабжения,
	|		ВЫБОР
	|			КОГДА НЕ ВложенныйЗапрос.NSN = """"
	|				ТОГДА ""NATO-"" + ВложенныйЗапрос.NSN
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НЕ ВложенныйЗапрос.ФНН = """"
	|						ТОГДА ""S"" + &ИдПоставщика + ""-"" + ВложенныйЗапрос.ФНН
	|					ИНАЧЕ ПОДСТРОКА(ВЫБОР
	|								КОГДА ВложенныйЗапрос.INCAT = """"
	|									ТОГДА """"
	|								ИНАЧЕ ""S"" + &ИдПоставщика + ""-"" + ВложенныйЗапрос.INCAT
	|							КОНЕЦ, 1, 32)
	|				КОНЕЦ
	|		КОНЕЦ КАК INCAT
	|	ИЗ
	|		(ВЫБРАТЬ
	|			втПредметыСнабжения.ПредметСнабжения КАК ПредметСнабжения,
	|			ВЫБОР
	|				КОГДА НЕ КаталогПредметовСнабжения.ОбозначениеТранслитированное = """"
	|					ТОГДА КаталогПредметовСнабжения.ОбозначениеТранслитированное
	|				ИНАЧЕ КаталогПредметовСнабжения.Шифр
	|			КОНЕЦ КАК INCAT,
	|			КаталогПредметовСнабжения.ФНН КАК ФНН,
	|			ВЫБОР
	|				КОГДА КаталогПредметовСнабжения.NSN ССЫЛКА Справочник.ПредметыСнабженияНАТО
	|					ТОГДА ВЫРАЗИТЬ(КаталогПредметовСнабжения.NSN.КодNSN КАК СТРОКА(13))
	|				ИНАЧЕ ВЫРАЗИТЬ(КаталогПредметовСнабжения.NSN КАК СТРОКА(13))
	|			КОНЕЦ КАК NSN
	|		ИЗ
	|			втПредметыСнабжения КАК втПредметыСнабжения
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения КАК КаталогПредметовСнабжения
	|				ПО втПредметыСнабжения.ПредметСнабжения = КаталогПредметовСнабжения.Ссылка) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА НЕ ВложенныйЗапрос.NSN = """"
	|				ТОГДА ""NATO-"" + ВложенныйЗапрос.NSN
	|			ИНАЧЕ ВЫБОР
	|					КОГДА НЕ ВложенныйЗапрос.ФНН = """"
	|						ТОГДА ""S"" + &ИдПоставщика + ""-"" + ВложенныйЗапрос.ФНН
	|					ИНАЧЕ ПОДСТРОКА(ВЫБОР
	|								КОГДА ВложенныйЗапрос.INCAT = """"
	|									ТОГДА """"
	|								ИНАЧЕ ""S"" + &ИдПоставщика + ""-"" + ВложенныйЗапрос.INCAT
	|							КОНЕЦ, 1, 32)
	|				КОНЕЦ
	|		КОНЕЦ) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ ВложенныйЗапрос.INCAT В
	|				(ВЫБРАТЬ
	|					КаталогПредметовСнабжения.INCAT КАК INCAT
	|				ИЗ
	|					Справочник.КаталогПредметовСнабжения КАК КаталогПредметовСнабжения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПредметСнабжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПредметыСнабжения.ПредметСнабжения КАК ПредметСнабжения,
	|	КаталогПредметовСнабжения.ОбозначениеТранслитированное КАК Обозначение,
	|	ЕСТЬNULL(втКоды.INCAT, """") КАК INCAT,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втКоды.INCAT, """") = """"
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Записать,
	|	КаталогПредметовСнабжения.NSN КАК NSN,
	|	КаталогПредметовСнабжения.ФНН КАК ФНН
	|ИЗ
	|	втПредметыСнабжения КАК втПредметыСнабжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения КАК КаталогПредметовСнабжения
	|		ПО втПредметыСнабжения.ПредметСнабжения = КаталогПредметовСнабжения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКоды КАК втКоды
	|		ПО втПредметыСнабжения.ПредметСнабжения = втКоды.ПредметСнабжения
	|
	|УПОРЯДОЧИТЬ ПО
	|	КаталогПредметовСнабжения.Наименование";
	Запрос.УстановитьПараметр("ПредметыСнабжения", ПредметыСнабжения.Выгрузить());
	Запрос.УстановитьПараметр("ИдПоставщика", Поставщик.КодCAGE);
	
	ПредметыСнабжения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьКодыINCAT()
	
	МассивСтрок = ПредметыСнабжения.НайтиСтроки(Новый Структура("Записать", Истина));
	
	ДатаНачала = ТекущаяДата();
	Сч = 1;
	ВсегоСтрок = МассивСтрок.Количество();
	
	Для каждого СтрокаПредметСнабжения Из МассивСтрок Цикл
		
		УправлениеИнтерфейсом.ВывестиТекущееСостояние("Запись кодов INCAT...", ДатаНачала, Сч, ВсегоСтрок, , , , БиблиотекаКартинок.ДлительнаяОперация48);
			
		ЗаписатьКодINCAT(СтрокаПредметСнабжения.ПредметСнабжения, СтрокаПредметСнабжения.INCAT);
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьКодINCAT(ПредметСнабжения, INCAT)
	
	ПредметСнабженияОбъект = ПредметСнабжения.ПолучитьОбъект();
	ПредметСнабженияОбъект.INCAT = INCAT;
	
	Попытка
		
		ПредметСнабженияОбъект.Записать();
		
	Исключение
		
		Сообщить("Не удалось записать код INCAT предмета снабжения " + Строка(ПредметСнабжения) + Символы.ПС + ОписаниеОшибки());
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьКодыINCAT(Команда)
	
	Если Не ЗначениеЗаполнено(Поставщик) Тогда
		
		ПоказатьПредупреждение(, "Не указан поставщик!");
		Возврат;
		
	КонецЕсли;
	
	Сообщить("Генерация кодов начата в " + ТекущаяДата());
	Состояние("Генерация кодов INCAT...", , , БиблиотекаКартинок.ДлительнаяОперация48);
	
	ВыполнитьГенерациюКодов();	
	
	Сообщить("Генерация кодов окончена в " + ТекущаяДата());
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ОКПродолжение", ЭтаФорма), "В базу данных будут внесены изменения. Продолжить?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		
		ПоказатьПредупреждение(, "Действие отменено!");
		Возврат;
		
	КонецЕсли;
	
	Если ПредметыСнабжения.НайтиСтроки(Новый Структура("INCAT", "")).Количество() > 0 Тогда
		
		ТекстВопроса = "Не все коды INCAT заполнены. Предметы снабжения без кодов INCAT не будут выгружены. Продолжить?";
		ПоказатьВопрос(Новый ОписаниеОповещения("ОКЗавершение", ЭтаФорма), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ЗаписатьКодыINCAT();
		Закрыть(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОКЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьКодыINCAT();
		Закрыть(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Поставщик = Константы.ОсновнаяОрганизация.Получить();
	
	КопироватьДанныеФормы(Параметры.ПредметыСнабжения, ПредметыСнабжения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияINCATПриИзменении(Элемент)
	
	ТекДанные = Элементы.ПредметыСнабжения.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекДанные.INCAT) Тогда
		
		КоличествоВТаблице = ПредметыСнабжения.НайтиСтроки(Новый Структура("INCAT", ТекДанные.INCAT)).Количество();
		
		Если КоличествоВТаблице > 1 Тогда
			
			Сообщить("Среди сгенерированных кодов уже есть INCAT " + ТекДанные.INCAT);
			ТекДанные.INCAT = "";
			
		Иначе
			
			РезультатПроверки = ПроверитьУникальностьКодаINCAT(ТекДанные.INCAT);
			
			Если Не РезультатПроверки Тогда
				
				Сообщить("Вы базе данных уже есть предмет снабжения с INCAT " + ТекДанные.INCAT);
				ТекДанные.INCAT = "";
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьУникальностьКодаINCAT(INCAT)
	
	Возврат Справочники.КаталогПредметовСнабжения.НайтиПоРеквизиту("INCAT", INCAT).Пустая();
	
КонецФункции


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	 УстановитьЗначениеФлажков(Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	 УстановитьЗначениеФлажков(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеФлажков(ЗначениеФлажков)
	
	Для каждого СтрокаПредметСнабжения Из ПредметыСнабжения Цикл
		
		СтрокаПредметСнабжения.Записать = ЗначениеФлажков;
		
	КонецЦикла;
	
КонецПроцедуры

