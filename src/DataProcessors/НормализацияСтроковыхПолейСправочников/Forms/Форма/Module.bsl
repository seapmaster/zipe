
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Режим = "Одиночный";
	
	Для каждого ОбъектМетаданных Из Метаданные.Справочники Цикл
		
		СписокСправочников.Добавить(ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьВЗависимостиОтРежима();
	
	Элементы.ГруппаВыполнение.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СинонимСправочникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикВыбораСправочника", ЭтотОбъект);
	
	СписокСправочников.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выбор справочника");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораСправочника(ВозЗнач, ДопПараметры = Неопределено) Экспорт

	Если Не ВозЗнач = Неопределено Тогда
	
		ИмяСправочника 		= ВозЗнач.Значение;
		СинонимСправочника 	= ВозЗнач.Представление;
		
		СформироватьСписокВыбораПолей();
	
	КонецЕсли;	

КонецПроцедуры // ОбработчикВыбораСправочника()

&НаСервере
Функция СформироватьСписокВыбораПолей()
	
	Элементы.СинонимПоля.СписокВыбора.Очистить();
	
	ТипСтрока = Тип("Строка");

	МетаданныеСправочника = Неопределено;
	Выполнить("МетаданныеСправочника = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные();");
	
	Для каждого СтандартныйРеквизит Из МетаданныеСправочника.СтандартныеРеквизиты Цикл
		
		Если СтандартныйРеквизит.Имя = "ИмяПредопределенныхДанных" Тогда
		
			Продолжить;	
		
		КонецЕсли;
	
		ОбработатьРеквизит(СтандартныйРеквизит, ТипСтрока);	
	
	КонецЦикла;
	
	Для каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
	
		ОбработатьРеквизит(Реквизит, ТипСтрока);	
	
	КонецЦикла;

КонецФункции // СформироватьСписокВыбораПолей()

&НаСервере
Процедура ОбработатьРеквизит(Реквизит, ТипСтрока)

	Типы = Реквизит.Тип.Типы();
	
	Если Типы.Количество() = 1 Тогда
		
		Если Реквизит.Тип.Типы().Получить(0) = ТипСтрока Тогда
			
			Элементы.СинонимПоля.СписокВыбора.Добавить(Реквизит.Имя, Реквизит.Синоним); 		
			
		КонецЕсли; 	
		
	КонецЕсли;	
	
КонецПроцедуры // ОбработатьРеквизит()

&НаКлиенте
Процедура СинонимПоляОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяПоля = ВыбранноеЗначение;
	ЭлементСпискаВыбора = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
	СинонимПоля = ?(ЗначениеЗаполнено(ЭлементСпискаВыбора.Представление), ЭлементСпискаВыбора.Представление, ЭлементСпискаВыбора.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьНормализацию(Команда)
	
	Если Не ЗначениеЗаполнено(ИмяСправочника) Тогда
	
		ПоказатьПредупреждение(, "Необходимо выбрать справочник",, "Действие запрещено");	
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИмяПоля) Тогда
	
		ПоказатьПредупреждение(, "Необходимо выбрать поле",, "Действие запрещено");	
	
	КонецЕсли;
	
	Прогресс = 0;
	Пояснение = "";
	
	Элементы.ГруппаВыполнение.Видимость			= Истина;
	Элементы.НачатьНормализацию.Доступность		= Ложь;
	Элементы.РезультатыНормализации.Видимость	= Ложь;
	
	НачатьНормализациюВФоне();	
	
	ПодключитьОбработчикОжидания("ОбновитьПоказателиВыполнения", 5);
	
КонецПроцедуры

&НаСервере
Процедура НачатьНормализациюВФоне()
	
	АдресВременногоХранилища = ?(АдресВременногоХранилища = "", ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор), АдресВременногоХранилища);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ИмяСправочника);
	МассивПараметров.Добавить(ИмяПоля);
	МассивПараметров.Добавить(АдресВременногоХранилища);

	ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбщиеФункцииСервер.НормализоватьЗначенияПоляСправочника", МассивПараметров, УникальныйИдентификатор, "Нормализация значений поля справочника");	

	ИдентификаторФоновогоЗадания = ФоновоеЗадание.УникальныйИдентификатор;
	
КонецПроцедуры // НачатьНормализациюВФоне()

&НаКлиенте
Процедура ОбновитьПоказателиВыполнения()
	
	СообщенияФоновогоЗадания = ПолучитьСообщенияФоновогоЗадания();
	
	Если СообщенияФоновогоЗадания = Неопределено Тогда
	
		ОтключитьОбработчикОжидания("ОбновитьПоказателиВыполнения");
		
		ПоказатьПредупреждение(, "Фоновое задание не обнаружено. Обратитесь к администратору.",, "Фоновое задание не обнаружено");
		
		Возврат;
	
	КонецЕсли;
	
	КоличествоСообщений = СообщенияФоновогоЗадания.Количество();
	
	Если КоличествоСообщений = 0 Тогда
		
		Возврат;			
		
	КонецЕсли;
	
	ПоследнееСообщение = СообщенияФоновогоЗадания.Получить(КоличествоСообщений - 1).Текст;
	
	ПозицияЗапятой = Найти(ПоследнееСообщение, ",");
	
	Прогресс = Число(Лев(ПоследнееСообщение, ПозицияЗапятой - 1)); 
	
	Пояснение = Прав(ПоследнееСообщение, СтрДлина(ПоследнееСообщение) - ПозицияЗапятой);
	
	Если Прогресс = 100 Тогда
		
		ОтключитьОбработчикОжидания("ОбновитьПоказателиВыполнения");
		Элементы.ГруппаВыполнение.Видимость 	= Ложь;
		Элементы.НачатьНормализацию.Доступность	= Истина;
		
		ВывестиРезультатыНормализации();	
		
	КонецЕсли;

КонецПроцедуры // ОбновитьПоказателиВыполнения()

&НаСервере
Функция ПолучитьСообщенияФоновогоЗадания()
	
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторФоновогоЗадания);
	
	Если ФоновоеЗадание = Неопределено Тогда
	
		Возврат Неопределено;	
	
	Иначе
	
		Возврат ФоновоеЗадание.ПолучитьСообщенияПользователю(Истина);	
	
	КонецЕсли;

КонецФункции // ПолучитьСообщенияФоновогоЗадания()

&НаСервере
Процедура ВывестиРезультатыНормализации()
	
	ТЗРезультатыНормализации = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Если Не ТЗРезультатыНормализации = Неопределено Тогда
	
		РезультатыНормализации.Загрузить(ТЗРезультатыНормализации);	
		
		УдалитьИзВременногоХранилища(АдресВременногоХранилища);
		
		АдресВременногоХранилища = "";
		
		Элементы.РезультатыНормализации.Видимость = Истина;
	
	КонецЕсли;

КонецПроцедуры // ВывестиРезультатыНормализации()

&НаКлиенте
Процедура РежимПриИзменении(Элемент)
	
	УстановитьВидимостьВЗависимостиОтРежима();	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьВЗависимостиОтРежима()

	Если Режим = "Одиночный" Тогда
	
		Элементы.ГруппаРежимОдиночный.Видимость = Истина;
		Элементы.ГруппаРежимПодКлюч.Видимость	= Ложь;
	
	ИначеЕсли Режим = "ПодКлюч" Тогда
	
		Элементы.ГруппаРежимОдиночный.Видимость = Ложь;
		Элементы.ГруппаРежимПодКлюч.Видимость	= Истина;
		
		ЗаполнитьОбъектыНормализацииПодКлюч();
	
	КонецЕсли;	

КонецПроцедуры // УстановитьВидимостьВЗависимостиОтРежима()

&НаСервере
Процедура ЗаполнитьОбъектыНормализацииПодКлюч()

	Если ОбъектыНормализацииПодКлюч.Количество() > 0 Тогда
	
		Возврат;	
	
	КонецЕсли;	
	
	// Будут включены все строковые реквизиты справочников "КаталогПредметовСнабжения" и "СтруктураЗаказаПоКомплектующимИзделиямИЗИП", а также переводы
	
	// Найдем строковые поля справочников
	
	ТипСтрока = Тип("Строка");
	
	// Каталог предметов снабжения
	
	ОбработатьСправочникПодКлюч(Справочники.КаталогПредметовСнабжения.ПустаяСсылка().Метаданные(), "КаталогПредметовСнабжения", "Каталог предметов снабжения", ТипСтрока);
	
	// Комплектующие изделия и ЗИП
	
	ОбработатьСправочникПодКлюч(Справочники.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПустаяСсылка().Метаданные(), "СтруктураЗаказаПоКомплектующимИзделиямИЗИП", "Комплектующие изделия и ЗИП", ТипСтрока);	
	
	// Определим, для каких реквизитов есть переводы
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОбъектыНормализацииПодКлюч.ИмяСправочника,
	|	ОбъектыНормализацииПодКлюч.СинонимСправочника,
	|	ОбъектыНормализацииПодКлюч.ИмяПоля,
	|	ОбъектыНормализацииПодКлюч.СинонимПоля
	|ПОМЕСТИТЬ ВТ_ОбъектыНормализацииПодКлюч
	|ИЗ
	|	&ОбъектыНормализацииПодКлюч КАК ОбъектыНормализацииПодКлюч
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""КаталогПредметовСнабжения"" КАК ИмяСправочника,
	|	ДополнительныеНаименования.ИмяРеквизита
	|ПОМЕСТИТЬ ВТ_ПоляСПереводом
	|ИЗ
	|	РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	|ГДЕ
	|	ДополнительныеНаименования.Владелец ССЫЛКА Справочник.КаталогПредметовСнабжения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""СтруктураЗаказаПоКомплектующимИзделиямИЗИП"",
	|	ДополнительныеНаименования.ИмяРеквизита
	|ИЗ
	|	РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	|ГДЕ
	|	ДополнительныеНаименования.Владелец ССЫЛКА Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОбъектыНормализацииПодКлюч.ИмяСправочника,
	|	ВТ_ОбъектыНормализацииПодКлюч.СинонимСправочника,
	|	ВТ_ОбъектыНормализацииПодКлюч.ИмяПоля,
	|	ВТ_ОбъектыНормализацииПодКлюч.СинонимПоля,
	|	НЕ ВТ_ПоляСПереводом.ИмяСправочника ЕСТЬ NULL  КАК Переводы
	|ИЗ
	|	ВТ_ОбъектыНормализацииПодКлюч КАК ВТ_ОбъектыНормализацииПодКлюч
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоляСПереводом КАК ВТ_ПоляСПереводом
	|		ПО ВТ_ОбъектыНормализацииПодКлюч.ИмяСправочника = ВТ_ПоляСПереводом.ИмяСправочника
	|			И ВТ_ОбъектыНормализацииПодКлюч.ИмяПоля = ВТ_ПоляСПереводом.ИмяРеквизита";
	
	Запрос.УстановитьПараметр("ОбъектыНормализацииПодКлюч", ОбъектыНормализацииПодКлюч.Выгрузить());
	
	ОбъектыНормализацииПодКлюч.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьОбъектыНормализацииПодКлюч()

&НаСервере
Процедура ОбработатьСправочникПодКлюч(МетаданныеСправочника, ИмяСправочника, СинонимСправочника, ТипСтрока)

	Для каждого СтандартныйРеквизит Из МетаданныеСправочника.СтандартныеРеквизиты Цикл
		
		Если СтандартныйРеквизит.Имя = "ИмяПредопределенныхДанных" Тогда
		
			Продолжить;	
		
		КонецЕсли;
	
		ОбработатьРеквизитПодКлюч(СтандартныйРеквизит, ИмяСправочника, СинонимСправочника, ТипСтрока);	
	
	КонецЦикла;
	
	Для каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
	
		ОбработатьРеквизитПодКлюч(Реквизит, ИмяСправочника, СинонимСправочника, ТипСтрока);	
	
	КонецЦикла;

КонецПроцедуры // ОбработатьСправочникПодКлюч()

&НаСервере
Процедура ОбработатьРеквизитПодКлюч(Реквизит, ИмяСправочника, СинонимСправочника, ТипСтрока)

	Типы = Реквизит.Тип.Типы();
	
	Если Типы.Количество() = 1 Тогда
		
		Если Реквизит.Тип.Типы().Получить(0) = ТипСтрока Тогда
			
			НоваяСтрока = ОбъектыНормализацииПодКлюч.Добавить();
			НоваяСтрока.ИмяСправочника 		= ИмяСправочника;
			НоваяСтрока.СинонимСправочника 	= СинонимСправочника;
			НоваяСтрока.ИмяПоля 			= Реквизит.Имя;
			НоваяСтрока.СинонимПоля 		= ?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя); 		
			
		КонецЕсли; 	
		
	КонецЕсли;	

КонецПроцедуры // ОбработатьРеквизитПодКлюч()

&НаКлиенте
Процедура ВыполнитьНормализациюПодКлюч(Команда)
	
	Элементы.ГруппаВыполнение.Видимость					= Истина;
	Элементы.ВыполнитьНормализациюПодКлюч.Доступность	= Ложь;
	Элементы.РезультатыНормализацииПодКлюч.Видимость	= Ложь;	
	
	АдресВременногоХранилища = ?(АдресВременногоХранилища = "", ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор), АдресВременногоХранилища);
	
	Элементы.ОбъектыНормализацииПодКлюч.ТекущаяСтрока = 0;
	
	ПодключитьОбработчикОжидания("ВыполнениеНормализацииПодКлюч", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнениеНормализацииПодКлюч()
	
	Если ИдетОбработкаТекущейСтроки Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	ИдетОбработкаТекущейСтроки = Истина;
	
	Строка = ОбъектыНормализацииПодКлюч.Получить(НомерТекущейСтроки);
	
	Прогресс = 0;
	Пояснение = "Идет обработка поля """ + Строка.СинонимПоля + """ справочника """ + Строка.СинонимСправочника + """.";
	
	НачатьНормализациюТекущейСтрокиВФоне(Строка.ИмяСправочника, Строка.ИмяПоля, Строка.Переводы);
	
	ПодключитьОбработчикОжидания("ОбновитьПоказателиВыполненияПодКлюч", 1);	

КонецПроцедуры // ВыполнениеНормализацииПодКлюч()

&НаСервере
Процедура НачатьНормализациюТекущейСтрокиВФоне(ИмяСправочника, ИмяПоля, ОбработатьПереводы)

	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ИмяСправочника);
	МассивПараметров.Добавить(ИмяПоля);
	МассивПараметров.Добавить(АдресВременногоХранилища);
	МассивПараметров.Добавить(ОбработатьПереводы);

	ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбщиеФункцииСервер.НормализоватьЗначенияПоляСправочника", МассивПараметров, УникальныйИдентификатор, "Нормализация значений поля справочника");	

	ИдентификаторФоновогоЗадания = ФоновоеЗадание.УникальныйИдентификатор;	

КонецПроцедуры // НачатьНормализациюТекущейСтрокиВФоне()

&НаКлиенте
Процедура ОбновитьПоказателиВыполненияПодКлюч()
	
	СообщенияФоновогоЗадания = ПолучитьСообщенияФоновогоЗадания();
	
	КоличествоСообщений = СообщенияФоновогоЗадания.Количество();
	
	Если КоличествоСообщений = 0 Тогда
		
		Возврат;			
		
	КонецЕсли;
	
	ПоследнееСообщение = СообщенияФоновогоЗадания.Получить(КоличествоСообщений - 1).Текст;
	
	ПозицияЗапятой = Найти(ПоследнееСообщение, ",");
	
	Прогресс = Число(Лев(ПоследнееСообщение, ПозицияЗапятой - 1)); 
	
	Строка = ОбъектыНормализацииПодКлюч.Получить(НомерТекущейСтроки);
	
	Пояснение = "Идет обработка поля """ + Строка.СинонимПоля + """ справочника """ + Строка.СинонимСправочника + """. " + Прав(ПоследнееСообщение, СтрДлина(ПоследнееСообщение) - ПозицияЗапятой);
	
	Если Прогресс = 100 Тогда
		
		ИдетОбработкаТекущейСтроки = Ложь;
		
		ОтключитьОбработчикОжидания("ОбновитьПоказателиВыполненияПодКлюч");
		
		Строка.Выполнено = Истина;
		
		НомерТекущейСтроки = НомерТекущейСтроки + 1;
		
		Если НомерТекущейСтроки = ОбъектыНормализацииПодКлюч.Количество() Тогда
			
			ОтключитьОбработчикОжидания("ВыполнениеНормализацииПодКлюч");
			
			Элементы.ГруппаВыполнение.Видимость 	= Ложь;
			Элементы.НачатьНормализацию.Доступность	= Истина;
			
		Иначе
			
			Элементы.ОбъектыНормализацииПодКлюч.ТекущаяСтрока = Элементы.ОбъектыНормализацииПодКлюч.ТекущаяСтрока + 1;	
			
		КонецЕсли;
		
		ВывестиРезультатыНормализацииПодКлюч(Строка.СинонимСправочника, Строка.СинонимПоля);
		
	КонецЕсли;

КонецПроцедуры // ОбновитьПоказателиВыполненияПодКлюч()

&НаСервере
Процедура ВывестиРезультатыНормализацииПодКлюч(СинонимСправочника, СинонимПоля)
	
	ТЗРезультатыНормализации = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Если Не ТЗРезультатыНормализации = Неопределено Тогда
	
		Если ТЗРезультатыНормализации.Количество() > 0 Тогда
		
			Элементы.РезультатыНормализацииПодКлюч.Видимость = Истина;	
			
			Для каждого Строка Из ТЗРезультатыНормализации Цикл
			
				НоваяСтрока	= РезультатыНормализацииПодКлюч.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				НоваяСтрока.СинонимСправочника 	= СинонимСправочника;
				НоваяСтрока.СинонимПоля 		= СинонимПоля;
			
			КонецЦикла;
		
		КонецЕсли;	
		
		УдалитьИзВременногоХранилища(АдресВременногоХранилища);
	
	КонецЕсли;

КонецПроцедуры // ВывестиРезультатыНормализацииПодКлюч()








