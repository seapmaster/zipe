//ПРОЦЕДУРЫ И ФУНКЦИИ СОБЫТИЙ ФОРМЫ
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Закрыть(Новый Структура("ЗаписьБылаПроизведена", ЗаписьБылаПроизведена));
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементСтруктурыЗаказаЗИППриИзменении(Элемент)
	
	УстановитьВидимостьСвойствЗИП();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьСвойствЗИП();
	
	ЗИПБыло = ЭлементСтруктурыЗаказа.ЗИП;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСвойствЗИП()
	
	ЭтоЗИП = ЭлементСтруктурыЗаказа.ЗИП;
	
	Элементы.ГруппаКоличествоВЗИП.Видимость = ЭтоЗИП;
	Элементы.ЭлементСтруктурыЗаказаПомещение.Видимость = ЭтоЗИП;
	Элементы.ЭлементСтруктурыЗаказаМестоХранения.Видимость = ЭтоЗИП;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	  
	  Если Параметры.Свойство("ЭтоДобавление") Тогда
		  
		  ЭлементСтруктурыЗаказа.Наименование = Параметры.ПредметСнабжения.Наименование;
		  ЭлементСтруктурыЗаказа.ПредметСнабжения = Параметры.ПредметСнабжения;
		  ЭлементСтруктурыЗаказа.Владелец = Параметры.Владелец;
		  ЭлементСтруктурыЗаказа.Родитель = Параметры.Родитель;
		  ЭлементСтруктурыЗаказа.Тип = Справочники.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Изделие;
		  ЭлементСтруктурыЗаказа.ДобавленИзСпецификации = Истина;
		  
		  ЭлементСпецификации.СоставляющаяЧасть = Параметры.ПредметСнабжения;
		  ЭлементСпецификации.ПредметСнабжения = Параметры.Родитель.ПредметСнабжения;
		  
	  Иначе //это изменение уже существующего элемента
		  
		  СтруктураЗаказаПоКомплектующимИзделиямИЗИПОбъект = Параметры.Ссылка.ПолучитьОбъект();
		  
		  ЗначениеВРеквизитФормы(СтруктураЗаказаПоКомплектующимИзделиямИЗИПОбъект, "ЭлементСтруктурыЗаказа");
		  
		  СпецификацииПредметовСнабженияМенеджерЗаписи = РегистрыСведений.СпецификацииПредметовСнабжения.СоздатьМенеджерЗаписи();
		  
		  СпецификацииПредметовСнабженияМенеджерЗаписи.СоставляющаяЧасть = Параметры.Ссылка.ПредметСнабжения;
		  СпецификацииПредметовСнабженияМенеджерЗаписи.ПредметСнабжения = Параметры.Ссылка.Родитель.ПредметСнабжения;
		  СпецификацииПредметовСнабженияМенеджерЗаписи.ЗИП = Параметры.Ссылка.ЗИП;
		  
		  СпецификацииПредметовСнабженияМенеджерЗаписи.Прочитать();
		  
		  ЗначениеВРеквизитФормы(СпецификацииПредметовСнабженияМенеджерЗаписи, "ЭлементСпецификации");
		  
		  Если Не ЗначениеЗаполнено(ЭлементСпецификации.СоставляющаяЧасть) Тогда
			  
			  ЭлементСпецификации.СоставляющаяЧасть = Параметры.Ссылка.ПредметСнабжения;
			  ЭлементСпецификации.ПредметСнабжения = Параметры.Ссылка.Родитель.ПредметСнабжения;
			  ЭлементСпецификации.ЗИП = Параметры.Ссылка.ЗИП;
			  
		  КонецЕсли;
		  
	  КонецЕсли;
	  
	  Если ЭлементСтруктурыЗаказа.ПредметСнабжения = ЭлементСпецификации.ПредметСнабжения Тогда
		  
		   ЭлементСтруктурыЗаказа.ЗИП = Истина;
		   Элементы.ЭлементСтруктурыЗаказаЗИП.Доступность = Ложь;
		  
	  КонецЕсли;
	  
	  Заказчик = ОбщиеФункцииСервер.ПолучитьЗначениеРеквизита(ЭлементСтруктурыЗаказа.Владелец, "Заказчик");
	  ЯзыкПредставленияДанных = ОбщиеФункцииСервер.ПолучитьЗначениеРеквизита(Заказчик, "ЯзыкПредставленияДанных");
	  НаименованиеДополнительное = СтруктураЗаказаСервер.ПолучитьДополнительноеНаименование(ЭлементСтруктурыЗаказа.ПредметСнабжения, ЯзыкПредставленияДанных);
	
	  ПолучитьОписаниеИерархии();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьОписаниеИерархии()
	
	Отбор = Новый Структура("ЭлементСтруктуры", ЭлементСтруктурыЗаказа);
	
	ОписаниеИерархии = РегистрыСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.Получить(Отбор).ОписаниеИерархии;
	
	Если Не ЗначениеЗаполнено(ОписаниеИерархии) Тогда
		
		МассивРодителейЭлемента = Новый Массив;
		
		ЗаполнитьМассивРодителейЭлемента(ЭлементСтруктурыЗаказа, МассивРодителейЭлемента);
		
		ТекущийИндекс = МассивРодителейЭлемента.Количество() - 1;
		
		Если ТекущийИндекс >= 0 Тогда
			
			ТекущееОписаниеИерархии = "";
			
			Пока ТекущийИндекс >= 0 Цикл
				
				ТекущееОписаниеИерархии = Строка(МассивРодителейЭлемента[ТекущийИндекс])+"/";
				
				ТекущийИндекс = ТекущийИндекс - 1;
				
			КонецЦикла;
			
			ОписаниеИерархии = Лев(ТекущееОписаниеИерархии, СтрДлина(ТекущееОписаниеИерархии) - 1);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассивРодителейЭлемента(Элемент, МассивРодителейЭлемента = Неопределено)
	 
	Родитель = Элемент.Родитель; 
	 
	Если ЗначениеЗаполнено(Родитель) Тогда
		
		МассивРодителейЭлемента.Добавить(Родитель);
		
		ЗаполнитьМассивРодителейЭлемента(Родитель, МассивРодителейЭлемента);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ЗаписатьЭлементыСтруктурыЗаказаИСпецификации() Тогда
		
		Закрыть(Новый Структура("ЗаписьБылаПроизведена", Истина));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписьБылаПроизведена = Истина;
	
	ЗаписатьЭлементыСтруктурыЗаказаИСпецификации();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеОбязательныхПолей()
	
	РезультатПроверки = Новый Структура("ПроверкаПройдена, Ошибки", Истина, "");
	
	ПроверитьРеквизит(ЭлементСтруктурыЗаказа, "ТипСоставляющейЧасти", "Тип", РезультатПроверки);
	ПроверитьРеквизит(ЭлементСтруктурыЗаказа, "Количество", "Количество", РезультатПроверки);
	ПроверитьРеквизит(ЭлементСпецификации, "ПричинаВыбораДляЗИП", "Причина выбора для ЗИП", РезультатПроверки);
	
	Возврат РезультатПроверки;
	
КонецФункции

&НаСервере
Процедура ПроверитьРеквизит(Элемент, ИмяРеквизита, СинонимРеквизита, РезультатПроверки)
	
	Если Не ЗначениеЗаполнено(Элемент[ИмяРеквизита]) Тогда
		
		Ошибки = РезультатПроверки.Ошибки + "Не заполнено значение реквизита " + СинонимРеквизита + Символы.ПС; 
		
		РезультатПроверки.Вставить("ПроверкаПройдена", Ложь);
		РезультатПроверки.Вставить("Ошибки", Ошибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьЭлементыСтруктурыЗаказаИСпецификации()
	
	РезультатПроверки = ПроверитьЗаполнениеОбязательныхПолей();
	
	Если Не РезультатПроверки.ПроверкаПройдена Тогда
		
		Сообщить(РезультатПроверки.Ошибки, СтатусСообщения.Важное);
		Возврат Ложь;
		
	КонецЕсли;
	
	СтруктураЗаказаПоКомплектующимИзделиямИЗИПОбъект = РеквизитФормыВЗначение("ЭлементСтруктурыЗаказа", Тип("СправочникОбъект.СтруктураЗаказаПоКомплектующимИзделиямИЗИП"));
	
	НачатьТранзакцию();
	
	Попытка
			
		СтруктураЗаказаПоКомплектующимИзделиямИЗИПОбъект.Записать();
		
	Исключение
		
		ОтменитьТранзакцию();
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
		
	КонецПопытки;
	
	РезультатЗаписиСпецификации = ЗаписатьВРегистрыСпецификаций();
	
	Если Не РезультатЗаписиСпецификации.Выполнено Тогда
		
		ОтменитьТранзакцию();
		Сообщить(РезультатЗаписиСпецификации.Описание, СтатусСообщения.Важное);
		Возврат Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗИПБыло = ЭлементСтруктурыЗаказа.ЗИП Тогда
		
		НаборЗаписи = РегистрыСведений.СпецификацииПредметовСнабжения.СоздатьНаборЗаписей();
		НаборЗаписи.Отбор.ПредметСнабжения.Установить(ЭлементСтруктурыЗаказа.Родитель.ПредметСнабжения);
		НаборЗаписи.Отбор.СоставляющаяЧасть.Установить(ЭлементСтруктурыЗаказа.ПредметСнабжения);
		НаборЗаписи.Прочитать();
		Если НаборЗаписи.Количество() = 1 Тогда
			НаборЗаписи[0].ЗИП = Объект.ЗИП;
			НаборЗаписи.Записать();
		КонецЕсли; 
		
		МенЗаписи = РегистрыСведений.СпецификацииПредметовСнабженияОчередьИзменений.СоздатьМенеджерЗаписи();
		МенЗаписи.ПредметСнабжения = ЭлементСтруктурыЗаказа.ПредметСнабжения;
		МенЗаписи.Период = ТекущаяДата();
		МенЗаписи.Записать();
		
		Если НЕ ЭлементСтруктурыЗаказа.Родитель.Тип = Справочники.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа Тогда
			МенЗаписи = РегистрыСведений.СпецификацииПредметовСнабженияОчередьИзменений.СоздатьМенеджерЗаписи();
			МенЗаписи.ПредметСнабжения = ЭлементСтруктурыЗаказа.Родитель.ПредметСнабжения;
			МенЗаписи.Период = ТекущаяДата();
			МенЗаписи.Записать();
		КонецЕсли; 
		
	КонецЕсли; 
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗаписатьВРегистрыСпецификаций()
	
	//дополняем значения реквизитов спецификации
	ЭлементСпецификации.ЗИП = ЭлементСтруктурыЗаказа.ЗИП;
	ЭлементСпецификации.Тип = ЭлементСтруктурыЗаказа.ТипСоставляющейЧасти;
	ЭлементСпецификации.Количество = ЭлементСтруктурыЗаказа.Количество;
	
	//получаем существующую спецификацию родителя без данной составляющей части
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения КАК ПредметСнабжения,
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть КАК СоставляющаяЧасть,
	|	СпецификацииПредметовСнабжения.ЗИП КАК ЗИП,
	|	СпецификацииПредметовСнабжения.Количество КАК Количество,
	|	СпецификацииПредметовСнабжения.НомерПозиции КАК НомерПозиции,
	|	СпецификацииПредметовСнабжения.Тип КАК Тип,
	|	СпецификацииПредметовСнабжения.ОбозначениеСНК КАК ОбозначениеСНК,
	|	СпецификацииПредметовСнабжения.ПричинаВыбораДляЗИП КАК ПричинаВыбораДляЗИП,
	|	СпецификацииПредметовСнабжения.УказательНаЭлементСхемы КАК УказательНаЭлементСхемы,
	|	СпецификацииПредметовСнабжения.Взаимозаменяемость КАК Взаимозаменяемость,
	|	СпецификацииПредметовСнабжения.ПризнакПодбора КАК ПризнакПодбора,
	|	СпецификацииПредметовСнабжения.ОбозначениеЗаготовки КАК ОбозначениеЗаготовки,
	|	"""" КАК СведенияОбИзменениях
	|ИЗ
	|	РегистрСведений.СпецификацииПредметовСнабжения КАК СпецификацииПредметовСнабжения
	|ГДЕ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения = &ПредметСнабжения
	|	И (НЕ СпецификацииПредметовСнабжения.СоставляющаяЧасть = &СоставляющаяЧасть
	|			ИЛИ НЕ СпецификацииПредметовСнабжения.ЗИП = &ЗИП)";
	Запрос.УстановитьПараметр("ПредметСнабжения", ЭлементСпецификации.ПредметСнабжения);
	Запрос.УстановитьПараметр("СоставляющаяЧасть", ЭлементСпецификации.СоставляющаяЧасть);
	Запрос.УстановитьПараметр("ЗИП", ЭлементСпецификации.ЗИП);
	
	ТаблицаСпецификации = Запрос.Выполнить().Выгрузить();
	
	СтрокаТаблицыСпецификации = ТаблицаСпецификации.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТаблицыСпецификации, ЭлементСпецификации);
	СтрокаТаблицыСпецификации.СведенияОбИзменениях = СведенияОбИзменениях;
	
	//вызываем процедуру записи в регистр спецификаций, возвращаем ее значение
	РезультатЗаписиСпецификации = СтруктураЗаказаСервер.ЗаписатьСпецификациюПредметаСнабжения(ЭлементСпецификации.ПредметСнабжения, ТаблицаСпецификации);
	
	Возврат РезультатЗаписиСпецификации;
	
КонецФункции