
////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Заявка", Заявка) Тогда
		
		Элементы.Заявка.ТолькоПросмотр = Истина;
		
	КонецЕсли;

КонецПроцедуры //ПриСозданииНаСервере

////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если ПустаяСтрока(ПутьКФайлу) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для запуска обработки необходимо предварительно выбрать файл Microsoft Excel.'"), , "ПутьКФайлу");
		Возврат;
	КонецЕсли; 
	
	ПолучитьТаблицу();
	СформироватьТабличнуюЧастьПредметыСнабженияНаСервере();
	
КонецПроцедуры //Загрузить

&НаКлиенте
Процедура СоздатьКоммерческоеПредложение(Команда)
	
	Ошибки = Неопределено;
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Заявка) Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Заявка", НСтр("ru = 'Для создания документа необходимо выбрать заявку.'"), Неопределено);
				
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ЗапросНаКоммерческоеПредложение) Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ЗапросНаКоммерческоеПредложение", НСтр("ru = 'Для создания документа необходимо выбрать запрос на коммерческое предложение.'"), Неопределено);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НомерКП) Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "НомерКП", НСтр("ru = 'Для создания документа необходимо указать номер коммерческого предложения.'"), Неопределено);
		
	КонецЕсли;
			
	Если ТаблицаПредметыСнабжения.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ТаблицаПредметыСнабжения", НСтр("ru = 'Нет данных для загрузки.'"), Неопределено);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	Если Не Отказ Тогда
		
		СформироватьДокументКонтракт();

	КонецЕсли;
	
КонецПроцедуры // СоздатьКоммерческоеПредложение

////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Асинх Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = "Excel (*.xlsx;*.xls)|*.xlsx;*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	
	Обещание =  ДиалогОткрытияФайла.ВыбратьАсинх();
	РезультатАсинх = Ждать Обещание;
	Если Не РезультатАсинх = Неопределено Тогда
		ПутьКФайлу = РезультатАсинх[0];
	КонецЕсли; // Если Не РезультатАсинх = Неопределено Тогда

КонецПроцедуры //ПутьКФайлуНачалоВыбора

&НаКлиенте
Процедура ПолучитьТаблицу()
	
	ТаблицаПредметыСнабжения.Очистить();
	
	ПараметрыФайла = РаботаСФайламиOfficeКлиент.ПодготовитьФайлКЧтению(ПутьКФайлу, "ТабличныйДокумент");
	Если ПараметрыФайла = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если ПараметрыФайла = Неопределено Тогда
	
	ТабличныйДокумент = РаботаСФайламиOffice.ПрочитатьФайлВТабличныйДокумент(ПараметрыФайла.Адрес, ПараметрыФайла);
	Если ТабличныйДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если ТабличныйДокумент = Неопределено Тогда
	
	Для Строка = 3 По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		ПредметСнабжения = ТабличныйДокумент.Область(Строка, 3).Текст;
		Если НЕ ЗначениеЗаполнено(ПредметСнабжения) Тогда
			Продолжить;
		КонецЕсли; // Если НЕ ЗначениеЗаполнено(ПредметСнабжения) Тогда
		
		НоваяСтрока = ТаблицаПредметыСнабжения.Добавить();
		
		НоваяСтрока.Идентификатор 		= ТабличныйДокумент.Область(Строка, 1).Текст;
		НоваяСтрока.Входимость			= ТабличныйДокумент.Область(Строка, 2).Текст;
		НоваяСтрока.ПредметСнабжения 	= ТабличныйДокумент.Область(Строка, 3).Текст;
		НоваяСтрока.ЕдиницаИзмерения 	= ТабличныйДокумент.Область(Строка, 5).Текст;
		НоваяСтрока.ОбозначениеТУ	 	= ТабличныйДокумент.Область(Строка, 7).Текст;
		
		НоваяСтрока.Количество	 		= СтрЗаменить(ТабличныйДокумент.Область(Строка, 6).Текст, Символы.НПП,"");
		НоваяСтрока.СрокИзготовления   	= СтрЗаменить(ТабличныйДокумент.Область(Строка, 9).Текст, Символы.НПП,"");
		НоваяСтрока.Цена   				= СтрЗаменить(ТабличныйДокумент.Область(Строка, 10).Текст, Символы.НПП,"");
		
	КонецЦикла; // Для Строка = 3 По ТабличныйДокумент.ВысотаТаблицы Цикл
		
КонецПроцедуры //ПолучитьТаблицу 

&НаСервере
Процедура СформироватьДокументКонтракт()
	
	ДокументКонтрактОбъект = Документы.Контракт.СоздатьДокумент();
	ДокументКонтрактОбъект.Дата 				= ТекущаяДата();
	ДокументКонтрактОбъект.НомерКонтракта		= НомерКП;
	ДокументКонтрактОбъект.Вид 					= Перечисления.ВидыКонтрактов.КонтрактСПоставщиком;
	ДокументКонтрактОбъект.Тип 					= Перечисления.ТипыКонтрактов.КоммерческоеПредложение;
	ДокументКонтрактОбъект.Контрагент 			= ЗапросНаКоммерческоеПредложение.Поставщик;
	ДокументКонтрактОбъект.Валюта 				= ЗапросНаКоммерческоеПредложение.Валюта;
	ДокументКонтрактОбъект.Статус 				= Перечисления.СтатусыКонтрактов.Активен;
	ДокументКонтрактОбъект.ОтветственноеЛицо 	= Пользователи.ТекущийПользователь();
	
	Для Каждого СтрокаТЗПредметыСнабжения Из ТЗПредметыСнабжения Цикл
		
		НоваяСтрока = ДокументКонтрактОбъект.ПредметыСнабжения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗПредметыСнабжения);
		
		Если ЗначениеЗаполнено(НоваяСтрока.ПредметСнабжения) Тогда
			НоваяСтрока.ПредметСнабженияИсходный = НоваяСтрока.ПредметСнабжения;
		КонецЕсли;
		
		НоваяСтрока.СрокПоставки = СтрокаТЗПредметыСнабжения.СрокИзготовления;//?
		НоваяСтрока.Заявка 		 = Заявка;
		НайденныеСтроки 		 = Заявка.Спецификация.НайтиСтроки(Новый Структура("ПредметСнабжения, ЕдиницаИзмерения", НоваяСтрока.ПредметСнабжения, НоваяСтрока.ЕдиницаИзмерения)); 
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			НоваяСтрока.ИдентификаторПозиции = НайденныеСтроки[0].ИдентификаторПозиции;
			
		КонецЕсли;

	КонецЦикла;
	
	Попытка 
		
		ДокументКонтрактОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ Коммерческое предложение №%1 от %2 успешно записан'"), СокрЛП(ДокументКонтрактОбъект.Номер), ДокументКонтрактОбъект.Дата); 				
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
		
		КоммерческоеПредложение = ДокументКонтрактОбъект.Ссылка;
		Элементы.СоздатьКоммерческоеПредложение.Доступность = Ложь;
		
	Исключение
		
		ТекстОшибки = НСтр("ru = 'Не удалось записать документ коммерческого предложения!'"); 				
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		
	КонецПопытки;   

КонецПроцедуры //СформироватьДокументКонтракт

&НаСервере
Процедура СформироватьТабличнуюЧастьПредметыСнабженияНаСервере()
	
	ТЗ = РеквизитФормыВЗначение("ТЗПредметыСнабжения");
	ТЗ.Очистить();
	
	Для Каждого СтрокаТЗ Из ТаблицаПредметыСнабжения Цикл
		
		НоваяСтрока = ТЗ.Добавить();
		НоваяСтрока.НомерСтроки = ТЗ.Количество();
		НоваяСтрока.ПредметСнабжения = Справочники.КаталогПредметовСнабжения.НайтиПоРеквизиту("UID", СтрокаТЗ.Идентификатор);
		НоваяСтрока.ЕдиницаИзмерения = Справочники.ОКЕИ.НайтиПоНаименованию(СтрокаТЗ.ЕдиницаИзмерения);
		НоваяСтрока.Количество = СтрокаТЗ.Количество;
		НоваяСтрока.Цена = СтрокаТЗ.Цена;
		НоваяСтрока.СрокИзготовления = СтрокаТЗ.СрокИзготовления;
								
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТЗ, "ТЗПредметыСнабжения");
	
КонецПроцедуры //СформироватьТабличнуюЧастьПредметыСнабженияНаСервере





