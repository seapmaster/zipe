&НаСервере
Функция СоздатьЭлементСтруктурыЗаказа(Знач ЦепочкаПредметовСнабжения, СоставляющаяЧасть = Неопределено, НомерПозиции = Неопределено)
	
	// Параметр Родитель заполняется при вызове из функции СоздатьЭлементыСтруктурыЗаказов() и рекурсивном вызове
	// Параметр ЭлементСтруктурыЗаказа заполняется при вызове из функции СоздатьПодчиненныеЭлементыДляЭлементаСтруктурыЗаказа()
	
	Результат = Новый Структура("Выполнено, Описание, НеОбрабатывать, ОписаниеОшибки", Ложь, "", Ложь, "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Различные
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть КАК СоставляющаяЧасть,
	|	СпецификацииПредметовСнабжения.ЗИП КАК ЗИП,
	|	СпецификацииПредметовСнабжения.Количество КАК Количество,
	|	СпецификацииПредметовСнабжения.Тип КАК Тип,
	|	СпецификацииПредметовСнабжения.НомерПозиции КАК НомерПозиции,
	|	ВЫБОР
	|		КОГДА СпецификацииПредметовСнабжения.СоставляющаяЧасть В (&ЦепочкаПредметовСнабжения)
	|				И НЕ СпецификацииПредметовСнабжения.СоставляющаяЧасть = &ПредметСнабжения
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Зацикливание
	|ИЗ
	|	РегистрСведений.СпецификацииПредметовСнабжения КАК СпецификацииПредметовСнабжения
	|ГДЕ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения = &ПредметСнабжения
	|	И НЕ СпецификацииПредметовСнабжения.ЗИП";
	
	Запрос.УстановитьПараметр("ПредметСнабжения", СоставляющаяЧасть);
	Запрос.УстановитьПараметр("ЦепочкаПредметовСнабжения", ЦепочкаПредметовСнабжения); //++ 01.11.2017 Веденеев П. //изменен механизм защиты от зацикливания
	
	ЦепочкаПредметовСнабженияКопия = Новый Массив;
	Для каждого ЭлементЦепочки Из ЦепочкаПредметовСнабжения Цикл
		ЦепочкаПредметовСнабженияКопия.Добавить(ЭлементЦепочки);
	КонецЦикла;
	
	ЦепочкаПредметовСнабженияКопия.Добавить(СоставляющаяЧасть);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Результат.Выполнено = Истина;
		Возврат Результат;	
		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		МаксимальныйИндекс = ЦепочкаПредметовСнабжения.ВГраница();
		
		Если Выборка.Зацикливание Тогда //++ 08.11.2017 Веденеев П. 
			
			Дерево = РеквизитФормыВЗначение("ДеревоПС", Тип("ДеревоЗначений"));
			
			ТекСтроки = Дерево.Строки;
			
			МассВсехРодителей = ПолучитьМассВсехРодителей(ЭлементЦепочки);
			Верх = МассВсехРодителей.ВГраница(); Путь = "";
			Для сч=0 По Верх Цикл
				Тек = МассВсехРодителей.Получить(Верх);
				
				НовСтр = ТекСтроки.Добавить();
				НовСтр.ПредметСнабжения = Тек;
				
				Верх=Верх-1; ТекСтроки = НовСтр.Строки;
			КонецЦикла; 
			НовСтр = ТекСтроки.Добавить();
			НовСтр.ПредметСнабжения = ЭлементЦепочки;
			
			ЗначениеВРеквизитФормы(Дерево, "ДеревоПС");
			
			Продолжить;
			
		КонецЕсли;
		
		РезультатСозданияЭлементаСтруктурыЗаказа = СоздатьЭлементСтруктурыЗаказа(ЦепочкаПредметовСнабженияКопия, Выборка.СоставляющаяЧасть, Выборка.НомерПозиции);
		
		Если Не РезультатСозданияЭлементаСтруктурыЗаказа.Выполнено Тогда
			
			Результат.Описание = РезультатСозданияЭлементаСтруктурыЗаказа.Описание;
			Результат.НеОбрабатывать = РезультатСозданияЭлементаСтруктурыЗаказа.НеОбрабатывать;
			Результат.ОписаниеОшибки = РезультатСозданияЭлементаСтруктурыЗаказа.ОписаниеОшибки;
			Возврат Результат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Результат.Выполнено = Истина;
	Возврат Результат;	

КонецФункции // СоздатьЭлементСтруктурыЗаказа()

&НаСервере
Функция ПолучитьМассВсехРодителей(ПС, Масс = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения КАК ПредметСнабжения
	|ИЗ
	|	РегистрСведений.СпецификацииПредметовСнабжения КАК СпецификацииПредметовСнабжения
	|ГДЕ
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть = &СоставляющаяЧасть
	|	И НЕ СпецификацииПредметовСнабжения.ЗИП";
	Запрос.УстановитьПараметр("СоставляющаяЧасть", ПС);
	
	Если Масс = Неопределено Тогда
		Масс = Новый Массив;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Масс.Найти(Выборка.ПредметСнабжения) = Неопределено Тогда
			Масс.Добавить(Выборка.ПредметСнабжения);
			ПолучитьМассВсехРодителей(Выборка.ПредметСнабжения, Масс);
		Иначе
			Стоп = Истина;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат Масс;
	
КонецФункции

&НаСервере
Функция НайтиЗацикливаниеНаСервереОбщее()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(СпецификацииПС.ПредметСнабжения.Код) КАК МаксКод,
	|	КОЛИЧЕСТВО(СпецификацииПС.ПредметСнабжения) КАК КолВсего
	|ИЗ
	|	РегистрСведений.СпецификацииПредметовСнабжения КАК СпецификацииПС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииПредметовСнабженияОчередьИзменений.СрезПоследних КАК СпецПСОчередьСрезПоследних
	|		ПО СпецификацииПС.ПредметСнабжения = СпецПСОчередьСрезПоследних.ПредметСнабжения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|		ПО СпецификацииПС.ПредметСнабжения = СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения
	|ГДЕ
	|	СпецПСОчередьСрезПоследних.ПредметСнабжения ЕСТЬ NULL
	|	И НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();

	Стру = Новый Структура();
	
	Если выборка.Следующий() Тогда
		стру.Вставить("КолВсего", выборка.КолВсего);
		стру.Вставить("МаксНомер", выборка.МаксКод);
	КонецЕсли;
	
	Возврат Стру;
	
КонецФункции 

&НаСервере
Процедура НайтиЗацикливаниеНаСервере(Порция, Номер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СпецификацииПС.ПредметСнабжения КАК ПредметСнабжения,
	|	СпецификацииПС.ПредметСнабжения.Код КАК ПредметСнабженияКод
	|ИЗ
	|	РегистрСведений.СпецификацииПредметовСнабжения КАК СпецификацииПС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииПредметовСнабженияОчередьИзменений.СрезПоследних КАК СпецПСОчередьСрезПоследних
	|		ПО СпецификацииПС.ПредметСнабжения = СпецПСОчередьСрезПоследних.ПредметСнабжения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|		ПО СпецификацииПС.ПредметСнабжения = СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения
	|ГДЕ
	|	СпецПСОчередьСрезПоследних.ПредметСнабжения ЕСТЬ NULL
	|	И НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка ЕСТЬ NULL
	|	И СпецификацииПС.ПредметСнабжения.Код >= &НачКод
	|	И СпецификацииПС.ПредметСнабжения.Код <= &КонКод
	|	И НЕ СпецификацииПС.ЗИП
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацииПС.ПредметСнабжения.Код";
	
	Запрос.УстановитьПараметр("НачКод", ПРАВ("0000000000" + Формат(Номер,"ЧГ="),9));
	Запрос.УстановитьПараметр("КонКод", ПРАВ("0000000000" + Формат(Число(Номер) + Порция,"ЧГ="),9));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Масс = новый Массив;
		Масс.Добавить(Выборка.ПредметСнабжения);
		
		СоздатьЭлементСтруктурыЗаказа(Масс, Выборка.ПредметСнабжения);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗацикливания(Команда)
	
	ВремяНачалаОбработки = ТекущаяДата(); 
	
	Сообщить("" + ТекущаяДата() + ": Начало обработки");
	
	УправлениеИнтерфейсом.ВывестиТекущееСостояние("Заполнение исходных данных", ВремяНачалаОбработки, 1, 1);
	
	Стру = НайтиЗацикливаниеНаСервереОбщее();
	
	ОбщееКоличество = Стру.КолВсего;
	
	Порция = МАКС(Цел(ОбщееКоличество/1000), 1);
	
	ТекСчетчик = 0; Номер = 0;

	Пока ТекСчетчик < ОбщееКоличество Цикл
		
		УправлениеИнтерфейсом.ВывестиТекущееСостояние("Поиск зацикливаний...", ВремяНачалаОбработки, ТекСчетчик, ОбщееКоличество);
		
		НайтиЗацикливаниеНаСервере(Порция, Номер);
		
		ТекСчетчик = МИН(ТекСчетчик + Порция, ОбщееКоличество);
		
		Номер = Номер + Порция;
		
		ОбработкаПрерыванияПользователя();
		
	КонецЦикла; 
	
	СтрПрошло = "";
	Если ТекСчетчик Тогда
		
		УправлениеИнтерфейсом.ВывестиТекущееСостояние("Поиск зацикливаний...", ВремяНачалаОбработки,ОбщееКоличество,ОбщееКоличество,СтрПрошло);
		
	КонецЕсли;
	
	Сообщить("" + ТекущаяДата() + ": Окончание обработки (затрачено: " + СтрПрошло + ")");
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Элемент.ТекущиеДанные.ПредметСнабжения);
	
КонецПроцедуры
