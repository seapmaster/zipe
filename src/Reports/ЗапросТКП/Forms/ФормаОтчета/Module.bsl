&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗапросЗаявка", ЗапросЗаявка) Тогда
		
		УстановитьСписокВыбораПоставщиков();
		
		Если ТипЗнч(ЗапросЗаявка) = Тип("ДокументСсылка.Заявка") Тогда
			
			Поставщик = ЗапросЗаявка.ИсполнительДЗО;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораПоставщиков()
	
	Поставщик = Справочники.Организации.ПустаяСсылка();
	Элементы.Поставщик.СписокВыбора.Очистить();
	
	Если ЗначениеЗаполнено(ЗапросЗаявка) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаявкаСпецификация.ИсполнительДЗО КАК Поставщик
		|ИЗ
		|	Документ.Заявка.Спецификация КАК ЗаявкаСпецификация
		|ГДЕ
		|	ЗаявкаСпецификация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заявка.Ссылка КАК Ссылка
		|			ИЗ
		|				Документ.Заявка КАК Заявка
		|			ГДЕ
		|				Заявка.ЗапросТКПRFP = &ЗапросЗаявка
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				Заявка.Ссылка КАК Ссылка
		|			ИЗ
		|				Документ.Заявка КАК Заявка
		|			ГДЕ
		|				Заявка.Ссылка = &ЗапросЗаявка)
		|	И НЕ ЗаявкаСпецификация.ИсполнительДЗО = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
		Запрос.УстановитьПараметр("ЗапросЗаявка", ЗапросЗаявка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Элементы.Поставщик.СписокВыбора.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Поставщик"));
			
			Если ТипЗнч(ЗапросЗаявка) = Тип("ДокументСсылка.Заявка") Тогда
				
				Если ЗначениеЗаполнено(ЗапросЗаявка.ИсполнительДЗО) И Элементы.Поставщик.СписокВыбора.НайтиПоЗначению(ЗапросЗаявка.ИсполнительДЗО) = Неопределено Тогда
					
					Элементы.Поставщик.СписокВыбора.Добавить(ЗапросЗаявка.ИсполнительДЗО);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеПараметра(ИмяПараметра)
	
	ПараметрыОтчета = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;
	
	ПараметрОтчета = ПараметрыОтчета.Найти(ИмяПараметра);
	ПараметрОтчета.Использование = Истина;
	ПараметрОтчета.Значение = ЭтаФорма[ИмяПараметра];
	
	// ++ 23.05.2018 10:46:55 Базунов Д.А. Задача: 
	ВариантМодифицирован = Ложь;
	// -- 23.05.2018 10:46:55 Базунов Д.А. Задача:
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросЗаявкаПриИзменении(Элемент)
	
	УстановитьСписокВыбораПоставщиков();
	УстановитьЗначениеПараметра("ЗапросЗаявка");
	УстановитьЗначениеПараметра("Поставщик");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	
	УстановитьЗначениеПараметра("ЗапросЗаявка");
	УстановитьЗначениеПараметра("Поставщик");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ЗапросЗаявка) Тогда
	
		УстановитьЗначениеПараметра("ЗапросЗаявка");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Поставщик) Тогда
		
		УстановитьЗначениеПараметра("Поставщик");
		
	КонецЕсли;
	
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры

