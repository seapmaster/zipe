
////////////////////////////////// КОМАНДЫ ФОРМЫ //////////////////////////////////////////////////////////
#Область КомандыФормы
&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьНаСервере();
	
КонецПроцедуры // Сформировать
#КонецОбласти

////////////////////////////////// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ////////////////////////////////////
&НаСервере
Процедура СформироватьНаСервере()
	
	Если Не ЗначениеЗаполнено(Корабль) Тогда
		Возврат;
	КонецЕсли;
	
	ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
	//получение данных
	МассивЭлементовПоОтбору = ОтчетОбъект.ПолучитьЭлементыПоОтборам(Корабль, СписокПоставщиков, СписокРазработчиков, СписокИзготовителей, ТолькоИзделия);
	
	РезультатЗапроса = ОтчетОбъект.ПолучитьВсеЭлементыСтруктурыКорабля(МассивЭлементовПоОтбору, Корабль);
	
	ТЗПодходящихЭлементов 	= РезультатЗапроса.Выгрузить();	
	
	МассивПС 		= ТЗПодходящихЭлементов.ВыгрузитьКолонку("ПредметСнабжения");
	МассивЭлементов = ТЗПодходящихЭлементов.ВыгрузитьКолонку("Ссылка");
	
	ТаблицаДанных			= ОтчетОбъект.ПолучитьТаблицуДанных(МассивПС, МассивЭлементов);
	ТабИзготИПоставщики 	= ОтчетОбъект.ПолучитьТабИзготовителейИПоставщиков(МассивЭлементов, СписокПоставщиков, СписокРазработчиков, СписокИзготовителей);	
	
	//вывод табличного документа
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Макет", 				ОтчетОбъект.ПолучитьМакет("Макет"));
	СтруктураПараметров.Вставить("РезультатЗапроса", 	РезультатЗапроса);
	СтруктураПараметров.Вставить("ТаблицаДанных", 		ТаблицаДанных);
	СтруктураПараметров.Вставить("ТабИзготИПоставщики", ТабИзготИПоставщики);
	
	ВыводРезультатаВТабличныйДокумент(СтруктураПараметров);	
		
КонецПроцедуры // СформироватьНаСервере

#Область ВыводТабличногоДокумента
&НаСервере
Процедура ВыводРезультатаВТабличныйДокумент(СтруктураПараметров)
	
	Макет 				= СтруктураПараметров.Макет;
	РезультатЗапроса 	= СтруктураПараметров.РезультатЗапроса;
	ТаблицаДанных		= СтруктураПараметров.ТаблицаДанных;
	ТабИзготИПоставщики	= СтруктураПараметров.ТабИзготИПоставщики;
	стрОбластей			= ПолучитьСтруктуруОбластей(Макет);
	мУжеДобавлено		= Новый Массив;	
	
	ВывестиШапку(Макет);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВерхнийУровень = "";
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		ЭлементСтруктуры = Выборка.Ссылка;
		Если ЭлементСтруктуры = ВерхнийУровень Тогда
			Продолжить;
		КонецЕсли;
		
		Если УжеДобавлено(ЭлементСтруктуры, мУжеДобавлено) Тогда	//это функция-костыль, если будет проблема с производительностьюся надо править
			Продолжить;
		КонецЕсли;
		
		СтруктураДанных = ПолучитьСтруктуруДанных(ЭлементСтруктуры, ТаблицаДанных);
		
		Тип = СтруктураДанных.Тип;
		Если Тип <> "ЗИП"  Тогда
			ВерхнийУровень = ЭлементСтруктуры;
		КонецЕсли;
		
		ДополнитьСтруктуруДанныхПоставщиками(СтруктураДанных, ТабИзготИПоставщики, Выборка.ПредметСнабжения);
		
		Область = ОпределитьВидОбласти(стрОбластей, Выборка.ТипЗаписи(), СтруктураДанных, Тип);
		
		Область.Параметры.Заполнить(СтруктураДанных);
		
		ТабДок.Вывести(Область, Выборка.Уровень());
		
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиШапку(Макет)
	
	ТабДок.Очистить();
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	
	ОбластьЗаголовок.Параметры.Корабль = Корабль;
	ОбластьЗаголовок.Параметры.РасшифровкаКорабля = Корабль;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
КонецПроцедуры //ВывестиШапку

&НаСервере
Функция ПолучитьСтруктуруОбластей(Макет)
	
	Ответ = Новый Структура;
	Ответ.Вставить("ОбластьСсылкаИерархия",	Макет.ПолучитьОбласть("СсылкаИерархия"));
	Ответ.Вставить("ОбластьИерархияСЦветом",Макет.ПолучитьОбласть("СсылкаИерархияЦвет"));
	Ответ.Вставить("ОбластьСсылка",			Макет.ПолучитьОбласть("Ссылка"));
	Возврат Ответ;
	
КонецФункции //ПолучитьСтруктуруОбластей

&НаСервере
Функция ОпределитьВидОбласти(стрОбластей, ТипЗаписи_, СтруктураДанных, Тип)
	
	Если ТипЗаписи_ = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
		Область = стрОбластей.ОбластьСсылкаИерархия; 
	Иначе  
		Область = стрОбластей.ОбластьСсылка;
	КонецЕсли;
	
	Если Тип = "Изделие" И ((СписокПоставщиков.Количество() > 0 И СтруктураДанных.Поставщики = "") 
		ИЛИ (СписокРазработчиков.Количество() > 0 И СтруктураДанных.Разработчики = "")
		ИЛИ (СписокИзготовителей.Количество() > 0 И СтруктураДанных.Изготовители = "")) Тогда
		Область = стрОбластей.ОбластьИерархияСЦветом;
	КонецЕсли;
	
	Возврат Область;
	
КонецФункции // ОпределитьВидОбласти()

&НаСервере
Процедура ДополнитьСтруктуруДанныхПоставщиками(СтруктураДанных, ТабИзготИПоставщики, ПредметСнабжения)
	
	Если СтруктураДанных.Тип <> "Группа" Тогда
		нСтроки = ТабИзготИПоставщики.НайтиСтроки(Новый Структура("ПредметСнабжения", ПредметСнабжения));
		Если нСтроки.Количество() > 0 Тогда
			СтруктураДанных.Вставить("Поставщики", 		нСтроки[0].Поставщики);
			СтруктураДанных.Вставить("Разработчики", 	нСтроки[0].Разработчики);
			СтруктураДанных.Вставить("Изготовители", 	нСтроки[0].Изготовители);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ФинальноеОформлениеТабличногоДокумента ()
	
	ТабДок.ФиксацияСверху = 4;
	ТабДок.ФиксацияСлева = 2;
	
КонецПроцедуры	//ФинальноеОформлениеТабличногоДокумента
#КонецОбласти

#Область Сервисное
&НаСервере
Функция ПолучитьСтруктуруДанных(ЭлементСтруктуры, ТаблицаДанных)
	
	Отбор = Новый Структура;
	Отбор.Вставить("ЭлементСтруктуры", ЭлементСтруктуры);
	
	Строки = ТаблицаДанных.НайтиСтроки(Отбор);
	
	ТекСтрока = Строки[0];
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ИмяНаАнгл", 						ТекСтрока.ИмяНаАнгл);
	СтруктураДанных.Вставить("Тип", 							Строка(ТекСтрока.Тип));
	СтруктураДанных.Вставить("Обозначение", 					ТекСтрока.Обозначение);
	СтруктураДанных.Вставить("ОбозначениеТранслитированное", 	ТекСтрока.ОбозначениеТранслитированное);
	СтруктураДанных.Вставить("NSN", 							ТекСтрока.NSN);
	СтруктураДанных.Вставить("Представление", 					ТекСтрока.Представление);
	СтруктураДанных.Вставить("ЭлементСтруктуры", 				ЭлементСтруктуры);
	СтруктураДанных.Вставить("Поставщики", 						"");
	СтруктураДанных.Вставить("Разработчики", 					"");
	СтруктураДанных.Вставить("Изготовители", 					"");
	
	ПредставлениеИнкат = "";
	КолвоИнкат = 0;
	Для каждого ТекСтрока Из Строки Цикл
		Если ТекСтрока.КодINCAT <> Null Тогда
			КолвоИнкат = КолвоИнкат + 1;
			ПредставлениеИнкат = ПредставлениеИнкат + ТекСтрока.КодINCAT + ";" + Символы.ПС;
		КонецЕсли;	
	КонецЦикла; 
	СтруктураДанных.Вставить("КолвоИнкат", 			КолвоИнкат);
	СтруктураДанных.Вставить("ПредставлениеИнкат", 	Лев(ПредставлениеИнкат, СтрДлина(ПредставлениеИнкат) - 2));
	
	Возврат СтруктураДанных;
	
КонецФункции // ПолучитьСтруктуруДанных

&НаСервере
Функция УжеДобавлено(ЭлементСтруктуры, мУжеДобавлено)

	Ответ = Ложь;
	
	Если Не мУжеДобавлено.Найти(ЭлементСтруктуры) = Неопределено Тогда
		Ответ = Истина;
	Иначе
		мУжеДобавлено.Добавить(ЭлементСтруктуры);
	КонецЕсли;

	возврат Ответ;
	
КонецФункции // УжеДобавлено()

#КонецОбласти

