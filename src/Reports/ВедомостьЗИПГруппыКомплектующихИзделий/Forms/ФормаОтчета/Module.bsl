Перем ДанныеРасшифровки;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ОсновнаяКоманднаяПанель.ПодчиненныеЭлементы.ФормаСформировать.ИмяКоманды = "СформироватьОтчет";
	
	Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	Элементы.Результат.ОтображениеСостояния.Текст = "Отчет не сформирован. Нажмите ""Сформировать"" для получения отчета";
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРезультат()
	
	Результат.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	ОчиститьРезультат();
	
	Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	Элементы.Результат.ОтображениеСостояния.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
	Элементы.Результат.ОтображениеСостояния.Текст = "Формируется отчет...";
	
	ПодключитьОбработчикОжидания("СформироватьОтчетЗавершение", 1, Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетЗавершение() Экспорт
	
	ВыполнитьФормированиеОтчета();
	
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	Элементы.Результат.ОтображениеСостояния.Видимость = Ложь;
		
КонецПроцедуры

&НаСервере
Функция ВыполнитьФормированиеОтчета()
	    
   РеквизитФормыВЗначение("Отчет").СкомпоноватьРезультат(Результат, ДанныеРасшифровки);
   
   АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
			
КонецФункции

&НаСервере
Функция ПолучитьМакетПоИмени(ИмяМакета)
	
	Возврат РеквизитФормыВЗначение("Отчет").ПолучитьМакет(ИмяМакета);
	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		
		ЗначениеРасшифровки = ПолучитьЗначениеРасшифровки(Расшифровка, АдресДанныхРасшифровки);
		
		Если Не ЗначениеРасшифровки = Неопределено Тогда
			
			ОткрытьФорму(ЗначениеРасшифровки.ИмяФормыЭлемента, ЗначениеРасшифровки.ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.Независимый);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРасшифровки(ИдентификаторРасшифровки, АдресДанныхРасшифровки)
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	
	ЭлементРасшифровки = ДанныеРасшифровки.Элементы[ИдентификаторРасшифровки];
	
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		
		ПолеРасшифровки = ЭлементРасшифровки.ПолучитьПоля().Найти("Ссылка");
		
		Если ПолеРасшифровки = Неопределено Тогда
			
			Возврат Неопределено;
			
		Иначе
			
			ЗначениеРасшифровки = ПолеРасшифровки.Значение;
			
			ПараметрыОткрытия = Новый Структура("Владелец, Ссылка", ЗначениеРасшифровки.Владелец, ЗначениеРасшифровки);
			
			Если ЗначениеРасшифровки.Тип = Справочники.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа Тогда
				
				ИмяФормыЭлемента = "Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Форма.ФормаГруппы";
				
			Иначе
				
				ИмяФормыЭлемента = "Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Форма.ФормаИзделия";
				
			КонецЕсли;
			
			Возврат Новый Структура("ИмяФормыЭлемента, ПараметрыОткрытия", ИмяФормыЭлемента, ПараметрыОткрытия);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции