////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область Лог

Функция ДобавитьЗаписьВЛог()
	Возврат	РегистрыСведений.ИсторияЗапросовУМТО.СоздатьЗаписьИстории();
КонецФункции // ДобавитьЗаписьВЛог

Процедура ОбновитьЗаписьВЛоге(Идентификатор, Параметры)
	РегистрыСведений.ИсторияЗапросовУМТО.ОбновитьЗапись(Идентификатор, Параметры);
КонецПроцедуры // ОбновитьЗаписьВЛоге

#КонецОбласти

#Область Сервис

Функция ПолучитьПараметрыЗапроса(Запрос, Идентификатор)
	
	СтруктураПараметров = Неопределено;
	
	Попытка
		СтруктураПараметров = Новый Структура;
		Для Каждого ПараметрЗапроса Из Запрос.ПараметрыЗапроса Цикл
			СтруктураПараметров.Вставить(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла; // Для Каждого ПараметрЗапроса Из Запрос.ПараметрыЗапроса Цикл
	Исключение
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("ОписаниеОшибки", "Не удалось прочитать параметры запроса");
		ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
	КонецПопытки;
	
	Возврат СтруктураПараметров;
	
КонецФункции // ПолучитьПараметрыЗапроса

Функция ПараметрыИТелоЗапросаСтрокой(ПараметрыЗапроса, ТелоЗапроса)
	
	Возврат СтрШаблон("Parameters:
						|[ 
						|%1
						|]
						|Body:
						|{
						| %2
						|}",
						ПолучитьСтрокуОтвета(ПараметрыЗапроса),
						ТелоЗапроса);
		
КонецФункции // ПараметрыИТелоЗапросаСтрокой

Функция ПолучитьСтрокуОтвета(СтруктураОтвета)
	// Соберем JSON из структуры ответа
	РезультатJSON 			= Новый ЗаписьJSON;
	РезультатJSON.УстановитьСтроку();
	ЗаписатьJSON(РезультатJSON, СтруктураОтвета);
	СтрокаОтвета 			= РезультатJSON.Закрыть();
	Возврат СтрокаОтвета;
КонецФункции // ПолучитьСтрокуОтвета

Процедура ДобавитьПараметрыТелаЗапроса(СтруктураПараметров, ТелоЗапроса)
	
	Если ПустаяСтрока(ТелоЗапроса) Тогда
		Возврат;
	КонецЕсли; // Если ПустаяСтрока(ТелоЗапроса) Тогда
	
	СтруктураТела = ПолучитьПараметрыИзСтроки(ТелоЗапроса);
	Если Не СтруктураТела = Неопределено Тогда
		СтруктураПараметров.Вставить("body", СтруктураТела);
	КонецЕсли; // Если Не СтруктураТела = Неопределено Тогда
	
КонецПроцедуры // ДобавитьПараметрыТелаЗапроса

Функция ПолучитьПараметрыИзСтроки(СтрокаJSON)
	
	Результат = Неопределено;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
	Попытка
		Результат = ПрочитатьJSON(ЧтениеJSON);
	Исключение
	КонецПопытки;
	
	Возврат	Результат;
	
КонецФункции // ПолучитьПараметрыИзСтроки

Процедура ДополнитьСтруктуру(СтруктураПриемник, СтруктураИсточник)
	
	Для Каждого ОписаниеИсточника Из СтруктураИсточник Цикл
		СтруктураПриемник.Вставить(ОписаниеИсточника.Ключ, ОписаниеИсточника.Значение);	
	КонецЦикла; // Для Каждого ОписаниеИсточника Из СтруктураИсточник Цикл
		
КонецПроцедуры // ДополнитьСтруктуру

#КонецОбласти

#Область ОбработкаЗапроса

// ResultCode
//	0000 - не удалось обработать запрос
//	0001 - не задан метод
//	0002 - заданный метод не поддерживается
// Метод GetEquipmentProducers
//	0100 - не указаны требуемые параметры
//	0101 - запрос обработан
// Метод SetEquipmentVendors
//	0200 - не указаны требуемые параметры
//	0201 - запрос обработан
// Метод SetPrice
//	0300 - не указаны требуемые параметры
//	0301 - запрос обработан

Функция GetEquipmentProducers(СтруктураПараметров)
	
	Результат = Новый Структура("ResultCode", "0101");
	
	РезультатОбработки = ОбменСУМТО.GetEquipmentProducers(СтруктураПараметров);
	Если РезультатОбработки.Отказ Тогда 
		Результат.ResultCode = "0100";
	КонецЕсли; // Если РезультатОбработки.Отказ Тогда 
	РезультатОбработки.Удалить("Отказ");
	
	ДополнитьСтруктуру(Результат, РезультатОбработки);
	Возврат Результат;
	
КонецФункции // GetEquipmentProducers

Функция SetEquipmentVendors(СтруктураПараметров)
	
	Результат = Новый Структура("ResultCode", "0201");
	
	РезультатОбработки = ОбменСУМТО.SetEquipmentVendors(СтруктураПараметров);
	Если РезультатОбработки.Отказ Тогда 
		Результат.ResultCode = "0200";
	КонецЕсли; // Если РезультатОбработки.Отказ Тогда 
	РезультатОбработки.Удалить("Отказ");
	
	ДополнитьСтруктуру(Результат, РезультатОбработки);
	Возврат Результат;
	
КонецФункции // SetEquipmentVendors

Функция SetPrice(СтруктураПараметров)
	
	Результат = Новый Структура("ResultCode", "0301");
	
	РезультатОбработки = ОбменСУМТО.SetPrice(СтруктураПараметров);
	Если РезультатОбработки.Отказ Тогда 
		Результат.ResultCode = "0300";
	КонецЕсли; // Если РезультатОбработки.Отказ Тогда 
	РезультатОбработки.Удалить("Отказ");
	
	ДополнитьСтруктуру(Результат, РезультатОбработки);
	Возврат Результат;
	
КонецФункции // SetPrice

Функция ОбработатьЗапрос(Запрос)
	
	СтруктураОтвета 		= Новый Структура("ResultCode", "0000");
	Идентификатор			= ДобавитьЗаписьВЛог();
	ВремяНачалаОбработки	= ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	// Параметры запроса
	СтруктураПараметров = ПолучитьПараметрыЗапроса(Запрос, Идентификатор);
	Если СтруктураПараметров = Неопределено Тогда
		Возврат ПолучитьСтрокуОтвета(СтруктураОтвета);
	КонецЕсли; // Если СтруктураПараметров = Неопределено Тогда
	
	// Тело запроса
	Попытка
		ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку(); 
	Исключение
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("ОписаниеОшибки", "Не удалось прочитать тело запроса");
		ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
		Возврат ПолучитьСтрокуОтвета(СтруктураОтвета);	
	КонецПопытки;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ПараметрыЗапроса", ПараметрыИТелоЗапросаСтрокой(СтруктураПараметров, ТелоЗапроса));
	ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
	
	ДобавитьПараметрыТелаЗапроса(СтруктураПараметров, ТелоЗапроса);
	
	// Обработка
	Метод = "";
	Попытка
		Метод 					= Запрос.ПараметрыURL.Получить("method_name");
		Если Метод = Неопределено Тогда                  	
			СтруктураОтвета.ResultCode = "0001";
		Иначе
			
			ПараметрыЗаписи = Новый Структура;
			ПараметрыЗаписи.Вставить("Метод", Метод);
			ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
			
			// Команда GetEquipmentProducers 
			Если  ВРег(Метод) = ВРег("GetEquipmentProducers") Тогда
				СтруктураОтвета	= GetEquipmentProducers(СтруктураПараметров);
				
			// Команда SetEquipmentVendors 
			ИначеЕсли  ВРег(Метод) = ВРег("SetEquipmentVendors") Тогда
				СтруктураОтвета	= SetEquipmentVendors(СтруктураПараметров);
				
			// Команда SetPrice 
			ИначеЕсли  ВРег(Метод) = ВРег("SetPrice") Тогда
				СтруктураОтвета	= SetPrice(СтруктураПараметров);			
			Иначе
				СтруктураОтвета.ResultCode = "0002";
			КонецЕсли; // Если  ВРег(Метод) = ВРег("GetEquipmentProducers") Тогда
			
		КонецЕсли; // Если Метод = Неопределено Тогда
		
	Исключение
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("ОписаниеОшибки", "Не удалось обработать запрос");
		ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
		Возврат ПолучитьСтрокуОтвета(СтруктураОтвета);
	КонецПопытки;      	

	
	Ответ = ПолучитьСтрокуОтвета(СтруктураОтвета);
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ВремяОбработкиЗапроса", 	ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаОбработки); 
	ПараметрыЗаписи.Вставить("Ответ", 					Ответ); 
	ОбновитьЗаписьВЛоге(Идентификатор, ПараметрыЗаписи);
	
	Возврат Ответ;
КонецФункции // ОбработатьЗапрос

#КонецОбласти

/////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Функция APIV1Method(Запрос)
	Ответ 					= Новый HTTPСервисОтвет(200);
	ДанныеДляОтвета			= ОбработатьЗапрос(Запрос);
	
	Если ТипЗнч(ДанныеДляОтвета) = Тип("Строка") Тогда
		Ответ.УстановитьТелоИзСтроки(ДанныеДляОтвета);					
		Ответ.Заголовки.Вставить("Content-Type","text/json; charset=utf-8");
	КонецЕсли; // Если ТипЗнч(ДанныеДляОтвета) = Тип("Строка") Тогда	
	
	Возврат Ответ;
КонецФункции // APIV1Method
