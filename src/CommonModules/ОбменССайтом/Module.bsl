/////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ПолучитьПочту

Функция СохранитьСообщение(Сообщение)
	Результат = Неопределено;
	
	Для Каждого Идентификатор Из Сообщение.Идентификатор Цикл
		Если Документы.ПочтовоеСообщение.СообщениеСуществует(Идентификатор) Тогда
			Возврат Результат;
		КонецЕсли; // Если Документы.ПочтовоеСообщение.СообщениеСуществует(Идентификатор) Тогда		
	КонецЦикла; // Для Каждого Идентификатор Из Сообщение.Идентификатор Цикл
	
	НачатьТранзакцию();
	// Создаем почтовое сообщение
	Документ 				= Документы.ПочтовоеСообщение.СоздатьДокумент();
	Документ.Дата 			= ТекущаяДата();
	Документ.Отправитель 	= Сообщение.Отправитель;
	Документ.Получатель 	= Сообщение.Получатели;
	Документ.Заголовок		= Сообщение.Тема;
	Для Каждого Идентификатор Из Сообщение.Идентификатор Цикл
		Документ.ИдентификаторСообщения = Идентификатор;
	КонецЦикла; // Для Каждого Идентификатор Из Сообщение.Идентификатор Цикл
	
	Попытка		
		Документ.Записать();
		
		// Регистрируем сообщение для обработки
		РегистрыСведений.ПочтовыеСообщенияВходящие.ЗарегистрироватьСообщение(Документ.Ссылка);
		
		// Сохраняем вложение
		Для Каждого Вложение Из Сообщение.Вложения Цикл
			ПрисоединенныеФайлы.ДобавитьФайл(Документ.Ссылка, Вложение.Ключ, ,,, ПоместитьВоВременноеХранилище(Вложение.Значение));
		КонецЦикла; // Для Каждого Вложение Из Сообщение.Вложения Цикл
		ЗафиксироватьТранзакцию();
		Результат 	= Истина;
	Исключение
		ОтменитьТранзакцию();
		Результат 	= Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось сохранить сообщение: " + ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Результат;
КонецФункции // СохранитьСоощение

#КонецОбласти

#Область ОбработатьПочтовыеСообщения

Процедура ОбработатьПочтовоеСообщение(ПочтовоеСообщение)
	Вложения = Справочники.ПочтовоеСообщениеПрисоединенныеФайлы.ПолучитьВложения(ПочтовоеСообщение);
	Если Вложения.Количество() = 0 Тогда
		РегистрыСведений.ПочтовыеСообщенияВходящие.УстановитьОтметкуОбработки(ПочтовоеСообщение);
		Возврат;
	КонецЕсли; // Если Вложения.Количество() = 0 Тогда
	
	Для Каждого Вложение Из Вложения Цикл
		Если Не Вложение.Расширение = "zip" Тогда
			Продолжить;
		КонецЕсли; // Если Не Вложаение.Расширение = "zip" Тогда
		
		Попытка
			РазобратьЗапросНаСоздание(Вложение);
		Исключение
			РегистрыСведений.ПочтовыеСообщенияВходящие.УстановитьОтметкуОбработки(ПочтовоеСообщение, ОписаниеОшибки());
			Возврат;
		КонецПопытки;		
	КонецЦикла; // Для Каждого Вложение Из Вложения Цикл
	
	РегистрыСведений.ПочтовыеСообщенияВходящие.УстановитьОтметкуОбработки(ПочтовоеСообщение);
КонецПроцедуры // ОбработатьПочтовоеСообщение

Функция РазобратьЗапросНаСоздание(Вложение)		
	Каталог			= КаталогВременныхФайлов() + Новый УникальныйИдентификатор + "\";
	ИмяАрхива		= Каталог 	+ Вложение.Наименование 
	+ "." 
	+ Вложение.Расширение;
	ДанныеФайла 	= ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Вложение);	
	ДанныеФайла.Записать(ИмяАрхива);
	Архив 			= Новый ЧтениеZipФайла(ИмяАрхива);
	Архив.ИзвлечьВсе(Каталог + "out");
	Для Каждого Файл Из НайтиФайлы(Каталог + "out", "*.xml", Ложь) Цикл
		РазобратьXML(Файл);
	КонецЦикла; // Для Каждого Файл Из НайтиФайлы(Каталог + "out", "*.xml", Ложь) Цикл
	УдалитьФайлы(Каталог);
КонецФункции // РазобратьЗапросНаСоздание

Функция РазобратьXML(Файл)
	Результат 	= Ложь;
	
	Чтение 		= Новый ЧтениеXML;
	Чтение.ОткрытьФайл(Файл.ПолноеИмя);
	Объект 		= ФабрикаXDTO.ПрочитатьXML(Чтение);
	Если Объект.Свойства().Получить("type") = Неопределено 
		Или Не Объект.type = "NewQuery" Тогда 
		Возврат Результат;
	КонецЕсли; // Если Объект.Свойства().Получить("type") = Неопределено Тогда 
	
	Если ТипЗнч(Объект.arrayOfQuery.query) = Тип("СписокXDTO") Тогда
		Запросы = Объект.arrayOfQuery.query;
	Иначе
		Запросы = Новый Массив;
		Запросы.Добавить(Объект.arrayOfQuery.query);
	КонецЕсли; // Если ТипЗнч(Объект.arrayOfQuery) = Тип("СписокXDTO") Тогда
	
	Для Каждого Запрос Из Запросы Цикл
		ОбработатьЗапрос(Запрос, Файл.Путь);
	КонецЦикла; // Для Каждого Запрос Из Запросы Цикл
	
	Возврат Результат;
КонецФункции // РазобратьXML

Функция ПолучитьЗначениеСправочника(ИмяСправочника, Идентификатор)
	Возврат XMLЗначение(Тип("СправочникСсылка." + ИмяСправочника), Идентификатор);
КонецФункции // ПолучитьЗначениеСправочника

Процедура ОбработатьЗапрос(Запрос, Каталог)
	Если Документы.ЗаявкаФСВТС.ЗаявкаСуществует(Запрос.queryUID) Тогда 
		Возврат;
	КонецЕсли; // Если Документы.ЗаявкаФСВТС.ЗаявкаСуществует(Запрос.queryUID) Тогда 
	
	// Создаем документ
	Заявка 					= Документы.ЗаявкаФСВТС.СоздатьДокумент();
	Заявка.Дата				= ТекущаяДата();
	Заявка.Идентификатор 	= Запрос.queryUID;
	Заявка.Заказчик 		= ПолучитьЗначениеСправочника("ИностранныеЗаказчики", Запрос.customerUID);
	Заявка.НомерЗаказчика 	= Запрос.customerNumber;
	Заявка.ДатаЗаявки 		= XMLЗначение(Тип("Дата"), Запрос.date);
	Заявка.УсловияПоставки	= Запрос.deliveryConditions;
	Заявка.СрокПодачиТКП	= XMLЗначение(Тип("Дата"), Запрос.timeSubmitTKP);
	Заявка.СрокПоставки		= XMLЗначение(Тип("Число"), Запрос.supplyItemDeliveryTime);
	Если ТипЗнч(Запрос.arrayOfOrders.order.projects) = Тип("Строка") Тогда
		Заявка.Проекты		= Запрос.arrayOfOrders.order.projects;
	КонецЕсли; // Если ТипЗнч(Запрос.arrayOfOrders.order.projects) = Тип("Строка") Тогда	
	
	// Табличная часть "Корабли"
	Для Каждого Корабль Из Справочники.Заказы.ПолучитьЗаказыПоЗаказчику(Заявка.Заказчик) Цикл
		НоваяСтрока 		= Заявка.Корабли.Добавить();
		НоваяСтрока.Корабль = Корабль;
	КонецЦикла; // Для Каждого Корабль Из Справочники.Заказы.ПолучитьЗаказыПоЗаказчику(Заявка.Заказчик) Цикл
	
	// Строки
	Если ТипЗнч(Запрос.arrayOfOrders.order.arrayOfOrderSpecification.orderSpecificationItem) = Тип("СписокXDTO") Тогда
		Строки = Запрос.arrayOfOrders.order.arrayOfOrderSpecification.orderSpecificationItem;
	Иначе
		Строки = Новый Массив;
		Строки.Добавить(Запрос.arrayOfOrders.order.arrayOfOrderSpecification.orderSpecificationItem);
	КонецЕсли; // Если ТипЗнч(Объект.arrayOfQuery) = Тип("СписокXDTO") Тогда
	Для Каждого Строка Из Строки Цикл
		НоваяСтрока 						= Заявка.ПредметыСнабжения.Добавить();
		НоваяСтрока.НаименованиеПС 			= Строка.specSupplyItemCustomerName;
		НоваяСтрока.ОбозначениеПС 			= Строка.specSupplyItemCustomerCode;
		НоваяСтрока.ПредметСнабжения 		= ПолучитьЗначениеСправочника("КаталогПредметовСнабжения", Строка.specSupplyItemUID);
		НоваяСтрока.КодПС					= НоваяСтрока.ПредметСнабжения.Код;
		НоваяСтрока.НаименованиеИзделия 	= Строка.specShipStructureCustomerName;
		НоваяСтрока.Изделие 				= ПолучитьЗначениеСправочника("СтруктураЗаказаПоКомплектующимИзделиямИЗИП", Строка.specShipStructureUID);
		НоваяСтрока.КодИзделия				= НоваяСтрока.Изделие.Код;
		НоваяСтрока.ОписаниеИерархииИзделия	= РегистрыСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ПолучитьОписание(НоваяСтрока.Изделие);
		НоваяСтрока.Количество				= XMLЗначение(Тип("Число"), Строка.specCount); 
	КонецЦикла; // Для Каждого Строка Из Строки Цикл
	
	ИдентифицироватьПредметыСнабжения(Заявка);
	ИдентифицироватьИзделия(Заявка);	
	ОпределитьКорабли(Заявка);
	Заявка.ЗаполнитьНеидентифицированныеПредметыСнабжения();
	Заявка.Записать(РежимЗаписиДокумента.Проведение);	
	
	// Запустим бизнес процесс
	Если Не БизнесПроцессы.РаспределениеЗаявкиФСВТС.СуществуютПроцессыПоЗявке(Заявка.Ссылка) Тогда
		БизнесПроцессы.РаспределениеЗаявкиФСВТС.Создать(Заявка.Ссылка);
	КонецЕсли; // Если Не БизнесПроцессы.РаспределениеЗаявкиФСВТС.СуществуютПроцессыПоЗявке(Запрос.Ссылка) Тогда	
	
	// Сохраняем вложения
	Если Запрос.Свойства().Получить("arrayOfFiles") = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если Запрос.Свойства().Получить("arrayOfFiles") = Неопределено Тогда
	
	Если Запрос.arrayOfFiles.Свойства().Получить("queryFile") = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если Запрос.arrayOfFiles.Свойства().Получить("queryFile") = Неопределено Тогда
	
	Если ТипЗнч(Запрос.arrayOfFiles.queryFile) = Тип("СписокXDTO") Тогда
		Вложения = Запрос.arrayOfFiles.queryFile;
	Иначе
		Вложения = Новый Массив;
		Вложения.Добавить(Запрос.arrayOfFiles.queryFile);
	КонецЕсли; // Если ТипЗнч(Объект.arrayOfQuery) = Тип("СписокXDTO") Тогда
	
	Для Каждого Вложение из Вложения Цикл
		ОбработатьВложение(Вложение, Заявка.Ссылка, Каталог);
	КонецЦикла; // Для Каждого Вложение из Вложения Цикл	
	
КонецПроцедуры // ОбработатьЗапрос

Процедура ОпределитьКорабли(Заявка)
	Заявка.Корабли.Очистить();
	Для Каждого Строка Из Заявка.ПредметыСнабжения Цикл
		Если Не ЗначениеЗаполнено(Строка.Изделие) Тогда
			Продолжить;
		КонецЕсли; // Если Не ЗначениеЗаполнено(Строка.Издение) Тогда
		
		НоваяСтрока = Заявка.Корабли.Добавить();
		НоваяСтрока.Корабль = Строка.Изделие.Владелец;
	КонецЦикла; // Для Каждого Строка Из Заявка.ПредметыСнабжения Цикл
	
	Заявка.Корабли.Свернуть("Корабль");
КонецПроцедуры // ОпределитьКорабли

Процедура ИдентифицироватьПредметыСнабжения(Заявка)
	
	Для Каждого Строка Из Заявка.ПредметыСнабжения Цикл		
		Если ЗначениеЗаполнено(Строка.ПредметСнабжения) Тогда
			Продолжить;
		КонецЕсли; // Если ЗначениеЗаполнено(Строка.ПредметСнабжения) Тогда		
		Если Не ЗначениеЗаполнено(Строка.ОбозначениеПС) Тогда 
			Продолжить;
		КонецЕсли; // Если Не ЗначениеЗаполнено(Строка.ОбозначениеПС) Тогда 
		
		Строка.ПредметСнабжения 	= Справочники.КаталогПредметовСнабжения.НайтиПоОбозначению(Строка.ОбозначениеПС);	 		
	КонецЦикла; // Для Каждого Строка Из Заявка.ПредметыСнабжения Цикл
КонецПроцедуры // ИдентифицироватьПредметыСнабжения

Процедура ИдентифицироватьИзделия(Заявка)
	Корабли = Заявка.Корабли.ВыгрузитьКолонку("Корабль"); 	
	Для Каждого Строка Из Заявка.ПредметыСнабжения Цикл		
		Если ЗначениеЗаполнено(Строка.Изделие) Тогда
			Продолжить;
		КонецЕсли; // Если ЗначениеЗаполнено(Строка.Изделие) Тогда		
		Если Не ЗначениеЗаполнено(Строка.ПредметСнабжения) Тогда
			Продолжить;
		КонецЕсли; // Если Не ЗначениеЗаполнено(Строка.ПредметСнабжения) Тогда                                       		
		
		СтруктураИзделия 			= Справочники.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПолучитьИзделие(Строка.ПредметСнабжения, Корабли);
		Если Не СтруктураИзделия = Неопределено Тогда
			Строка.Изделие 			= СтруктураИзделия.Изделие;
		КонецЕсли; // Если Не СтруктураИзделия = Неопределено Тогда						
	КонецЦикла; // Для Каждого Строка Из Заявка.ПредметыСнабжения Цикл
КонецПроцедуры // ИдентифицироватьИзделия

Процедура ОбработатьВложение(Вложение, Заявка, Каталог)
	Файл = Новый Файл(Каталог + Вложение.Name + "." + Вложение.resourceExtension);
	Если Не Файл.Существует() Тогда
		Возврат;
	КонецЕсли; // Если Не Файл.Существует() Тогда
	
	ДвоичныеДанные = Новый ДвоичныеДанные(Файл.ПолноеИмя);
	ПрисоединенныеФайлы.ДобавитьФайл(Заявка, Вложение.Name, Вложение.resourceExtension,,, ПоместитьВоВременноеХранилище(ДвоичныеДанные));
КонецПроцедуры // ОбработатьВложение

#КонецОбласти

/////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область ЭкспортныеПроцедурыИФункции

Процедура ПолучитьПочту() Экспорт
	СистемнаяЗапись 	= РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();		
	
	// Загрузка почтовых сообщений
	ПараметрыЗагрузки 	= Новый Структура;
	ПараметрыЗагрузки.Вставить("ТолькоНеПрочитанные", Истина);
	Попытка
		Сообщения = РаботаСПочтовымиСообщениями.ЗагрузитьПочтовыеСообщения(СистемнаяЗапись, ПараметрыЗагрузки);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось получить почту: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Для Каждого Сообщение Из Сообщения Цикл
		СохранитьСообщение(Сообщение);
	КонецЦикла; // Для Каждого Сообщение Из Сообщения Цикл
	
КонецПроцедуры // ПолучениеПочты

Процедура ОбработатьПочтовыеСообщения() Экспорт
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	|	ПочтовыеСообщенияВходящие.ПочтовоеСообщение КАК ПочтовоеСообщение
	|ИЗ
	|	РегистрСведений.ПочтовыеСообщенияВходящие КАК ПочтовыеСообщенияВходящие
	|ГДЕ
	|	ПочтовыеСообщенияВходящие.КоличествоПопыток < 5
	|	И НЕ ПочтовыеСообщенияВходящие.Обработано";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбработатьПочтовоеСообщение(Выборка.ПочтовоеСообщение);
	КонецЦикла; // Пока Выборка.Следующий() Цикл	
КонецПроцедуры // ОбработатьПочтовыеСообщения

Процедура ВыгрузитьПрисоединенныеФайлыВДиректорию(Директория = "C:\\Temp\ExportToSite\pics\", МассивФайлов = Неопределено) Экспорт
	
	Файл = Новый Файл(Директория);
	Если НЕ Файл.Существует() ИЛИ НЕ Файл.ЭтоКаталог() Тогда
		СоздатьКаталог(Директория);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	#Область ТекстЗапроса
	Запрос.Текст = "ВЫБРАТЬ
	|	ФайлыКораблей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЗаказыПрисоединенныеФайлы КАК ФайлыКораблей
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбора
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ФайлыКораблей.Ссылка В (&МассивФайлов)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ФлотыПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Справочник.ФлотыПрисоединенныеФайлы КАК ФлотыПрисоединенныеФайлы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбора
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ФлотыПрисоединенныеФайлы.Ссылка В (&МассивФайлов)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПроектыКораблейПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Справочник.ПроектыКораблейПрисоединенныеФайлы КАК ПроектыКораблейПрисоединенныеФайлы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбора
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ПроектыКораблейПрисоединенныеФайлы.Ссылка В (&МассивФайлов)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИППрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИППрисоединенныеФайлы КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИППрисоединенныеФайлы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбора
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИППрисоединенныеФайлы.Ссылка В (&МассивФайлов)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЯзыкиПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Справочник.ЯзыкиПрисоединенныеФайлы КАК ЯзыкиПрисоединенныеФайлы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбора
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЯзыкиПрисоединенныеФайлы.Ссылка В (&МассивФайлов)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОКСМПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Справочник.ОКСМПрисоединенныеФайлы КАК ОКСМПрисоединенныеФайлы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбора
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ОКСМПрисоединенныеФайлы.Ссылка В (&МассивФайлов)
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КаталогПредметовСнабженияПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Справочник.КаталогПредметовСнабженияПрисоединенныеФайлы КАК КаталогПредметовСнабженияПрисоединенныеФайлы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &БезОтбора
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ КаталогПредметовСнабженияПрисоединенныеФайлы.Ссылка В (&МассивФайлов)
	|		КОНЕЦ";
	#КонецОбласти
	Запрос.УстановитьПараметр("МассивФайлов",	МассивФайлов);
	Запрос.УстановитьПараметр("БезОтбора", 		МассивФайлов = Неопределено);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДанныеФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ВыборкаДетальныеЗаписи.Ссылка, ,Истина);
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДанныеФайла.СсылкаНаДвоичныеДанныеФайла);
		
		ЗаписьДанных = Новый ЗаписьДанных(Директория 
		+ Строка(ВыборкаДетальныеЗаписи.Ссылка.УникальныйИдентификатор()) 
		+ "." 
		+ Строка(ВыборкаДетальныеЗаписи.Ссылка.Расширение));
		
		ЗаписьДанных.Записать(ДвоичныеДанные);
		ЗаписьДанных.Закрыть();
	КонецЦикла; 
	
КонецПроцедуры // ВыгрузитьПрисоединенныеФайлыВДиректорию

&НаСервере
Функция СобратьОсновнойЗапрос(ПараметрыВыгрузки) Экспорт
	
	Запрос 			 = Новый Запрос;
	
	ОтборФлот 	 = ПараметрыВыгрузки.Флот;
	ОтборПроекты = ПараметрыВыгрузки.Проекты;
	ОтборКорабли = ПараметрыВыгрузки.Корабли;
	ГрузитьВложенныеФайлы = ПараметрыВыгрузки.ВыгружатьФайлы;
	УсловиеИзФормы 		  = "";
	
	Если ЗначениеЗАполнено(ОтборФлот) Тогда
		УсловиеИзФормы = УсловиеИзФормы + " И СправочникКорабли.Заказчик = &Заказчик ";
		Запрос.УстановитьПараметр("Заказчик",ОтборФлот)
	КонецЕсли;
	Если НЕ ОтборПроекты.Количество() = 0 Тогда
		УсловиеИзФормы = УсловиеИзФормы + " И СправочникКорабли.Владелец В (&Проекты) ";
		Запрос.УстановитьПараметр("Проекты",ОтборПроекты)
	КонецЕсли;
	Если НЕ ОтборКорабли.Количество() = 0 Тогда
		УсловиеИзФормы = УсловиеИзФормы + " И СправочникКорабли.Ссылка В (&Корабли) ";
		Запрос.УстановитьПараметр("Корабли",ОтборКорабли)
	КонецЕсли;
	
	#Область ОписаниеЗапроса
	//-------- Описание запроса ------------
	//[01] - позиция пакета в массиве результатов
	
	//[06] Корабли
	//[07] Проекты кораблей
	//[08] Флоты
	//[09] Условия поставки
	//[11] Иностранные Заказчики
	//[12] Наименования характеристик кораблей
	//[15] Типы узлов
	//[17] Предметы снабжения
	//[18] Аналоги предметов снабжения
	//[20] Типы показателей изделий
	//[22] Наименования характеристик предметов снабжения
	//[25] Единицы измерения (ОКЕИ - общероссийский классификатор единиц измерения)
	//[27] Организации
	//[31] Этапы выполнения заявок на поставку предметов снабжения
	//[32] Категории заявок на поставку предметов снабжения
	//[33] Страны (ОКСМ - общероссийский классификатор стран мира)
	//[34] Ресурсы и сроки службы
	//[35] Характеристики предметов снабжения
	//[36] Языки
	//[37] Переводы
	//[38] Поставщики предметов снабжения
	//[39] Характеристики кораблей
	//[40] Структура корабля
	//[42] Вложения
	
	#КонецОбласти
	
	#Область ТекстЗАпроса
	Запрос.Текст = "
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|//--------------------------- Вспомогательные ВТ ------------------------
	|// -------------------------- Список корабли  -------
	|//[00]
	|ВЫБРАТЬ
	|СправочникКорабли.Ссылка как Ссылка
	|ПОМЕСТИТЬ ВТКорабли
	|ИЗ
	|	Справочник.Заказы КАК СправочникКорабли
	|ГДЕ НЕ СправочникКорабли.Ссылка.ПометкаУдаления " + УсловиеИзФормы + "
	|;
	|// -------------------------- Список флотов   -------
	|//[01]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Корабли.Ссылка.Заказчик.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТФлоты
	|ИЗ
	|	ВТКорабли КАК Корабли
	|ГДЕ 
	|	НЕ Корабли.Ссылка.Заказчик.Ссылка Есть Null
	|;
	|// -------------------------- Список проектов   -------
	|//[02]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Корабли.Ссылка.Владелец.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТПроекты
	|ИЗ
	|	ВТКорабли КАК Корабли
	|;
	|// -------------------------- Список групп справочника структур кораблей   -------
	|//[03]
	|ВЫБРАТЬ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка как Ссылка
	|ПОМЕСТИТЬ ВТГруппСправочникаСтруктурыКораблей
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|ГДЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Наименование = ""Архив""
	|	И СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПустаяСсылка)
	|;
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|
	|/////////////////////////////////////////////////////////////// 01. Этапы выполнения заявок на поставку предметов снабжения ///////////////
	|//[04]
	|ВЫБРАТЬ
	|	ЭтапыВыполненияЗаявокНаПоставкуПС.Ссылка КАК id,
	|	ЭтапыВыполненияЗаявокНаПоставкуПС.Код КАК code,
	|	ЭтапыВыполненияЗаявокНаПоставкуПС.НаименованиеДляСайта КАК name
	|ПОМЕСТИТЬ ЭтапыВыполненияЗаявокНаПоставкуПС
	|ИЗ
	|	Справочник.ЭтапыВыполненияЗаявокНаПоставкуПредметовСнабжения КАК ЭтапыВыполненияЗаявокНаПоставкуПС
	|;
	
	|/////////////////////////////////////////////////////////////// 02. Категории заявок на поставку предметов снабжения /////////////////////
	|//[05]
	|ВЫБРАТЬ
	|	КатегорииЗаявокНаПоставкуПС.Ссылка КАК id,
	|	КатегорииЗаявокНаПоставкуПС.Код КАК code,
	|	КатегорииЗаявокНаПоставкуПС.Наименование КАК name
	|ПОМЕСТИТЬ КатегорииЗаявокНаПоставкуПС
	|ИЗ
	|	Справочник.КатегорииЗаявокНаПоставкуПС КАК КатегорииЗаявокНаПоставкуПС
	|;
	
	|/////////////////////////////////////////////////////////////// 21. Корабли //////////////////////////////////////////////////////////////
	|//[06]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Корабли.Ссылка     			КАК id,
	|	Корабли.Ссылка.Код 			КАК code,
	|	Корабли.Ссылка.Наименование КАК name,
	|	Корабли.Ссылка.ЗаводскойНомер КАК serialNumber,
	|	Корабли.Ссылка.Владелец КАК shipProjectId,
	|	Корабли.Ссылка.ДатаПостройки КАК createDate,
	|	Корабли.Ссылка.Заказчик КАК fleetId
	|ИЗ
	|	ВТКорабли КАК Корабли
	|;
	
	|/////////////////////////////////////////////////////////////// 20. Проекты кораблей /////////////////////////////////////////////////////
	|//[07]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Корабли.Ссылка.Владелец.Ссылка 	КАК id,
	|	Корабли.Ссылка.Владелец.Наименование КАК code
	|ИЗ
	|	ВТКорабли КАК Корабли
	|;
	
	|/////////////////////////////////////////////////////////////// 09. Флоты ////////////////////////////////////////////////////////////////
	|//[08]
	|ВЫБРАТЬ 
	|	Флоты.Ссылка КАК id,
	|	Флоты.Ссылка.Код КАК code,
	|	Флоты.Ссылка.Наименование КАК name,
	|	Флоты.Ссылка.Страна КАК countryId,
	|	Флоты.Ссылка.ЯзыкПредставленияДанных КАК languageId
	|ИЗ
	|	ВТФлоты КАК Флоты
	|;
	
	|/////////////////////////////////////////////////////////////// 04. Условия поставки /////////////////////////////////////////////////////
	|//[09]
	|ВЫБРАТЬ
	|	УсловияПоставки.Ссылка КАК id,
	|	УсловияПоставки.Код КАК code,
	|	УсловияПоставки.Наименование КАК name,
	|	УсловияПоставки.Описание КАК description
	|ИЗ
	|	Справочник.Инкотермс2010 КАК УсловияПоставки
	|;
	
	|/////////////////////////////////////////////////////////////// 05. Страны ///////////////////////////////////////////////////////////////
	|//[10]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Флоты.Ссылка.Страна.Ссылка КАК id,
	|	Флоты.Ссылка.Страна.Код КАК code,
	|	Флоты.Ссылка.Страна.БуквенныйКодАльфа3 КАК codeAlfa3
	|ПОМЕСТИТЬ ОКСМ
	|ИЗ
	|	ВТФлоты КАК Флоты
	|ГДЕ
	|	НЕ Флоты.Ссылка.Страна Есть Null
	|;
	
	|/////////////////////////////////////////////////////////////// 08. Иностранные заказчики ////////////////////////////////////////////////
	|//[11]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИностранныеЗаказчики.Ссылка КАК id,
	|	ИностранныеЗаказчики.Код КАК code,
	|	ИностранныеЗаказчики.Название КАК name,              //полное название
	|	ИностранныеЗаказчики.Наименование КАК shortName,      //краткое наизвание
	|	ИностранныеЗаказчики.ВМС КАК fleetId
	|ИЗ
	|	ВТФлоты как Флоты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИностранныеЗаказчики КАК ИностранныеЗаказчики
	|	ПО
	|	ИностранныеЗаказчики.ВМС = Флоты.Ссылка
	|;
	
	|/////////////////////////////////////////////////////////////// 22. Характеристики кораблей (Справочник) //////////////////////////////////////////////
	|//[12]
	|ВЫБРАТЬ
	|	ХарактеристикиКораблей.Ссылка КАК id,
	|	ХарактеристикиКораблей.Код КАК code,
	|	ХарактеристикиКораблей.Наименование КАК name
	|ИЗ
	|	Справочник.ХарактеристикиКораблей КАК ХарактеристикиКораблей
	|;
	
	|/////////////////////////////////////////////////////////////// 23. Характеристики кораблей //////////////////////////////////////////////
	|//[13]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КораблиТехническиеХарактеристики.Ссылка КАК shipId,
	|	КораблиТехническиеХарактеристики.НомерСтроки КАК row,
	|	КораблиТехническиеХарактеристики.Характеристика КАК shipPropertyTypeId,
	|	КораблиТехническиеХарактеристики.Значение КАК value,
	|	КораблиТехническиеХарактеристики.ЕдиницаИзмерения КАК measureUnitId
	|ПОМЕСТИТЬ ХарактеристикиКораблей
	|ИЗ
	|	ВТКорабли как Корабли
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Заказы.ТехническиеХарактеристики КАК КораблиТехническиеХарактеристики
	|	ПО
	|	КораблиТехническиеХарактеристики.Ссылка = Корабли.Ссылка
	|;
	
	|/////////////////////////////////////////////////////////////// 24. Структура корабля ////////////////////////////////////////////////////
	|//[14]
	|ВЫБРАТЬ
	|	СтруктараКорабляПоКИЗИП.Ссылка КАК id,
	|	СтруктараКорабляПоКИЗИП.Родитель КАК parentId,
	|	СтруктараКорабляПоКИЗИП.Владелец КАК shipId,
	|	СтруктараКорабляПоКИЗИП.ПредметСнабжения КАК supplyItemId,
	|	СтруктараКорабляПоКИЗИП.Тип КАК entryClassId,
	|	СтруктараКорабляПоКИЗИП.Код КАК code,
	|	ВЫБОР
	|		КОГДА СтруктараКорабляПоКИЗИП.Тип = ЗНАЧЕНИЕ(Справочник.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа)
	|			ТОГДА СтруктараКорабляПоКИЗИП.Наименование
	|		ИНАЧЕ СтруктараКорабляПоКИЗИП.ПредметСнабжения.Наименование
	|	КОНЕЦ КАК name,
	|	СтруктараКорабляПоКИЗИП.ЗИП КАК isSparePart,
	|	СтруктараКорабляПоКИЗИП.Количество КАК amount,
	|	СтруктараКорабляПоКИЗИП.КоличествоВЗИПБорт КАК amountBoard,
	|	СтруктараКорабляПоКИЗИП.КоличествоВЗИПБаза КАК amountBase,
	|	СтруктараКорабляПоКИЗИП.КоличествоВЗИПДЭ КАК amountLong
	|ПОМЕСТИТЬ СтруктараКорабляПоКИЗИП
	|ИЗ
	|	ВТКорабли как Корабли
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктараКорабляПоКИЗИП
	|	ПО
	|	СтруктараКорабляПоКИЗИП.Владелец = Корабли.Ссылка
	|ГДЕ
	|  (СтруктараКорабляПоКИЗИП.Количество > 0
	|ИЛИ СтруктараКорабляПоКИЗИП.КоличествоВЗИПБорт > 0
	|ИЛИ СтруктараКорабляПоКИЗИП.КоличествоВЗИПБаза > 0
	|ИЛИ СтруктараКорабляПоКИЗИП.КоличествоВЗИПДЭ > 0
	|ИЛИ СтруктараКорабляПоКИЗИП.КоличествоВЗИПР > 0)
	|	И НЕ СтруктараКорабляПоКИЗИП.ПометкаУдаления
	|	И НЕ СтруктараКорабляПоКИЗИП.Ссылка В ИЕРАРХИИ
	|				(ВЫБРАТЬ * ИЗ ВТГруппСправочникаСтруктурыКораблей)
	|;
	
	|/////////////////////////////////////////////////////////////// 03. Типы узлов ///////////////////////////////////////////////////////////
	|//[15]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураКорабля.entryClassId.Ссылка КАК id,
	|	СтруктураКорабля.entryClassId.Код КАК code,
	|	СтруктураКорабля.entryClassId.Наименование КАК name
	|ИЗ
	|	СтруктараКорабляПоКИЗИП КАК СтруктураКорабля
	|;
	
	|/////////////////////////////////////////////////////////////// 10. Предметы снабжения ///////////////////////////////////////////////////
	|//--------------------------------------- Временная таблица предметов снабжения ---------------------------------------
	|//[16]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктараКорабляПоКИЗИП.supplyItemId.Ссылка как ПредметСнабжения
	|ПОМЕСТИТЬ ВТПредметыСнабжения
	|ИЗ
	|	СтруктараКорабляПоКИЗИП как СтруктараКорабляПоКИЗИП
	|ГДЕ
	|	НЕ СтруктараКорабляПоКИЗИП.supplyItemId.Ссылка ЕСТЬ NULL
	|
	|   ИНДЕКСИРОВАТЬ ПО
	|		ПредметСнабжения
	|;
	|//---------------------------------------------------------------------------------------------------------------------
	|
	|//[17]
	|ВЫБРАТЬ
	|	КаталогПредметовСнабжения.Ссылка КАК id,
	|	КаталогПредметовСнабжения.Код КАК code,
	|	КаталогПредметовСнабжения.Наименование КАК name,
	|	КаталогПредметовСнабжения.СамостоятельнаяПоставка КАК isIndependentSupply,
	|	КаталогПредметовСнабжения.ФНН КАК fsn,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(КаталогПредметовСнабжения.NSN) = ТИП(Строка)
	|			ТОГДА КаталогПредметовСнабжения.NSN
	|		ИНАЧЕ КаталогПредметовСнабжения.NSN.КодNSN
	|	КОНЕЦ,"""") КАК nsn,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КодыINCATПредставление.Представление, """") КАК Строка(500)) КАК incat,
	|	КаталогПредметовСнабжения.Обозначение КАК designation,
	|	КаталогПредметовСнабжения.ОбозначениеТранслитированное КАК designationTrans,
	|	ЕСТЬNULL(КаталогПредметовСнабжения.ЕКПС.Код,"""") КАК classCode,
	|	ЕСТЬNULL(КаталогПредметовСнабжения.ЕКПС.Родитель.Код,"""") КАК classGroudCode,
	|	ЕСТЬNULL(КаталогПредметовСнабжения.УтвержденноеНаименование.Код,"""") КАК approvedNameCode,
	|	ВЫРАЗИТЬ(КаталогПредметовСнабжения.ПравилаУпаковкиТранспортировкиХранения КАК СТРОКА(1000)) КАК transportationInfo,
	|	КаталогПредметовСнабжения.ЕдиницаИзмерения КАК measureUnitId
	|ИЗ
	|	ВТПредметыСнабжения как ПредметыСнабжения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения КАК КаталогПредметовСнабжения
	|	ПО ПредметыСнабжения.ПредметСнабжения = КаталогПредметовСнабжения.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыINCATПредставление КАК КодыINCATПредставление
	|	ПО ПредметыСнабжения.ПредметСнабжения = КодыINCATПредставление.ПредметСнабжения	
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КаталогПредметовСнабженияАналоги.Аналог.Ссылка,
	|	КаталогПредметовСнабженияАналоги.Аналог.Код,
	|	КаталогПредметовСнабженияАналоги.Аналог.Наименование,
	|	КаталогПредметовСнабженияАналоги.Аналог.СамостоятельнаяПоставка,
	|	КаталогПредметовСнабженияАналоги.Аналог.ФНН,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(КаталогПредметовСнабженияАналоги.Аналог.NSN) = ТИП(Строка)
	|			ТОГДА КаталогПредметовСнабженияАналоги.Аналог.NSN
	|		ИНАЧЕ КаталогПредметовСнабженияАналоги.Аналог.NSN.КодNSN
	|	КОНЕЦ,"""") КАК nsn,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КодыINCATПредставление.Представление, """") КАК Строка(500)) КАК INCAT,
	|	КаталогПредметовСнабженияАналоги.Аналог.Обозначение,
	|	КаталогПредметовСнабженияАналоги.Аналог.ОбозначениеТранслитированное,
	|	ЕСТЬNULL(КаталогПредметовСнабженияАналоги.Аналог.ЕКПС.Код,""""),
	|	ЕСТЬNULL(КаталогПредметовСнабженияАналоги.Аналог.ЕКПС.Родитель.Код,""""),
	|	ЕСТЬNULL(КаталогПредметовСнабженияАналоги.Аналог.УтвержденноеНаименование.Код,""""),
	|	ВЫРАЗИТЬ(КаталогПредметовСнабженияАналоги.Аналог.ПравилаУпаковкиТранспортировкиХранения КАК СТРОКА(1000)),
	|	КаталогПредметовСнабженияАналоги.Аналог.ЕдиницаИзмерения
	|ИЗ
	|	ВТПредметыСнабжения как ПредметыСнабжения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения.Аналоги КАК КаталогПредметовСнабженияАналоги
	|	ПО ПредметыСнабжения.ПредметСнабжения = КаталогПредметовСнабженияАналоги.Аналог.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыINCATПредставление КАК КодыINCATПредставление
	|	ПО ПредметыСнабжения.ПредметСнабжения = КодыINCATПредставление.ПредметСнабжения	
	|;
	
	|/////////////////////////////////////////////////////////////// 11. Аналоги предметов снабжения //////////////////////////////////////////////
	|//[18]
	|ВЫБРАТЬ
	|	ПредметыСнабжения.ПредметСнабжения.Ссылка КАК id,
	|	Аналоги.Аналог.Ссылка КАК analogId,
	|	ВЫРАЗИТЬ(Аналоги.ТипЗамены.Наименование КАК СТРОКА(100)) КАК replaceType
	|ИЗ                                      
	|	ВТПредметыСнабжения как ПредметыСнабжения                    
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения.Аналоги КАК Аналоги
	|	ПО Аналоги.Аналог.Ссылка = ПредметыСнабжения.ПредметСнабжения
	|;
	
	|/////////////////////////////////////////////////////////////// 13. Ресурсы и сроки службы ////////////////////////////////////////////////////
	|//[19]
	|ВЫБРАТЬ
	|	РесурсыИСрокиСлужбыПС.ПредметСнабжения КАК supplyItemId,
	|	РесурсыИСрокиСлужбыПС.Показатель КАК productIndicatorTypeId,
	|	РесурсыИСрокиСлужбыПС.Значение КАК value,
	|	РесурсыИСрокиСлужбыПС.ЕдиницаИзмерения КАК measureUnitId
	|ПОМЕСТИТЬ РесурсыИСрокиСлужбыПС
	|ИЗ
	|	ВТПредметыСнабжения КАК ПредметыСнабжения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РесурсыИСрокиСлужбыПредметовСнабжения КАК РесурсыИСрокиСлужбыПС
	|	ПО РесурсыИСрокиСлужбыПС.ПредметСнабжения = ПредметыСнабжения.ПредметСнабжения
	|;
	
	|/////////////////////////////////////////////////////////////// 12. Типы показателей изделий ///////////////////////////////////////////////////
	|//[20]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РесурсыИСрокиСлужбыПС.productIndicatorTypeId.Ссылка КАК id,
	|	РесурсыИСрокиСлужбыПС.productIndicatorTypeId.Код КАК code,
	|	РесурсыИСрокиСлужбыПС.productIndicatorTypeId.Наименование КАК name
	|ИЗ
	|	РесурсыИСрокиСлужбыПС КАК РесурсыИСрокиСлужбыПС	
	|;
	
	|/////////////////////////////////////////////////////////////// 15. Характеристики предметов снабжения //////////////////////////////////////////
	|//[21]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КаталогПредметовСнабженияХарактеристики.Ссылка КАК supplyItemId,
	|	КаталогПредметовСнабженияХарактеристики.НомерСтроки КАК row,
	|	КаталогПредметовСнабженияХарактеристики.Характеристика КАК supplyItemPropertyTypeId,
	|	КаталогПредметовСнабженияХарактеристики.Значение КАК value,
	|	КаталогПредметовСнабженияХарактеристики.ЕдиницаИзмерения КАК measureUnitId
	|ПОМЕСТИТЬ ХарактеристикиПредметовСнабжения
	|ИЗ
	|		ВТПредметыСнабжения КАК ПредметыСнабжения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения.Характеристики КАК КаталогПредметовСнабженияХарактеристики
	|	ПО КаталогПредметовСнабженияХарактеристики.Ссылка = ПредметыСнабжения.ПредметСнабжения
	|ГДЕ                                                                                                                         
	|	КаталогПредметовСнабженияХарактеристики.ОтображениеДляЗаказчика И НЕ КаталогПредметовСнабженияХарактеристики.Ссылка Есть Null
	|;
	
	|/////////////////////////////////////////////////////////////// 14. Наименования Характеристик предметов снабжения///////////////////////////////////////////
	|//[22]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТХарактеристикиПредметовСнабжения.supplyItemPropertyTypeId.Ссылка КАК id,
	|	ВТХарактеристикиПредметовСнабжения.supplyItemPropertyTypeId.Код КАК code,
	|	ВТХарактеристикиПредметовСнабжения.supplyItemPropertyTypeId.Наименование КАК name
	|ИЗ
	|	ХарактеристикиПредметовСнабжения КАК ВТХарактеристикиПредметовСнабжения
	|ГДЕ
	|	НЕ ВТХарактеристикиПредметовСнабжения.supplyItemPropertyTypeId.Ссылка ЕСТЬ Null
	|;
	
	|/////////////////////////////////////////////////////////////// 18. Поставщики предметов снабжения /////////////////////////////////////////////////////////
	|//[23]
	|ВЫБРАТЬ
	|	ИзготовителиИПоставщикиПС.Ссылка КАК supplyItemId,
	|	ЕСТЬNULL(ИзготовителиИПоставщикиПС.Контрагент, Константы.ОсновнаяОрганизация) КАК organisationId
	|ПОМЕСТИТЬ ИзготовителиИПоставщикиПС
	|ИЗ
	|	ВТПредметыСнабжения как ПредметыСнабжения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения.ИзготовителиИПоставщики КАК ИзготовителиИПоставщикиПС
	|	ПО ПредметыСнабжения.ПредметСнабжения = ИзготовителиИПоставщикиПС.Ссылка,
	|	Константы КАК Константы
	|ГДЕ 
	|	ИзготовителиИПоставщикиПС.Контрагент.УчастникВТС
	|;
	
	|/////////////////////////////////////////////////////////////// 06. Единицы измерения (ОКЕИ) //////////////////////////////////////////////////////////////
	|//-------------- Временная таблица со всеми единицами ------------------
	|//[24]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|ВсеЕИ.ЕИ как Ссылка
	|ПОМЕСТИТЬ ВТЕдиницИзмерения
	|ИЗ
	|(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХарактеристикиКораблей.measureUnitId как ЕИ
	|ИЗ
	|	ХарактеристикиКораблей
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХарактеристикиПредметовСнабжения.measureUnitId
	|ИЗ
	|	ХарактеристикиПредметовСнабжения
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТПС.ПредметСнабжения.ЕдиницаИзмерения 
	|ИЗ 
	|	ВТПредметыСнабжения как ВТПС) как ВсеЕИ
	|;
	|//------------------------------------------------------------------------
	|
	|//[25]
	|ВЫБРАТЬ
	|	ОКЕИ.Ссылка КАК id,
	|	ОКЕИ.Код КАК code,
	|	ОКЕИ.Наименование КАК designationNational,
	|	ОКЕИ.УсловноеОбозначениеМеждународное КАК designationInternational,
	|	ОКЕИ.КодовоеОбозначениеILMS КАК ilms
	|ИЗ
	|	ВТЕдиницИзмерения КАК ЕдиницыИзмерения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОКЕИ КАК ОКЕИ
	|	ПО ЕдиницыИзмерения.Ссылка = ОКЕИ.Ссылка
	|;
	
	|/////////////////////////////////////////////////////////////// 07. Организации //////////////////////////////////////////////////////////////
	|//-------------------- Временная таблица организаций --------------------
	|//[26]
	|ВЫБРАТЬ
	|	Организации.Организация как Ссылка
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	(ВЫБРАТЬ 
	|		Константы.ОсновнаяОрганизация как Организация
	|	ИЗ
	|		Константы КАК Константы
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|  		ИзготовителиИПоставщикиПС.organisationId
	|	ИЗ
	|		ИзготовителиИПоставщикиПС КАК ИзготовителиИПоставщикиПС
	|	) КАК Организации
	|ГДЕ Организации.Организация.УчастникВТС
	|;
	|//----------------------------------------------------------------------
	|//[27]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК id,
	|	Организации.Код КАК code,
	|	Организации.НазваниеОрганизацииАнгл КАК nameEng,
	|	Организации.Наименование КАК name,
	|	Организации.ИНН КАК tin,
	|	Организации.КПП КАК cit,
	|	Организации.КодCAGE КАК codeCage,
	|	Организации.ПочтовыйИндекс КАК postalCode,
	|	Организации.РегионАнгл КАК region,
	|	ВЫРАЗИТЬ(Организации.АдресАнгл КАК СТРОКА(500)) КАК address,
	|	Организации.ИмяКонтакногоЛицаАнгл КАК contactName,
	|	ОрганизацииКонтактнаяИнформацияТелефон.Представление КАК phone,
	|	ОрганизацииКонтактнаяИнформацияФакс.Представление КАК fax,
	|	ОрганизацииКонтактнаяИнформацияЭлектроннаяПочта.Представление КАК email,
	|	Организации.КодСертификата КАК certificateCode,
	|	Организации.НомерСертификата КАК certificateNumber
	|ИЗ
	|	ВТОрганизации как ВТОрганизации	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|	ПО ВТОрганизации.Ссылка = Организации.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформацияТелефон
	|	ПО (ОрганизацииКонтактнаяИнформацияТелефон.Ссылка = Организации.Ссылка)
	|	И (ОрганизацииКонтактнаяИнформацияТелефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.Телефон))
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформацияФакс
	|	ПО (ОрганизацииКонтактнаяИнформацияФакс.Ссылка = Организации.Ссылка)
	|	И (ОрганизацииКонтактнаяИнформацияФакс.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.Факс))
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформацияЭлектроннаяПочта
	|	ПО (ОрганизацииКонтактнаяИнформацияЭлектроннаяПочта.Ссылка = Организации.Ссылка)
	|		И (ОрганизацииКонтактнаяИнформацияЭлектроннаяПочта.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЭлектроннаяПочта))
	|;
	
	|/////////////////////////////////////////////////////////////// 17. Переводы //////////////////////////////////////////////////////////////
	|//-- Временная таблица объектов переводов --
	|//[28]
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ХарактеристикиПредметовСнабжения.supplyItemPropertyTypeId как Ссылка
	|   ПОМЕСТИТЬ ВТОбъектыПеревода
	|	ИЗ
	|		ХарактеристикиПредметовСнабжения КАК ХарактеристикиПредметовСнабжения
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ХарактеристикиКораблей.shipPropertyTypeId
	|	ИЗ
	|		ХарактеристикиКораблей КАК ХарактеристикиКораблей
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		КатегорииЗаявокНаПоставкуПС.id
	|	ИЗ
	|		КатегорииЗаявокНаПоставкуПС КАК КатегорииЗаявокНаПоставкуПС
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ
	|		Флоты.Ссылка
	|	ИЗ
	|		ВТФлоты КАК Флоты
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ
	|		Проекты.Ссылка
	|	ИЗ
	|		ВТПроекты КАК Проекты
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СтруктураЗаказаПоКомплектующимИзделиямИЗИП.id
	|	ИЗ
	|		СтруктараКорабляПоКИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ
	|		ЭтапыВыполненияЗаявокНаПоставкуПредметовСнабжения.id
	|	ИЗ
	|		ЭтапыВыполненияЗаявокНаПоставкуПС КАК ЭтапыВыполненияЗаявокНаПоставкуПредметовСнабжения
	|	ОБЪЕДИНИТЬ
	|	ВЫБРАТЬ
	|		КаталогПредметовСнабжения.ПредметСнабжения
	|	ИЗ
	|		ВТПредметыСнабжения КАК КаталогПредметовСнабжения
	|
	|   ИНДЕКСИРОВАТЬ ПО
	|		Ссылка
	|;
	|//------------------------------------------
	|//[29]
	|ВЫБРАТЬ
	|	ДополнительныеНаименования.Владелец КАК objectId,
	|   ВЫБОР
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.КаталогПредметовСнабжения ТОГДА ""SupplyItem""
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.Флоты ТОГДА ""Fleet""
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.ХарактеристикиПредметовСнабжения ТОГДА ""SupplyItemPropertyType""
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.ХарактеристикиКораблей ТОГДА ""ShipPropertyType""
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.КатегорииЗаявокНаПоставкуПС ТОГДА ""RequestCategory""
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.ПроектыКораблей ТОГДА ""ShipProject""
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП ТОГДА ""Entry""
	|КОГДА ДополнительныеНаименования.Владелец ССЫЛКА Справочник.ЭтапыВыполненияЗаявокНаПоставкуПредметовСнабжения ТОГДА ""StageRequest""
	|ИНАЧЕ ВЫРАЗИТЬ("""" КАК СТРОКА(25))
	|КОНЕЦ КАК objectType,
	|	ДополнительныеНаименования.Язык КАК languageId,
	|	ДополнительныеНаименования.Перевод КАК value
	|ПОМЕСТИТЬ Переводы
	|ИЗ
	|	ВТОбъектыПеревода как ОбъектыПеревода
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ	РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	|	ПО ДополнительныеНаименования.Владелец = ОбъектыПеревода.Ссылка
	|;
	
	|/////////////////////////////////////////////////////////////// 16. Языки ////////////////////////////////////////////////////////////////
	|//[30]
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Переводы.languageId.Ссылка КАК id,
	|	Переводы.languageId.Код КАК code,
	|	Переводы.languageId.Наименование КАК name
	|ПОМЕСТИТЬ Языки
	|ИЗ
	|	Переводы КАК Переводы
	|ГДЕ
	|	НЕ Переводы.languageId.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Флоты.Ссылка.ЯзыкПредставленияДанных.Ссылка,
	|	Флоты.Ссылка.ЯзыкПредставленияДанных.Код,
	|	Флоты.Ссылка.ЯзыкПредставленияДанных.Наименование
	|ИЗ
	|	ВТФлоты КАК Флоты
	|ГДЕ
	|	НЕ Флоты.Ссылка.ЯзыкПредставленияДанных.Ссылка ЕСТЬ NULL
	|;
	
	|////////////////////////////////// ПАКЕТЫ ////////////////////////////////////////////////////////////////////////////////////////////////
	|//[31]
	|ВЫБРАТЬ * ИЗ ЭтапыВыполненияЗаявокНаПоставкуПС;
	|//[32]
	|ВЫБРАТЬ * ИЗ КатегорииЗаявокНаПоставкуПС;
	|//[33]
	|ВЫБРАТЬ * ИЗ ОКСМ;
	|//[34]
	|ВЫБРАТЬ * ИЗ РесурсыИСрокиСлужбыПС;
	|//[35]
	|ВЫБРАТЬ * ИЗ ХарактеристикиПредметовСнабжения;
	|//[36]
	|ВЫБРАТЬ * ИЗ Языки;
	|//[37]
	|ВЫБРАТЬ * ИЗ Переводы;
	|//[38]
	|ВЫБРАТЬ * ИЗ ИзготовителиИПоставщикиПС;
	|//[39]
	|ВЫБРАТЬ * ИЗ ХарактеристикиКораблей;
	|//[40]
	|ВЫБРАТЬ * ИЗ СтруктараКорабляПоКИЗИП;
	|";
	
	ТекстЗапросаБлокПрисоединенныеФайлы = "
	
	|/////////////////////////////////////////////////////////////// 19. Вложения //////////////////////////////////////////////////////////////
	|//-------------- Временная таблица объектов с файлами --------------
	|//[41]
	|ВЫБРАТЬ
	|	ФайлыКораблей.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТОбъектыСФайлами
	|ИЗ
	|	ВТКорабли КАК Корабли
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЗаказыПрисоединенныеФайлы КАК ФайлыКораблей
	|	ПО Корабли.Ссылка = ФайлыКораблей.ВладелецФайла
	
	|ОБЪЕДИНИТЬ
	
	|ВЫБРАТЬ
	|	Справочник.ФлотыПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	ВТФлоты как Флоты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФлотыПрисоединенныеФайлы
	|	ПО Флоты.Ссылка = Справочник.ФлотыПрисоединенныеФайлы.ВладелецФайла
	
	|ОБЪЕДИНИТЬ
	
	|ВЫБРАТЬ
	|	Справочник.ПроектыКораблейПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	ВТПроекты как Проекты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПроектыКораблейПрисоединенныеФайлы
	|	ПО Проекты.Ссылка = Справочник.ПроектыКораблейПрисоединенныеФайлы.ВладелецФайла
	
	|ОБЪЕДИНИТЬ
	|ВЫБРАТЬ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИППрисоединенныеФайлы.Ссылка
	|ИЗ
	|	СтруктараКорабляПоКИЗИП как СтруктураКорабля
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИППрисоединенныеФайлы
	|	ПО СтруктураКорабля.id = Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИППрисоединенныеФайлы.ВладелецФайла
	
	|ОБЪЕДИНИТЬ
	|ВЫБРАТЬ
	|	Справочник.ЯзыкиПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Языки как Языки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЯзыкиПрисоединенныеФайлы
	|	ПО Языки.id = Справочник.ЯзыкиПрисоединенныеФайлы.ВладелецФайла
	
	|ОБЪЕДИНИТЬ
	
	|ВЫБРАТЬ
	|	Справочник.ОКСМПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	ОКСМ как ОКСМ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОКСМПрисоединенныеФайлы
	|	ПО ОКСМ.id = Справочник.ОКСМПрисоединенныеФайлы.ВладелецФайла
	
	|ОБЪЕДИНИТЬ
	|ВЫБРАТЬ
	|	Справочник.КаталогПредметовСнабженияПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	ВТПредметыСнабжения КАК ПредметыСнабжения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабженияПрисоединенныеФайлы
	|	ПО ПредметыСнабжения.ПредметСнабжения = Справочник.КаталогПредметовСнабженияПрисоединенныеФайлы.ВладелецФайла
	|
	|   ИНДЕКСИРОВАТЬ ПО
	|		Ссылка
	|;
	|//-------------------------------------------------------------------------------------------------------------------------------------------
	|//[42]
	|ВЫБРАТЬ
	|		ВТОбъектыСФайлами.Ссылка КАК id,
	|		ВТОбъектыСФайлами.Ссылка.ВладелецФайла КАК objectId,
	|		ВТОбъектыСФайлами.Ссылка КАК resourceId,
	|		ВТОбъектыСФайлами.Ссылка.Наименование КАК name,
	|		ВТОбъектыСФайлами.Ссылка.Расширение КАК resourceExtension,
	|		ВЫБОР
	|			КОГДА ВТОбъектыСФайлами.Ссылка.ВладелецФайла ССЫЛКА Справочник.КаталогПредметовСнабжения ТОГДА ""supplyItem""
	|			КОГДА ВТОбъектыСФайлами.Ссылка.ВладелецФайла ССЫЛКА Справочник.ПроектыКораблей ТОГДА ""shipProject""
	|			КОГДА ВТОбъектыСФайлами.Ссылка.ВладелецФайла ССЫЛКА Справочник.Заказы ТОГДА ""ship""
	|			ИНАЧЕ ""undefined""	
	|		КОНЕЦ КАК designation	
	|
	|ИЗ
	|	ВТОбъектыСФайлами как ВТОбъектыСФайлами
	|ГДЕ
	|	НЕ ВТОбъектыСФайлами.Ссылка.ПометкаУдаления";
	
	#КонецОбласти	
	
	Если ГрузитьВложенныеФайлы Тогда 
		Запрос.Текст = Запрос.Текст + ТекстЗапросаБлокПрисоединенныеФайлы; 
	КонецЕсли;
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();	
	СтруктураПакетовЗапроса = Новый Структура;
	
	СтруктураПакетовЗапроса.Вставить("ShipProject", 			МассивРезультатов[07]);
	СтруктураПакетовЗапроса.Вставить("DeliveryTerm", 			МассивРезультатов[09]);
	СтруктураПакетовЗапроса.Вставить("ShipPropertyType", 		МассивРезультатов[12]);
	СтруктураПакетовЗапроса.Вставить("EntryClass", 				МассивРезультатов[15]);
	СтруктураПакетовЗапроса.Вставить("ProductIndicatorType",   	МассивРезультатов[20]);
	СтруктураПакетовЗапроса.Вставить("SupplyItemPropertyType", 	МассивРезультатов[22]);
	СтруктураПакетовЗапроса.Вставить("MeasureUnit", 			МассивРезультатов[25]);
	СтруктураПакетовЗапроса.Вставить("Organisation", 			МассивРезультатов[27]);
	СтруктураПакетовЗапроса.Вставить("StageRequest", 			МассивРезультатов[31]);
	СтруктураПакетовЗапроса.Вставить("RequestCategory", 		МассивРезультатов[32]);
	СтруктураПакетовЗапроса.Вставить("Country", 				МассивРезультатов[33]);
	СтруктураПакетовЗапроса.Вставить("Language", 				МассивРезультатов[36]);
	Если ГрузитьВложенныеФайлы Тогда 
		СтруктураПакетовЗапроса.Вставить("Attachment", 			МассивРезультатов[42]);
	КонецЕсли;
	СтруктураПакетовЗапроса.Вставить("Fleet", 					МассивРезультатов[08]);
	СтруктураПакетовЗапроса.Вставить("SupplyItem", 				МассивРезультатов[17]);
	СтруктураПакетовЗапроса.Вставить("Translation", 			МассивРезультатов[37]);
	СтруктураПакетовЗапроса.Вставить("Ship", 					МассивРезультатов[06]);
	СтруктураПакетовЗапроса.Вставить("Customer", 				МассивРезультатов[11]);
	СтруктураПакетовЗапроса.Вставить("SupplyItemAnalog", 		МассивРезультатов[18]);
	СтруктураПакетовЗапроса.Вставить("ResourcesAndServiceTime", МассивРезультатов[34]);
	СтруктураПакетовЗапроса.Вставить("SupplyItemProperty", 		МассивРезультатов[35]);
	СтруктураПакетовЗапроса.Вставить("SupplyItemProvider", 		МассивРезультатов[38]);
	СтруктураПакетовЗапроса.Вставить("ShipProperty", 			МассивРезультатов[39]);
	СтруктураПакетовЗапроса.Вставить("Entry", 					МассивРезультатов[40]);
	
	Возврат СтруктураПакетовЗапроса;
	
КонецФункции // СобратьОсновнойЗапрос

Процедура СформироватьФайлJSON(ПараметрыВыгрузки) Экспорт	
	
	СтруктураПакетовЗапроса = СобратьОсновнойЗапрос(ПараметрыВыгрузки);
	Файл = Новый Файл(ПараметрыВыгрузки.ДиректорияJS);
	Если НЕ Файл.Существует() ИЛИ НЕ Файл.ЭтоКаталог() Тогда
		СоздатьКаталог(ПараметрыВыгрузки.ДиректорияJS);
	КонецЕсли;
	ПутьФайлаJSON 	  	  = ПараметрыВыгрузки.ДиректорияJS + "ExportToSite.json";
	
	ЗаписатьФайлJSON(СтруктураПакетовЗапроса, ПутьФайлаJSON);
	
	ПараметрыВыгрузки.АдресХранилищаКонечногоФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьФайлаJSON));
	Если НЕ ПараметрыВыгрузки.СформироватьАрхивНаСервере Тогда
		УдалитьФайлы(ПутьФайлаJSON);
	КонецЕсли;
	
КонецПроцедуры // СформироватьФайлJSON

#КонецОбласти

//////////////////////////////////////////////////////

///////// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
#Область ВспомогательныеПроцедурыИФункции

Процедура ЗаписатьФайлJSON(СтруктураПакетовЗапроса, ПутьФайлаJSON)
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ЗаписьJSON.ОткрытьФайл(ПутьФайлаJSON,,Ложь,);
	ЗаписьJSON.ЗаписатьНачалоОбъекта();	
	Для Каждого ЭлементСтркутурыПакетовЗАпроса ИЗ СтруктураПакетовЗапроса Цикл
		ЗаписатьБлок(ЭлементСтркутурыПакетовЗАпроса.Ключ, ЭлементСтркутурыПакетовЗАпроса.Значение, ЗаписьJSON);
	КонецЦикла;	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.Закрыть();
КонецПроцедуры // СформироватьФайлJSON

Процедура ЗаписатьБлок(ИмяСвойства, СтрокаМассиваРезультатов, ЗаписьJSON)
	ТаблицаЗначенийРезультата 				= СтрокаМассиваРезультатов.Выгрузить();
	КолонкиТаблицыЗначенийРезультатаСтрокой = ПолучитьКолонкиСтрокой(ТаблицаЗначенийРезультата.Колонки);
	ЗаписьJSON.ЗаписатьИмяСвойства(ИмяСвойства);
	ЗаписьJSON.ЗаписатьНачалоМассива();
	
	Для Каждого СтрокаЗначенийРезультата ИЗ ТаблицаЗначенийРезультата Цикл
		ДанныеДляЗаписи = Новый Структура(КолонкиТаблицыЗначенийРезультатаСтрокой);
		ЗаполнитьЗначенияСвойств(ДанныеДляЗаписи, СтрокаЗначенийРезультата);
		ЗаписатьJSON(ЗаписьJSON, ДанныеДляЗаписи, , "ФункцияПреобразованияЗаписиJSON", Вычислить("ОбменССайтом"));
	КонецЦикла;
	
	ЗаписьJSON.ЗаписатьКонецМассива(); 	
КонецПроцедуры // ЗаписатьБлок

Функция ПолучитьКолонкиСтрокой(КолонкиТаблицы)
	Результат 			= "";
	КоличествоКолонок 	= КолонкиТаблицы.Количество()-1;
	Для Сч = 0 По КоличествоКолонок Цикл
		Результат = Результат + ?(ЗначениеЗаполнено(Результат), ",", "") + КолонкиТаблицы[Сч].Имя;
	КонецЦикла;
	Возврат Результат;
КонецФункции // ПолучитьКолонкиСтрокой

Функция ФункцияПреобразованияЗаписиJSON(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Значение)) Тогда
		Возврат Строка(Значение.УникальныйИдентификатор());
	КонецЕсли;
	Если ТипЗнч(Значение) = Тип("Null") Тогда
		Возврат "";
	КонецЕсли;
КонецФункции // ФункцияПреобразованияЗаписиJSON


#КонецОбласти

///////////////////////////////////////////////////////////////////
