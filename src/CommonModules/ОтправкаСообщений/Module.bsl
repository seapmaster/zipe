
//////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОтправитьПочтовыеСообщения() Экспорт
	
	МассивДокументовКОтправке = ПолучитьПочтовыеСообщенияКОтправке();
	
	Для Каждого ПочтовоеСообщениеКОтправке Из МассивДокументовКОтправке Цикл
		
		ОтправитьПочтовоеСообщение(ПочтовоеСообщениеКОтправке);
		
	КонецЦикла; 	
	
КонецПроцедуры  //ОтправитьПочтовыеСообщения

Процедура ОтправитьПочтовоеСообщение(СсылкаНаДокумент) Экспорт
	
	ОписаниеОшибки = "";
	ИдентификаторСообщения = "";
	Отправлено = Ложь;
	
	Попытка
		
		ПараметрыПисьма = СформироватьПараметрыПисьма(СсылкаНаДокумент);		
		ИдентификаторСообщения = РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(СсылкаНаДокумент.Отправитель, ПараметрыПисьма);
		
	Исключение
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОписаниеОшибки = ИнформацияОбОшибке.Описание;
		
		Если ТипЗнч(ИнформацияОбОшибке.Причина) = Тип("ИнформацияОбОшибке") Тогда
			ОписаниеОшибки = ОписаниеОшибки + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке.Причина);
		КонецЕсли;
		
	КонецПопытки;
	
	ЗаписатьИнформациюПочтовыеСообщенияИсходящие(СсылкаНаДокумент, ЗначениеЗаполнено(ИдентификаторСообщения), ОписаниеОшибки);  
	
КонецПроцедуры  //ОтправитьПочтовоеСообщение

//////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьПочтовыеСообщенияКОтправке() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПочтовыеСообщенияИсходящие.ПочтовоеСообщение КАК ПочтовоеСообщение
	|ИЗ
	|	РегистрСведений.ПочтовыеСообщенияИсходящие КАК ПочтовыеСообщенияИсходящие
	|ГДЕ
	|	НЕ ПочтовыеСообщенияИсходящие.Отправлено
	|	И ПочтовыеСообщенияИсходящие.КоличествоПопыток < &МаксимальноеКоличествоПопыток";
	
	Запрос.УстановитьПараметр("МаксимальноеКоличествоПопыток", Справочники.Настройки.ПолучитьМаксимальноеКоличествоПопытокОтправкиПочтовыхСообщений());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ПочтовоеСообщение");
	
КонецФункции  //ПолучитьПочтовыеСообщенияКОтправке

Процедура ЗаписатьИнформациюПочтовыеСообщенияИсходящие(СсылкаНаДокумент, Отправлено, СообщениеОбОшибке = "")

	Запись = РегистрыСведений.ПочтовыеСообщенияИсходящие.СоздатьМенеджерЗаписи();
	Запись.ПочтовоеСообщение = СсылкаНаДокумент;
	Запись.Прочитать();
	
	Запись.Отправлено = Отправлено;
	Запись.СообщениеОбОшибке = СообщениеОбОшибке;
	Запись.Дата = ТекущаяДата();
	Запись.КоличествоПопыток = Запись.КоличествоПопыток + 1;
	
	Попытка
	
		Запись.Записать();	
	
	Исключение
		
		ЗаписьЖурналаРегистрации("РегистрыСведений.ПочтовыеСообщенияИсходящие",
			УровеньЖурналаРегистрации.Ошибка,,,  ОписаниеОшибки());

		Возврат;
	
	КонецПопытки;
		
КонецПроцедуры // ЗаписатьИнформациюПочтовыеСообщенияИсходящие

Функция СформироватьПараметрыПисьма(ПочтовоеСообщение)
	
	ПараметрыПисьма = Новый Структура;
	
	// Кому - Получатель
	Кому =  ПолучитьДанныеПолучателя(ПочтовоеСообщение.Получатель);
	Если Кому.Количество() > 0 Тогда
		ПараметрыПисьма.Вставить("Кому", Кому);
	КонецЕсли;
	
	// Тема - Заголовок
	Если ЗначениеЗаполнено(ПочтовоеСообщение.Заголовок) Тогда
		ПараметрыПисьма.Вставить("Тема", ПочтовоеСообщение.Заголовок);
	КонецЕсли;
	
	// Тело - ТекстСообщения
	ПараметрыПисьма.Вставить("Тело", ПочтовоеСообщение.ТекстСообщенияHTML);
	ПараметрыПисьма.Вставить("ТипТекста", "HTML");
	
	// Вложения - ПрисоединенныеФайлы
	ПараметрыПисьма.Вставить("Вложения", ПолучитьПрисоединенныеФайлыВложения(ПочтовоеСообщение));
		
	Возврат ПараметрыПисьма;
	
КонецФункции //СформироватьПараметрыПисьма

Функция ПолучитьПрисоединенныеФайлыВложения(ПочтовоеСообщениеСсылка)
	
	Вложения = Новый Массив;
	
	СписокПрисоединенныхФайлов = Новый Массив;
	ПрисоединенныеФайлы.ПолучитьПрикрепленныеФайлыКОбъекту(ПочтовоеСообщениеСсылка, СписокПрисоединенныхФайлов);
		
	Для Каждого ПрисоединенныйФайл Из СписокПрисоединенныхФайлов Цикл
		
		ОписаниеФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ПрисоединенныйФайл.Ссылка);
		Если Прав(ОписаниеФайла.ИмяФайла, 1) = "." Тогда
			ОписаниеФайлаИмяФайла = Лев(ОписаниеФайла.ИмяФайла, СтрДлина(ОписаниеФайла.ИмяФайла) - 1);
		Иначе
			ОписаниеФайлаИмяФайла = ОписаниеФайла.ИмяФайла;
		КонецЕсли;
		
		Вложение = Новый Структура("Представление, АдресВоВременномХранилище", 
		ОписаниеФайлаИмяФайла,  ОписаниеФайла.СсылкаНаДвоичныеДанныеФайла);
		Вложения.Добавить(Вложение); 
		
	КонецЦикла;
	
	Возврат Вложения;

КонецФункции //ПолучитьПрисоединенныеФайлыВложения

Функция ПолучитьДанныеПолучателя(Получатель)
	
	Результат = Новый Массив;
	
	// Email
	Если ТипЗнч(Получатель) = Тип("Строка") Тогда
		Результат.Добавить(Новый Структура("Адрес,Представление", Получатель, Получатель));
		
	// Организация
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.Организации") Тогда
		
		ЭлектроннаяПочтаОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Получатель, 
																									Справочники.ВидыКонтактнойИнформации.ЭлектроннаяПочта);
		// Разделены запятыми
		Если ЗначениеЗаполнено(ЭлектроннаяПочтаОрганизации) 
			И СтрНайти(ЭлектроннаяПочтаОрганизации, ",") <> 0 Тогда
			
			Для Каждого ЧастьЭП Из СтрРазделить(ЭлектроннаяПочтаОрганизации, ",", Ложь) Цикл
				Результат.Добавить(Новый Структура("Адрес,Представление", СокрЛП(ЧастьЭП), СокрЛП(ЧастьЭП)));
			КонецЦикла; // Для Каждого ЧастьЭП Из СтрРазделить(ЭлектроннаяПочтаОрганизации, ",", Ложь) Цикл
		// Разделены ;
		ИначеЕсли ЗначениеЗаполнено(ЭлектроннаяПочтаОрганизации) 
			И СтрНайти(ЭлектроннаяПочтаОрганизации, ";") <> 0 Тогда   		
			Для Каждого ЧастьЭП Из СтрРазделить(ЭлектроннаяПочтаОрганизации, ";", Ложь) Цикл				
				Результат.Добавить(Новый Структура("Адрес,Представление", СокрЛП(ЧастьЭП), СокрЛП(ЧастьЭП)));				
			КонецЦикла; // Для Каждого ЧастьЭП Из СтрРазделить(ЭлектроннаяПочтаОрганизации, ";", Ложь) Цикл
		// Одной строкой
		ИначеЕсли ЗначениеЗаполнено(ЭлектроннаяПочтаОрганизации) Тогда		
			Результат.Добавить(Новый Структура("Адрес,Представление", СокрЛП(ЭлектроннаяПочтаОрганизации), СокрЛП(ЭлектроннаяПочтаОрганизации)));				
		КонецЕсли; // Если ЗначениеЗаполнено(ЭлектроннаяПочтаОрганизации) 
	КонецЕсли; // Если ТипЗнч(Получатель) = Тип("Строка") Тогда
	
	Возврат Результат;

КонецФункции //ПолучитьДанныеПолучателя


