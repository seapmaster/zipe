////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ФЛАГАМИ ОБЪЕКТОВ КЛИЕНТ:
// Модуль содержит клиентские процедуры и
// функции для работы с флагами объектов.
// Выполняется на клиенте.
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Устанавливает переданное значение флага реквизиту формы Флаг и картинку элементу формы
// ПодменюФлаги. В случае если в форме отсутствует реквизит Флаг или элемент формы с наименованием
// ПодменюФлаги, то вызывается исключение.
//
//  Параметры:
//  - ФормаОбъект - УправляемаяФорма - форма объекта, в которой находятся элементы управления
//									   флагами (элемент ПодменюФлаги) и реквизит хранящий
//									   текущее значение флага (Флаг).
//  - ЗначениеФлага - ПеречислениеСсылка.ФлагиОбъектов - новое значение флага которое
//													     будет сопоставлено объекту для текущего
//													     пользователя.
//  - ЗначениеКартинки - Картинка - картинка которая будет установлена элементу формы
//								    ПодменюФлаги
//
Процедура УстановитьФлагВФормеОбъекта(ФормаОбъект, ЗначениеФлага, ЗначениеКартинки) Экспорт
	
	Попытка
		ФормаОбъект.Элементы.ПодменюФлаги.Картинка = ЗначениеКартинки;
	Исключение
		ВызватьИсключение НСтр("ru = 'Ошибка при обращении к элементу ПодменюФлаги в форме!'; en = 'Error when accessing element PopupFlags in form!'");
		Возврат;
	КонецПопытки;
	
	Попытка
		ФормаОбъект.Флаг = ЗначениеФлага;;
	Исключение
		ВызватьИсключение НСтр("ru = 'Ошибка при обращении к реквизиту Флаг в форме!'; en = 'Error when accessing props Flag in form!'");
		Возврат;
	КонецПопытки;
	
	ОповеститьОбИзмененииФлага = Ложь;
	
	Попытка
		
		Если ЗначениеЗаполнено(ФормаОбъект.Объект.Ссылка) Тогда
			
			РаботаСФлагамиОбъектовСервер.УстановитьФлагОбъектуОтТекущегоПользователя(
				ФормаОбъект.Объект.Ссылка,
				ФормаОбъект.Флаг);
				
			ОповеститьОбИзмененииФлага = Истина;
			
		КонецЕсли;
		
	Исключение
		ВызватьИсключение НСтр("ru = 'Ошибка при установке флага объекту из Формы!'; en = 'An error occurred while installing a flag object from the form!'");
		Возврат;
	КонецПопытки;
	
	Если ОповеститьОбИзмененииФлага Тогда
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(ФормаОбъект.Объект.Ссылка);
		Оповестить("ИзменилсяФлаг", МассивОбъектов, ФормаОбъект);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает флаг массиву задач. При этом, если в массиве встречаются элементы отличные от
// задач, то они игнорируются. Если в переданном массиве задачи отсутствуют, то функция
// формирует предупреждение и возвращает значение Ложь, иначе возвращается значение Истина.
//
//  Параметры:
//   - МассивЗадач - Массив - массив задач (ЗадачаСсылка.ЗадачаИсполнителя, так же может
//							  присутствовать и любое другое значение; оно будет
//							  игнорироваться обработке).
//  - Флаг - ПеречислениеСсылка.ФлагиОбъектов - новое значение флага которое
//													     будет сопоставлено задачам для
//													     текущего пользователя.
//
// Возвращаемые параметры:
//  - Булево - Возвращает значение Истина, в случае если в переданном массиве присутствуют 
//			   задачи, иначе Ложь.
// 
Функция УстановитьФлагиЗадачам(МассивЗадач, Флаг) Экспорт
	
	Результат = Истина;
	
	МассивЗадачДляОбработки = Новый Массив;
	
	Для Каждого Задача Из МассивЗадач Цикл
		
		Если ТипЗнч(Задача) <> Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			Продолжить;
		Иначе
			МассивЗадачДляОбработки.Добавить(Задача);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивЗадачДляОбработки.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбраны задачи.'; en = 'Tasks are not selected.'"));
		Результат = Ложь;
	КонецЕсли;
	
	Если Результат Тогда
		РаботаСФлагамиОбъектовСервер.УстановитьФлагОбъектам(МассивЗадачДляОбработки, Флаг);
		Оповестить("ИзменилсяФлаг", МассивЗадач);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Переключает флаг задачи между значениями пустого флага
// и флагом по умолчанию для текущего пользователя.
// В случае если задаче назначен флаг отличный от флага по
// умолчанию, то произойдет установка пустого значения.
//
Процедура ПереключитьФлагЗадачи(Задача) Экспорт
	
	РаботаСФлагамиОбъектовСервер.ПереключитьФлагЗадачи(Задача);
	
	МассивЗадач = Новый Массив;
	МассивЗадач.Добавить(Задача);
	Оповестить("ИзменилсяФлаг", МассивЗадач);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

