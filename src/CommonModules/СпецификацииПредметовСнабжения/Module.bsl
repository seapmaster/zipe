//////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьТаблицуПримененияСпецификации(ПредметСнабжения, СоставляющаяЧасть)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец 									КАК Заказ,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка.Родитель 								КАК ЭлементСтруктурыЗаказаРодитель,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка 										КАК ЭлементСтруктурыЗаказа,
	|	ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ОписаниеИерархии 	КАК ОписаниеИерархии,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Количество 									КАК Количество,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПБорт 							КАК КоличествоВЗИПБорт,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПБаза 							КАК КоличествоВЗИПБаза,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПДЭ 							КАК КоличествоВЗИПДЭ,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПР 								КАК КоличествоВЗИПР
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП КАК ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП
	|		ПО (ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ЭлементСтруктуры = СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Родитель)
	|ГДЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Родитель.ПредметСнабжения = &ПредметСнабжения
	|	И СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения = &СоставляющаяЧасть
	|	И НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Тип = ЗНАЧЕНИЕ(Справочник.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа)
	|	И (СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Количество > 0
	|			ИЛИ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПБорт > 0
	|			ИЛИ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПБаза > 0
	|			ИЛИ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПДЭ > 0
	|			ИЛИ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.КоличествоВЗИПР > 0)
	|";	
	#КонецОбласти 
		
	Запрос.УстановитьПараметр("ПредметСнабжения", 	ПредметСнабжения);
	Запрос.УстановитьПараметр("СоставляющаяЧасть", 	СоставляющаяЧасть);
	
	Возврат Запрос.Выполнить().Выгрузить();
			
КонецФункции //ПолучитьТаблицуПримененияСпецификации

Функция ЕстьЗацикливание(ПредметСнабжения, СоставляющаяЧасть)

	Если ПредметСнабжения = СоставляющаяЧасть Тогда
	
		Возврат Истина;	
	
	КонецЕсли; 
	
	Спецификации = Новый Массив();
	Спецификации.Добавить(ПредметСнабжения);
	Спецификации.Добавить(СоставляющаяЧасть);
	
	Ошибка = Ложь;
	ПоискЗацикливания(СоставляющаяЧасть, Спецификации, Ошибка);
	
	Возврат Ошибка;

КонецФункции // ЕстьЗацикливание()

Процедура ПоискЗацикливания(ПредметСнабжения, Спецификации, Ошибка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть КАК ПредметСнабжения
	|ИЗ
	|	РегистрСведений.СпецификацииПредметовСнабжения КАК СпецификацииПредметовСнабжения
	|ГДЕ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения = &ПредметСнабжения";
	
	Запрос.УстановитьПараметр("ПредметСнабжения", ПредметСнабжения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Спецификации.Найти(Выборка.ПредметСнабжения) = Неопределено Тогда
			
			Спецификации.Вставить(0, Выборка.ПредметСнабжения);
			
			НайденаОшибка = Ложь;
			ПоискЗацикливания(Выборка.ПредметСнабжения, Спецификации, НайденаОшибка);
			Если НЕ Ошибка И НайденаОшибка Тогда
			      Ошибка = Истина;			
			КонецЕсли; 
						
			Спецификации.Удалить(0);
			
		Иначе
			
			Ошибка = Истина;
			Прервать;
			
		КонецЕсли; 	
					
	КонецЦикла;
	
КонецПроцедуры  //ПоискЗацикливания

//////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область Актуализация

Процедура ДобавитьВРегистрАктуализацияСтруктурыПС(ПредметСнабжения, Отложен) Экспорт

	НаборЗаписей = РегистрыСведений.АктуализацияСтруктурыПС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПредметСнабжения.Установить(ПредметСнабжения);
	
	НоваяЗапись 					= НаборЗаписей.Добавить();
	НоваяЗапись.ПредметСнабжения 	= ПредметСнабжения;
	НоваяЗапись.Отложен 			= Отложен;
	НоваяЗапись.Дата				= ТекущаяДата();
	
	НаборЗаписей.Записать();
	
КонецПроцедуры // ДобавитьВРегистрАктуализацияСтруктурыПС

Процедура УдалитьИзОчередиАктуализиции(ПредметСнабжения) Экспорт

	НаборЗаписей = РегистрыСведений.АктуализацияСтруктурыПС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПредметСнабжения.Установить(ПредметСнабжения);
	НаборЗаписей.Записать();

КонецПроцедуры // УдалитьИзОчередиАктуализиции

Процедура ЗаписатьСообщениеОбОшиибкеВОчередьАктуализиции(ПредметСнабжения, ОписаниеОшибки) Экспорт

	Запись = РегистрыСведений.АктуализацияСтруктурыПС.СоздатьМенеджерЗаписи();
	Запись.ПредметСнабжения  = ПредметСнабжения;
	Запись.Прочитать();
	
	Запись.СообщениеОбОшибке = ОписаниеОшибки;
	Запись.КоличествоПопыток = Запись.КоличествоПопыток + 1;
	Запись.Дата 			 = ТекущаяДата();
	Запись.Записать();

КонецПроцедуры // ЗаписатьСообщениеОбОшиибкеВОчередьАктуализиции

Функция ПолучитьСостояниеОтложен(ПредметСнабжения) Экспорт

	Запись = РегистрыСведений.АктуализацияСтруктурыПС.СоздатьМенеджерЗаписи();
	Запись.ПредметСнабжения = ПредметСнабжения;
	Запись.Прочитать();
	
	Если Запись.Выбран() Тогда
	
		Возврат Запись.Отложен;	
	
	КонецЕсли; 
	
	Возврат Ложь;
	
КонецФункции // ПолучитьСостояниеОтложен

#КонецОбласти

Процедура УдалитьСоставляющуюЧастьИзСпецификации(ПредметСнабжения, СоставляющаяЧасть) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПредметСнабжения) ИЛИ НЕ ЗначениеЗаполнено(СоставляющаяЧасть) Тогда
		
		ВызватьИсключение Нстр("ru = 'Недостаточно данных для выполнения удаления составной части из спецификации'");		
	
	КонецЕсли; 
	
	НаборЗаписей = РегистрыСведений.СпецификацииПС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПредметСнабжения.Установить(ПредметСнабжения);
	НаборЗаписей.Отбор.СоставляющаяЧасть.Установить(СоставляющаяЧасть);
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ДобавитьСоставляющуюЧастьВСпецификацию(ПредметСнабжения, СоставляющаяЧасть, Тип = Неопределено, ЗИП = Ложь, ПричинаВыбораДляЗИП = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПредметСнабжения) ИЛИ НЕ ЗначениеЗаполнено(СоставляющаяЧасть) Тогда
		
		ВызватьИсключение Нстр("ru = 'Недостаточно данных для выполнения добавления составной части в спецификацию'");		
	
	КонецЕсли; 
	
	Запись 						= РегистрыСведений.СпецификацииПС.СоздатьМенеджерЗаписи();
	Запись.ПредметСнабжения 	= ПредметСнабжения;
	Запись.СоставляющаяЧасть 	= СоставляющаяЧасть;
	
	Запись.Прочитать();
	
	Если НЕ Запись.Выбран() Тогда
		
		Запись.ПредметСнабжения 	= ПредметСнабжения;
		Запись.СоставляющаяЧасть 	= СоставляющаяЧасть;
		Запись.Тип					= ?(НЕ Тип = Неопределено, Тип, Константы.ЗначениеПоУмолчаниюРазделСпецификацииЗИП.Получить());
		Запись.ПричинаВыбораДляЗИП  = ?(НЕ ПричинаВыбораДляЗИП = Неопределено, ПричинаВыбораДляЗИП, Константы.ЗначениеПоУмолчаниюПричинаВыбораПредметаСнабженияДляЗИП.Получить());
		Запись.ЗИП 					= ЗИП;
		
		Запись.Записать();

	КонецЕсли; 
	
КонецПроцедуры

Функция ПроверитьВозможностьУдаленияСоставнойЧастиИзСпецификацииПредметаСнабжения(ПредметСнабжения, СоставляющаяЧасть) Экспорт
	
	РезультатПроверки = Новый Структура("Отказ, Описание", Ложь, "");
	
	ТаблицаПримененияСпецификации = ПолучитьТаблицуПримененияСпецификации(ПредметСнабжения, СоставляющаяЧасть);
	
	Если ТаблицаПримененияСпецификации.Количество() > 0 Тогда
		
		РезультатПроверки.Отказ = Истина;
		
		Описание = НСтр("ru = 'Возможны потери данных после изменения спецификации '");
		
		Для каждого СтрокаПрименения Из ТаблицаПримененияСпецификации Цикл
			
			Описание = Описание + Символы.ПС + СтрШаблон(
				НСтр("ru = '%1, в структуре %2/%3 %4%5%6%7%8'"), 
				СтрокаПрименения.Заказ, 
				СтрокаПрименения.ОписаниеИерархии, 
				СтрокаПрименения.ЭлементСтруктурыЗаказаРодитель,
				?(СтрокаПрименения.Количество > 0, 			СтрШаблон(НСтр("ru = 'Количество = %1,'"), 	СтрокаПрименения.Количество), ""),
				?(СтрокаПрименения.КоличествоВЗИПБорт > 0, 	СтрШаблон(НСтр("ru = 'ЗИП Борт = %1,'"), 	СтрокаПрименения.КоличествоВЗИПБорт), ""),
				?(СтрокаПрименения.КоличествоВЗИПБаза > 0, 	СтрШаблон(НСтр("ru = 'ЗИП Б = %1,'"), 		СтрокаПрименения.КоличествоВЗИПБаза), ""),
				?(СтрокаПрименения.КоличествоВЗИПДЭ > 0, 	СтрШаблон(НСтр("ru = 'ЗИП ДЭ = %1,'"), 		СтрокаПрименения.КоличествоВЗИПДЭ), ""),
				?(СтрокаПрименения.КоличествоВЗИПР > 0, 	СтрШаблон(НСтр("ru = 'ЗИП Р = %1,'"), 		СтрокаПрименения.КоличествоВЗИПР), "")); 			
					
		КонецЦикла;
		
		РезультатПроверки.Описание = Описание;
		
	КонецЕсли;
	
	Возврат РезультатПроверки;
	
КонецФункции //ПроверитьВозможностьУдаленияПредметаСнабженияИзСпецификации

Функция ПроверитьВозможностьДобавленияСоставнойЧастиВСпецификациюПредметаСнабжения(ПредметСнабжения, СоставляющаяЧасть) Экспорт
	
	РезультатПроверки = Новый Структура("Отказ, Описание", Ложь, "");
	
	Если ЕстьЗацикливание(ПредметСнабжения, СоставляющаяЧасть) Тогда
	
		РезультатПроверки.Отказ = Истина;
		РезультатПроверки.Описание = СтрШаблон(НСтр("ru = 'Добавление %1 в спецификацию %2 приведет к зацикливанию спецификации!'"), СоставляющаяЧасть, ПредметСнабжения);
	
	КонецЕсли;	
		
	Возврат РезультатПроверки;
	
КонецФункции //ПроверитьВозможностьУдаленияПредметаСнабженияИзСпецификации

Процедура ОбновитьСпецификациюПредметаСнабжения(ПредметСнабжения, ТаблицаСпецификации) Экспорт

	СпецификацииНаборЗаписей = РегистрыСведений.СпецификацииПС.СоздатьНаборЗаписей();
	СпецификацииНаборЗаписей.Отбор.ПредметСнабжения.Установить(ПредметСнабжения);
	СпецификацииНаборЗаписей.Загрузить(ТаблицаСпецификации);
	
	Попытка
		СпецификацииНаборЗаписей.Записать(); 	
	Исключение
		ТекстИсключения = "";
		Для Каждого Сообщение Из ПолучитьСообщенияПользователю(Ложь) Цикл
			ТекстИсключения = ТекстИсключения + Символы.ПС + Сообщение.Текст;
		КонецЦикла;
		Если ТекстИсключения = "" Тогда
			ВызватьИсключение;
		Иначе
			ВызватьИсключение СокрЛП(ТекстИсключения);
		КонецЕсли;
	КонецПопытки;

КонецПроцедуры // ОбновитьСпецификациюПредметаСнабжения 

Функция ПолучитьПредметыСнабженияДляАктуализиции() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаЗаписи", ТекущаяДата() - 60*60*24); 
	Запрос.УстановитьПараметр("КоличествоПопыток", Справочники.Настройки.ПолучитьМаксимальноеКоличествоПопытокПриАктуализацииСтруктурыЗаказов());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктуализацияСтруктурыПС.ПредметСнабжения КАК ПредметСнабжения
	|ИЗ
	|	РегистрСведений.АктуализацияСтруктурыПС КАК АктуализацияСтруктурыПС
	|ГДЕ
	|	НЕ АктуализацияСтруктурыПС.Отложен
	|	И КоличествоПопыток < &КоличествоПопыток";

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПредметСнабжения");
	
КонецФункции // ПолучитьПредметыСнабженияДляАктуализиции

Функция ОчиститьСпецификациюПредметаСнабжения(ПредметСнабжения) Экспорт
	
	НаборЗаписей = РегистрыСведений.СпецификацииПС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПредметСнабжения.Установить(ПредметСнабжения);
	НаборЗаписей.Записать();
	
КонецФункции

Функция УдалитьСоставляющуюЧастьИзСпецификацийСДобавлениемВОчередь(СоставляющаяЧасть) Экспорт
	
	НаборЗаписей = РегистрыСведений.СпецификацииПС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СоставляющаяЧасть.Установить(СоставляющаяЧасть);
	НаборЗаписей.Прочитать();
	
	Для каждого Запись Из НаборЗаписей Цикл
	
		ДобавитьВРегистрАктуализацияСтруктурыПС(Запись.ПредметСнабжения, Ложь);	
	
	КонецЦикла; 
	
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
			
КонецФункции

Функция ВыгрузитьСпецификациюВТаблицуЗначений(ПредметСнабжения) Экспорт
	
	НаборЗаписей = РегистрыСведений.СпецификацииПС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПредметСнабжения.Установить(ПредметСнабжения);
	НаборЗаписей.Прочитать();
	
	Возврат НаборЗаписей.Выгрузить(); 
	
КонецФункции

Функция ПредметСнабженияИмеетСпецификацию(ПредметСнабжения) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СпецификацииПредметовСнабжения.ПредметСнабжения
	|ИЗ
	|	РегистрСведений.СпецификацииПС КАК СпецификацииПредметовСнабжения
	|ГДЕ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения = &ПредметСнабжения";
	
	Запрос.УстановитьПараметр("ПредметСнабжения", ПредметСнабжения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();		

КонецФункции // ПредметСнабженияИмеетСпецификацию

Функция СоставляющаяЧастьВходитВСпецификацию(ПредметСнабжения, СоставляющаяЧасть) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения КАК ПредметСнабжения
	|ИЗ
	|	РегистрСведений.СпецификацииПС КАК СпецификацииПредметовСнабжения
	|ГДЕ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения = &ПредметСнабжения
	|	И СпецификацииПредметовСнабжения.СоставляющаяЧасть = &СоставляющаяЧасть";
	
	Запрос.УстановитьПараметр("ПредметСнабжения", ПредметСнабжения);
	Запрос.УстановитьПараметр("СоставляющаяЧасть", СоставляющаяЧасть);

	РезультатЗапроса = Запрос.Выполнить();	
	Возврат Не РезультатЗапроса.Пустой();		
КонецФункции // СоставляющаяЧастьВходитВСпецификацию
