////////////////////////////////////////////////////////////////////////////////
// Модуль предназначен для общих процедур и функций.
// Создан отдельно вместо использования модуля 
// ОбщегоНазначенияКлиентПереопределяемый 
// для максимального упрощения возможного обновления БСП.
// Савинов А.А. 13.04.2017
////////////////////////////////////////////////////////////////////////////////

#Область Массивы

// Функция предназначена для получения массива без повторяющихся значений
// Параметры:
// Массив - Массив
//
Функция УдалитьДублиИзМассива(Массив) Экспорт

	ТекущийИндекс = 0; 
	
	ВсегоЭлементов = Массив.Количество(); 
	
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		
		Индекс2 = ТекущийИндекс + 1; 
		
		Пока Индекс2 < ВсегоЭлементов Цикл 
			
			Если Массив[Индекс2] = Массив[ТекущийИндекс] Тогда 
				//АВ+
				Массив.Удалить(Индекс2); 
				
				ВсегоЭлементов = ВсегоЭлементов - 1; 
				
			Иначе 
				
				Индекс2 = Индекс2 + 1; 
				
			КонецЕсли; 
			
		КонецЦикла; 
		
		ТекущийИндекс = ТекущийИндекс + 1; 
		
	КонецЦикла;
	
	Возврат Массив;

КонецФункции // УдалитьДублиИзМассива()

#КонецОбласти

#Область СтроковыеФункции

// Аналог функции ОбщиеФункцииСервер.ПолучитьСиноним()
// Параметры:
// ТекущаяСтрока - Строка
//
Функция ПолучитьСиноним(Знач ТекущаяСтрока) Экспорт
	
	МассивСтрокиВозврата = Новый Массив;
	
	ПозицияТочки = Найти(ТекущаяСтрока, ".");
	
	ЕстьТочки = ПозицияТочки > 0;
	
	Если ЕстьТочки Тогда
		
		Пока ПозицияТочки > 0 Цикл
			
			ЧастьСтроки = Лев(ТекущаяСтрока, ПозицияТочки - 1);
			
			МассивСтрокиВозврата.Добавить(Лев(ЧастьСтроки, 1));
			
			ДлинаСтроки = СтрДлина(ЧастьСтроки);
			
			Для Н = 2 По ДлинаСтроки Цикл
				
				ТекущийСимвол = Сред(ЧастьСтроки, Н, 1);
				
				НРегТекущийСимвол = НРег(ТекущийСимвол);
				
				Если Не ТекущийСимвол = НРегТекущийСимвол Тогда
					
					МассивСтрокиВозврата.Добавить(" ");
					
				КонецЕсли;
				
				МассивСтрокиВозврата.Добавить(НРегТекущийСимвол);
				
			КонецЦикла;	
			
			МассивСтрокиВозврата.Добавить(".");
			
			ТекущаяСтрока = Прав(ТекущаяСтрока, СтрДлина(ТекущаяСтрока) - ПозицияТочки);
			
			ПозицияТочки = Найти(ТекущаяСтрока, ".");
			
		КонецЦикла;
		
	КонецЕсли;
	
	МассивСтрокиВозврата.Добавить(Лев(ТекущаяСтрока, 1));
	
	ДлинаСтроки = СтрДлина(ТекущаяСтрока);
	
	Для Н = 2 По ДлинаСтроки Цикл
		
		ТекущийСимвол = Сред(ТекущаяСтрока, Н, 1);
		
		НРегТекущийСимвол = НРег(ТекущийСимвол);
		
		Если Не ТекущийСимвол = НРегТекущийСимвол Тогда
			
			МассивСтрокиВозврата.Добавить(" ");
			
		КонецЕсли;
		
		МассивСтрокиВозврата.Добавить(НРегТекущийСимвол);
		
	КонецЦикла;
	
	Возврат СтрСоединить(МассивСтрокиВозврата);
	
КонецФункции // ПолучитьСиноним()

#КонецОбласти

#Область XML

// Функция предназначена для получения значения с типом Дата из строки формата YYYY-MM-DD
// Параметры:
// ЗначениеАтрибута - Строка
//
Функция ПолучитьДатуИзЗначенияАтрибутаСтрокиXML(Знач ЗначениеАтрибута) Экспорт

	Возврат Дата(СтрЗаменить(ЗначениеАтрибута, "-", ""));	

КонецФункции // ПолучитьДатуИзЗначенияАтрибутаСтрокиXML()


#КонецОбласти