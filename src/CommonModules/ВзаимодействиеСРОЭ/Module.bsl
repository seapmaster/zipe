// Завершает активную задачу БП
Процедура ЗавершитьТекущуюЗадачу(БизнесПроцесс)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗадачаИсполнителя.Ссылка КАК Ссылка
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
	|	И НЕ ЗадачаИсполнителя.Выполнена";
	
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		БизнесПроцессыИЗадачиВызовСервера.ВыполнитьЗадачу(Выборка.Ссылка);
		
	КонецЦикла; 
	
КонецПроцедуры

#Область Заполнение


Функция ЗаполнитьТаблицуДляВыгрузки(МассивПС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Истина КАК Основной,
	|	"""" КАК Строка,
	|	КаталогПС.Ссылка КАК СсылкаПС,
	|	ВЫРАЗИТЬ(КаталогПС.Наименование КАК СТРОКА(250)) КАК Наименование,
	|	ВЫРАЗИТЬ(ДополнительныеНаименования.Перевод КАК СТРОКА(250)) КАК Перевод,
	|	ВЫРАЗИТЬ(КаталогПС.Обозначение КАК СТРОКА(50)) КАК Обозначение,
	|	ВЫРАЗИТЬ(КаталогПС.ДокументНаПоставку КАК СТРОКА(50)) КАК Документ,
	|	"""" КАК Входимость,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Изготовители.Контрагент.Название, ""АО «ОСК»"") КАК СТРОКА(250)) КАК НаименованиеПредприятияИзготовителя,
	|	ЕСТЬNULL(Изготовители.Контрагент.ОКПО, ""82264639"") КАК КодОКПОПредприятияИзготовителя,
	|	""1"" КАК Применяемость
	|ИЗ
	|	Справочник.КаталогПредметовСнабжения КАК КаталогПС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	|		ПО КаталогПС.Ссылка = ДополнительныеНаименования.Владелец
	|			И (ДополнительныеНаименования.ИмяРеквизита = ""Наименование"")
	|			И (ДополнительныеНаименования.Язык = ЗНАЧЕНИЕ(Справочник.Языки.Английский))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(КаталогПредметовСнабженияИзготовителиИПоставщики.Контрагент) КАК Контрагент,
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка КАК Ссылка
	|		ИЗ
	|			Справочник.КаталогПредметовСнабжения.ИзготовителиИПоставщики КАК КаталогПредметовСнабженияИзготовителиИПоставщики
	|		ГДЕ
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Изготовитель
	|			И КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка В(&МассивПС)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка) КАК Изготовители
	|		ПО КаталогПС.Ссылка = Изготовители.Ссылка
	|ГДЕ
	|	КаталогПС.Ссылка В(&МассивПС)";
	
	Запрос.УстановитьПараметр("МассивПС", МассивПС);
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Возврат Выборка;
	
КонецФункции

Функция ЗаполнитьТаблицуСпецификаций(МассивПС) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КаталогПС.Ссылка КАК Ссылка,
	|	ИСТИНА КАК Основной
	|ПОМЕСТИТЬ врТаблицаПС
	|ИЗ
	|	Справочник.КаталогПредметовСнабжения КАК КаталогПС
	|ГДЕ
	|	КаталогПС.Ссылка В(&МассивПС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КаталогПС.Ссылка КАК Ссылка,
	|	"""" КАК Входимость,
	|	КаталогПС.Ссылка.Наименование КАК Наименование,
	|	КаталогПС.Ссылка.Обозначение КАК Обозначение,
	|	КаталогПС.Ссылка.ДокументНаПоставку КАК ДокументНаПоставку
	|ПОМЕСТИТЬ ТаблицаСпец
	|ИЗ
	|	Справочник.КаталогПредметовСнабжения КАК КаталогПС
	|ГДЕ
	|	КаталогПС.Ссылка В
	|			(ВЫБРАТЬ
	|				врТаблицаПС.Ссылка
	|			ИЗ
	|				врТаблицаПС КАК врТаблицаПС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть,
	|	СпецификацииПредметовСнабжения.ПредметСнабжения.Обозначение + "" "" + СпецификацииПредметовСнабжения.ПредметСнабжения.Наименование,
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть.Наименование,
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть.Обозначение,
	|	СпецификацииПредметовСнабжения.СоставляющаяЧасть.ДокументНаПоставку
	|ИЗ
	|	РегистрСведений.СпецификацииПС КАК СпецификацииПредметовСнабжения
	|ГДЕ
	|	СпецификацииПредметовСнабжения.ПредметСнабжения В
	|			(ВЫБРАТЬ
	|				врТаблицаПС.Ссылка
	|			ИЗ
	|				врТаблицаПС КАК врТаблицаПС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаПС.Основной, ЛОЖЬ) КАК Основной,
	|	КаталогПС.Ссылка КАК СсылкаПС,
	|	ВЫРАЗИТЬ(КаталогПС.Наименование КАК СТРОКА(250)) КАК Наименование,
	|	ВЫРАЗИТЬ(ДополнительныеНаименования.Перевод КАК СТРОКА(250)) КАК Перевод,
	|	ВЫРАЗИТЬ(КаталогПС.Обозначение КАК СТРОКА(50)) КАК Обозначение,
	|	ВЫРАЗИТЬ(КаталогПС.ДокументНаПоставку КАК СТРОКА(50)) КАК Документ,
	|	КаталогПС.Входимость КАК Входимость,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Изготовители.Контрагент.Название, ""АО «ОСК»"") КАК СТРОКА(250)) КАК НаименованиеПредприятияИзготовителя,
	|	ЕСТЬNULL(Изготовители.Контрагент.ОКПО, ""82264639"") КАК КодОКПОПредприятияИзготовителя,
	|	""1"" КАК Применяемость
	|ИЗ
	|	ТаблицаСпец КАК КаталогПС
	|		ЛЕВОЕ СОЕДИНЕНИЕ врТаблицаПС КАК ТаблицаПС
	|		ПО КаталогПС.Ссылка = ТаблицаПС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	|		ПО КаталогПС.Ссылка = ДополнительныеНаименования.Владелец
	|			И (ДополнительныеНаименования.ИмяРеквизита = ""Наименование"")
	|			И (ДополнительныеНаименования.Язык = ЗНАЧЕНИЕ(Справочник.Языки.Английский))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(КаталогПредметовСнабженияИзготовителиИПоставщики.Контрагент) КАК Контрагент,
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка КАК Ссылка
	|		ИЗ
	|			Справочник.КаталогПредметовСнабжения.ИзготовителиИПоставщики КАК КаталогПредметовСнабженияИзготовителиИПоставщики
	|		ГДЕ
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Изготовитель
	|			И КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка В(&МассивПС)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка) КАК Изготовители
	|		ПО КаталогПС.Ссылка = Изготовители.Ссылка";
	
	Запрос.УстановитьПараметр("МассивПС", МассивПС);
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Возврат Выборка;
	
КонецФункции

Функция ЗаполнитьТаблицуДереваСпецификаций(МассивПС) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КаталогПС.Ссылка КАК Ссылка,
	|	ИСТИНА КАК Основной
	|ПОМЕСТИТЬ врТаблицаПС
	|ИЗ
	|	Справочник.КаталогПредметовСнабжения КАК КаталогПС
	|ГДЕ
	|	КаталогПС.Ссылка В(&МассивПС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЭталонныеИзделияВСтруктуреЗаказов.ЭлементСтруктурыЗаказа КАК СсылкаПС
	|ПОМЕСТИТЬ КаталогПС
	|ИЗ
	|	РегистрСведений.ЭталонныеИзделияВСтруктуреЗаказов КАК ЭталонныеИзделияВСтруктуреЗаказов
	|ГДЕ
	|	ЭталонныеИзделияВСтруктуреЗаказов.ПредметСнабжения В
	|			(ВЫБРАТЬ
	|				врТаблицаПС.Ссылка
	|			ИЗ
	|				врТаблицаПС КАК врТаблицаПС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КаталогПС.Ссылка КАК Ссылка,
	|	"""" КАК Входимость,
	|	КаталогПС.Ссылка.Наименование КАК Наименование,
	|	КаталогПС.Ссылка.Обозначение КАК Обозначение,
	|	КаталогПС.Ссылка.ДокументНаПоставку КАК ДокументНаПоставку
	|ПОМЕСТИТЬ ТаблицаСпец
	|ИЗ
	|	Справочник.КаталогПредметовСнабжения КАК КаталогПС
	|ГДЕ
	|	КаталогПС.Ссылка В
	|			(ВЫБРАТЬ
	|				врТаблицаПС.Ссылка
	|			ИЗ
	|				врТаблицаПС КАК врТаблицаПС)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СтруктураЗаказа.ПредметСнабжения,
	|	ЕСТЬNULL(СтруктураЗаказа.Родитель.ПредметСнабжения.Обозначение, """") + "" "" + ЕСТЬNULL(СтруктураЗаказа.Родитель.ПредметСнабжения.Наименование, """"),
	|	СтруктураЗаказа.ПредметСнабжения.Наименование,
	|	СтруктураЗаказа.ПредметСнабжения.Обозначение,
	|	СтруктураЗаказа.ПредметСнабжения.ДокументНаПоставку
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказа
	|ГДЕ
	|	НЕ СтруктураЗаказа.Тип = ЗНАЧЕНИЕ(Справочник.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа)
	|	И СтруктураЗаказа.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ
	|				КаталогПС.СсылкаПС
	|			ИЗ
	|				КаталогПС КАК КаталогПС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(врТаблицаПС.Основной, ЛОЖЬ) КАК Основной,
	|	КаталогПС.Ссылка КАК СсылкаПС,
	|	КаталогПС.Ссылка.Код КАК КодПС,
	|	ВЫРАЗИТЬ(КаталогПС.Наименование КАК СТРОКА(250)) КАК Наименование,
	|	ВЫРАЗИТЬ(ДополнительныеНаименования.Перевод КАК СТРОКА(250)) КАК Перевод,
	|	ВЫРАЗИТЬ(КаталогПС.Обозначение КАК СТРОКА(50)) КАК Обозначение,
	|	ВЫРАЗИТЬ(КаталогПС.ДокументНаПоставку КАК СТРОКА(50)) КАК Документ,
	|	КаталогПС.Входимость КАК Входимость,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Изготовители.Контрагент.Название, ""АО «ОСК»"") КАК СТРОКА(250)) КАК НаименованиеПредприятияИзготовителя,
	|	ЕСТЬNULL(Изготовители.Контрагент.ОКПО, ""82264639"") КАК КодОКПОПредприятияИзготовителя,
	|	""1"" КАК Применяемость
	|ИЗ
	|	ТаблицаСпец КАК КаталогПС
	|		ЛЕВОЕ СОЕДИНЕНИЕ врТаблицаПС КАК врТаблицаПС
	|		ПО КаталогПС.Ссылка = врТаблицаПС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	|		ПО КаталогПС.Ссылка = ДополнительныеНаименования.Владелец
	|			И (ДополнительныеНаименования.ИмяРеквизита = ""Наименование"")
	|			И (ДополнительныеНаименования.Язык = ЗНАЧЕНИЕ(Справочник.Языки.Английский))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(КаталогПредметовСнабженияИзготовителиИПоставщики.Контрагент) КАК Контрагент,
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка КАК Ссылка
	|		ИЗ
	|			Справочник.КаталогПредметовСнабжения.ИзготовителиИПоставщики КАК КаталогПредметовСнабженияИзготовителиИПоставщики
	|		ГДЕ
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Изготовитель
	|			И КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка В(&МассивПС)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка) КАК Изготовители
	|		ПО КаталогПС.Ссылка = Изготовители.Ссылка";
	
	Запрос.УстановитьПараметр("МассивПС", МассивПС);
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Возврат Выборка;
	
КонецФункции

Процедура ЗаполнитьДанныеНаСервере(НовыйБП, ДокСсылка) Экспорт
	
	НовыйБП.Исполнитель = Справочники.РолиИсполнителей.СпециалистПоВедениюБДЗИПЭ;
	НовыйБП.Наименование = "Каталогизация в РОЭ";
	НовыйБП.СрокИсполнения = ТекущаяДата() + 30*24*3600;
	
	Если ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.Заявка") Тогда
		МассивПС = ДокСсылка.Спецификация.ВыгрузитьКолонку("ПредметСнабжения");
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("ДокументСсылка.Контракт") Тогда
		МассивПС = ДокСсылка.ПредметыСнабжения.ВыгрузитьКолонку("ПредметСнабжения");
	ИначеЕсли ТипЗнч(ДокСсылка) = Тип("Массив") Тогда
		// Массив выделенных строк из каталога ПС
		МассивПС = ДокСсылка;
	КонецЕсли; 
	
	ТаблЧастьПС = НовыйБП.ПредметыСнабжения;
	
	Для каждого Строка Из МассивПС Цикл
		Если НЕ ЗначениеЗаполнено(Строка) Тогда
			Продолжить;
		КонецЕсли; 
		НовСтр = ТаблЧастьПС.Добавить();
		НовСтр.СсылкаПС = Строка;
		НовСтр.Основной = Истина;
	КонецЦикла; 
	
КонецПроцедуры


#КонецОбласти // Заполнение 

Функция НайтиСоздатьУтвержденноеНаименование(Структура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УтвержденныеНаименованияПредметовСнабжения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УтвержденныеНаименованияПредметовСнабжения КАК УтвержденныеНаименованияПредметовСнабжения
	|ГДЕ
	|	УтвержденныеНаименованияПредметовСнабжения.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", Структура.INC);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	Иначе
		
		НовЭлемент = Справочники.УтвержденныеНаименованияПредметовСнабжения.СоздатьЭлемент();
		НовЭлемент.Код = Структура.INC;
		НовЭлемент.Наименование 	= Структура.NAME_RU;
		НовЭлемент.НаименованиеАнгл = Структура.NAME_EN;
		//++ 26.02.2018 Веденеев П. //тип реквизита изменен со строки на ссылку
		//НовЭлемент.КлассПоЕКПС 		= Структура.NSC;
		НовЭлемент.КлассПоЕКПС 		= Справочники.ЕКПС.НайтиПоКоду(Структура.NSG+Структура.NSC);
		//-- 26.02.2018 Веденеев П. //тип реквизита изменен со строки на ссылку
		НовЭлемент.Записать();
		
		Возврат НовЭлемент.Ссылка;
		
	КонецЕсли;  
	
КонецФункции


Функция НайтиЭлементКаталогаНАТО(NSN="", NCAGE="", Обозначение="")
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПредметыСнабженияНАТО.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПредметыСнабженияНАТО КАК ПредметыСнабженияНАТО
	|ГДЕ
	|	ПредметыСнабженияНАТО.КодNSN = &КодNSN
	|	И ПредметыСнабженияНАТО.NCAGE = &NCAGE
	|	И ПредметыСнабженияНАТО.RN = &RN";
	
	Запрос.УстановитьПараметр("КодNSN", NSN);
	Запрос.УстановитьПараметр("NCAGE",  NCAGE);
	Запрос.УстановитьПараметр("RN",     СокрЛП(Обозначение));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	Иначе
		
		Возврат Справочники.ПредметыСнабженияНАТО.ПустаяСсылка();
		
	КонецЕсли; 
	
КонецФункции

Функция СоздатьЭлементКаталогаНАТО(Данные = Неопределено, СсылкаУН)
	
	НовЭлемент = Справочники.ПредметыСнабженияНАТО.СоздатьЭлемент();
	
	ЗаполнитьЗначенияСвойств(НовЭлемент, Данные);
	
	НовЭлемент.Наименование = Данные.INC;
	
	НовЭлемент.КодNSN = Данные.NSN;
	
	Если НЕ СокрЛП(Данные.DATE_CREA) = "" Тогда
		НовЭлемент.DATE_CREA = Дата(СтрЗаменить(СтрЗаменить(Данные.DATE_CREA," 00:00:00.0",""),"-",""));
	КонецЕсли; 
	Если НЕ СокрЛП(Данные.DATE_ASSI) = "" Тогда
		НовЭлемент.DATE_ASSI = Дата(СтрЗаменить(СтрЗаменить(Данные.DATE_ASSI," 00:00:00.0",""),"-",""));
	КонецЕсли; 
	Если НЕ СокрЛП(Данные.DATE_CANC) = "" Тогда
		НовЭлемент.DATE_CANC = Дата(СтрЗаменить(СтрЗаменить(Данные.DATE_CANC," 00:00:00.0",""),"-",""));
	КонецЕсли; 
		
	НовЭлемент.AIN = СсылкаУН.Наименование;

	НовЭлемент.Записать();
	
	Возврат НовЭлемент.Ссылка;
	
КонецФункции
 

Функция ОбновитьДанныеКаталогаПС(БизнесПроцесс)
	
	Результат = Новый Структура("Выполнено, Описание", Истина, "");

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаимодействиеСРОЭПредметыСнабжения.СсылкаПС КАК СсылкаПС,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NSN КАК NSN,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RN КАК RN,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RN_TRANSLIT КАК RN_TRANSLIT,
	|	ВзаимодействиеСРОЭПредметыСнабжения.ORIG_NAME_RU КАК ORIG_NAME_RU,
	|	ВзаимодействиеСРОЭПредметыСнабжения.ORIG_NAME_ENG КАК ORIG_NAME_ENG,
	|	ВзаимодействиеСРОЭПредметыСнабжения.ORIG_NAME_TRANSLIT КАК ORIG_NAME_TRANSLIT,
	|	ВзаимодействиеСРОЭПредметыСнабжения.INC КАК INC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NAME_EN КАК NAME_EN,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NAME_RU КАК NAME_RU,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NSG КАК NSG,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NSC КАК NSC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NCAGE КАК NCAGE,
	|	ВзаимодействиеСРОЭПредметыСнабжения.CODIFIED_BY КАК CODIFIED_BY,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NAME_ORG КАК NAME_ORG,
	|	ВзаимодействиеСРОЭПредметыСнабжения.NAME_ORG_TRANSLIT КАК NAME_ORG_TRANSLIT,
	|	ВзаимодействиеСРОЭПредметыСнабжения.CIN КАК CIN,
	|	ВзаимодействиеСРОЭПредметыСнабжения.DATE_CREA КАК DATE_CREA,
	|	ВзаимодействиеСРОЭПредметыСнабжения.DATE_ASSI КАК DATE_ASSI,
	|	ВзаимодействиеСРОЭПредметыСнабжения.DATE_CANC КАК DATE_CANC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.TIIC КАК TIIC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RPDMRC КАК RPDMRC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.KIDN КАК KIDN,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RNCC КАК RNCC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RNVC КАК RNVC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.DAC КАК DAC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RNJC КАК RNJC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RNSC КАК RNSC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RNFC КАК RNFC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.RNAAC КАК RNAAC,
	|	ВзаимодействиеСРОЭПредметыСнабжения.N_STROKI КАК N_STROKI
	|ИЗ
	|	БизнесПроцесс.ВзаимодействиеСРОЭ.ПредметыСнабжения КАК ВзаимодействиеСРОЭПредметыСнабжения
	|ГДЕ
	|	ВзаимодействиеСРОЭПредметыСнабжения.Ссылка = &БизнесПроцесс
	|	И НЕ ВзаимодействиеСРОЭПредметыСнабжения.NSN = """"";
	
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	
	Выборка = Запрос.Выполнить().Выбрать();
	АнглЯзык = Справочники.Языки.Английский;
	РеквизитПеревода = "Наименование";
	
	НаборПеревод = РегистрыСведений.ДополнительныеНаименования.СоздатьНаборЗаписей();
	НаборПеревод.Отбор.Язык.Установить(АнглЯзык);
	НаборПеревод.Отбор.ИмяРеквизита.Установить(РеквизитПеревода);
	
	ПредметыСнабженияНАТОПустая = Справочники.ПредметыСнабженияНАТО.ПустаяСсылка();
	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		// Спр УтвержденноеНаименование
		Стру = Новый Структура;
		Стру.Вставить("INC", 	 СокрЛП(Выборка.INC));
		Стру.Вставить("NAME_EN", СокрЛП(Выборка.NAME_EN));
		Стру.Вставить("NAME_RU", СокрЛП(Выборка.NAME_RU));
		Стру.Вставить("NSG", 	 СокрЛП(Выборка.NSG));
		Стру.Вставить("NSC", 	 СокрЛП(Выборка.NSC));
		СсылкаУН = НайтиСоздатьУтвержденноеНаименование(Стру);
		
		НайденныйЭлемент = НайтиЭлементКаталогаНАТО(Выборка.NSN, Выборка.NCAGE, Выборка.RN);
		
		Если НайденныйЭлемент = ПредметыСнабженияНАТОПустая Тогда
			
			НайденныйЭлемент = СоздатьЭлементКаталогаНАТО(Выборка, СсылкаУН);
			
		КонецЕсли; 
		
		СправочникОбъект = Выборка.СсылкаПС.ПолучитьОбъект();
		
		СправочникОбъект.NSN = НайденныйЭлемент;
		
		Если СправочникОбъект.Обозначение = "" Тогда
			СправочникОбъект.Обозначение = Выборка.RN;
		КонецЕсли; 
		
		СправочникОбъект.ЕКПС = Справочники.ЕКПС.НайтиПоКоду(Выборка.NSG+Выборка.NSC);
		
		СправочникОбъект.УтвержденноеНаименование = СсылкаУН;
		
		Попытка
			СправочникОбъект.Записать();
			// Перевод
			ОбщиеФункцииСервер.ЗаписатьПеревод(СправочникОбъект.Ссылка, РеквизитПеревода, АнглЯзык, СокрЛП(Выборка.ORIG_NAME_ENG));
		Исключение
			ОтменитьТранзакцию();
			ОписаниеОшибки = ОписаниеОшибки();
			Результат.Описание = ОписаниеОшибки;
			Результат.Выполнено = Ложь;
		КонецПопытки;
		
	КонецЦикла;  
	
	Результат.Выполнено = Истина;
	
	ЗафиксироватьТранзакцию();
	
	Возврат Результат;
	
КонецФункции
 

// Процедура - Регламентное задание - Взаимодействие РОЭ
//
Процедура ВзаимодействиеРОЭ() Экспорт
	
	// Записи в обработке
	Запрос = Новый Запрос; 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачаИсполнителя.БизнесПроцесс КАК БизнесПроцесс
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	НЕ ЗадачаИсполнителя.Выполнена
	|	И НЕ ЗадачаИсполнителя.ПометкаУдаления
	|	И ЗадачаИсполнителя.ТочкаМаршрута В(&ТочкаМаршрута)";
	
	МассивТочек = Новый Массив;
	МассивТочек.Добавить(БизнесПроцессы.ВзаимодействиеСРОЭ.ТочкиМаршрута.ОбновлениеДанныхВКаталогеПС);
	
	Запрос.УстановитьПараметр("ТочкаМаршрута", МассивТочек);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекущийБП = Выборка.БизнесПроцесс;
		
		Результат = ОбновитьДанныеКаталогаПС(ТекущийБП);
		
		Если Результат.Выполнено Тогда
			ЗавершитьТекущуюЗадачу(ТекущийБП);
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры







