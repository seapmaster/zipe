// Только для внутреннего использования
Функция ПрочитатьТекстИзФайла(ИмяФайла, Кодировка = Неопределено, АвтоОпределениеКодировкиXML = Ложь) Экспорт
	
	Если ЭтоАдресВременногоХранилища(ИмяФайла) Тогда
		ИмяФайлаНаДиске = ПолучитьИмяВременногоФайла();
		ПолучитьИзВременногоХранилища(ИмяФайла).Записать(ИмяФайлаНаДиске);
	Иначе
		ИмяФайлаНаДиске = ИмяФайла;
	КонецЕсли;
	
	ОбъектЧтение = Новый ЧтениеТекста(ИмяФайлаНаДиске, Кодировка);
	ТекстИзФайла = ОбъектЧтение.Прочитать();
	ОбъектЧтение.Закрыть();
	
	Если АвтоОпределениеКодировкиXML И ЗначениеЗаполнено(ТекстИзФайла) Тогда
		ПерваяСтрокаФайла = ВРЕГ(Лев(СтрПолучитьСтроку(ТекстИзФайла, 1), 100));
		Если СтрНайти(ПерваяСтрокаФайла, ВРЕГ("encoding=""UTF-8""")) <> 0 Тогда
			ТекстИзФайла = ПрочитатьТекстИзФайла(ИмяФайла, КодировкаТекста.UTF8);
		ИначеЕсли СтрНайти(ПерваяСтрокаФайла, ВРЕГ("encoding=""UTF-16""")) <> 0 Тогда
			ТекстИзФайла = ПрочитатьТекстИзФайла(ИмяФайла, КодировкаТекста.UTF16);
		КонецЕсли;
	КонецЕсли;
	
	УдалитьФайлы(ИмяФайлаНаДиске);
	
	Возврат ТекстИзФайла;
	
КонецФункции

// Только для внутреннего использования
Функция ЗагрузитьСтрокуXMLВДеревоЗначений(СтрокаXML, ОписаниеОшибки = Неопределено, ЧтениеXML = Неопределено, Знач ТекУзел = Неопределено) Экспорт
	
	ПерваяИтерация = (ТекУзел = Неопределено);
	Если ПерваяИтерация Тогда
		ТекУзел = СоздатьДеревоСтруктурыXML();
		Попытка
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.УстановитьСтроку(СтрокаXML);
		Исключение
			ОписаниеОшибки = "Ошибка разбора XML: " + ИнформацияОбОшибке().Описание + ".";
			Возврат Неопределено;
		КонецПопытки;
	КонецЕсли;
	
	Попытка
		Пока ЧтениеXML.Прочитать() Цикл
			ТипУзла = ЧтениеXML.ТипУзла;
			Если ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				НовУзел = ТекУзел.Строки.Добавить();
				НовУзел.Имя = ЧтениеXML.Имя;
				НовУзел.Тип = "Э";
				НовУзел.Значение = ЧтениеXML.Значение;
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					НовАтрибут = НовУзел.Строки.Добавить();
					НовАтрибут.Имя = ЧтениеXML.Имя;
					НовАтрибут.Тип = "А";
					НовАтрибут.Значение = ЧтениеXML.Значение;
				КонецЦикла;
				ЗагрузитьСтрокуXMLВДеревоЗначений(СтрокаXML, ОписаниеОшибки, ЧтениеXML, НовУзел);
				Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
					Возврат Неопределено;
				КонецЕсли;
			ИначеЕсли ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
				Прервать;
			ИначеЕсли ТипУзла = ТипУзлаXML.Текст И ТипЗнч(ТекУзел) = Тип("СтрокаДереваЗначений") И ТекУзел.Тип = "Э" Тогда
				ТекУзел.Значение = ЧтениеXML.Значение;
			КонецЕсли;
		КонецЦикла;
	Исключение
		ОписаниеОшибки = "Ошибка разбора XML: " + ИнформацияОбОшибке().Описание + ".";
		Возврат Неопределено;
	КонецПопытки;
	
	Если ПерваяИтерация Тогда
		Возврат ТекУзел;
	КонецЕсли;
	
КонецФункции

// Только для внутреннего использования
Функция СоздатьДеревоСтруктурыXML() Экспорт
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Имя");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	Возврат ДеревоСтруктуры;
	
КонецФункции

Процедура ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля(КоллекцияЭлементовДерева,ИдентификаторСтроки,ПолеПоиска,СтрокаПоиска,ПрекратитьПоиск=Ложь) Экспорт
    
	Если ПрекратитьПоиск Тогда
		Возврат;
	КонецЕсли;
        
    Для Каждого СтрокаДерева ИЗ КоллекцияЭлементовДерева Цикл
        
        Если СтрокаДерева[ПолеПоиска] = СтрокаПоиска Тогда
            
            ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
            
            ПрекратитьПоиск = Истина;
            
            Возврат;
            
        КонецЕсли;
        
        КоллекцияЭлементов = СтрокаДерева.ПолучитьЭлементы();
        
        Если КоллекцияЭлементов.Количество() > 0 Тогда
            
            ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля(КоллекцияЭлементов,ИдентификаторСтроки,ПолеПоиска,СтрокаПоиска,ПрекратитьПоиск);
            
        КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры
