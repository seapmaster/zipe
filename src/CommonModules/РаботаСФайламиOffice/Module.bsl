//////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПрочитатьТабличныйДокумент(Адрес, ПараметрыФайла)
	
	Результат = Неопределено;
	
	ДанныеФайла = ПолучитьИзВременногоХранилища(Адрес);
	Если ПараметрыФайла = Неопределено Тогда
		ИмяФайла = ПолучитьИмяВременногоФайла("xls");
	Иначе
		ИмяФайла = ПолучитьИмяВременногоФайла(ПараметрыФайла.Расширение);
	КонецЕсли; // Если ПараметрыФайла = Неопределено Тогда
	
	ДанныеФайла.Записать(ИмяФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Попытка
		ТабличныйДокумент.Прочитать(ИмяФайла);
		Результат = ТабличныйДокумент;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось прочитать файл");
	КонецПопытки;
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат Результат;
	
КонецФункции // ПрочитатьТабличныйДокумент

Функция ПолучитьПорядокЛистов(ТабличныйДокумент)
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Наименование", 	Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("Порядок", 		Новый ОписаниеТипов("Число"));
	
	Для Счет = 0 По ТабличныйДокумент.Области.Количество() -1 Цикл
		
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.Наименование 	= ТабличныйДокумент.Области[Счет].Имя;
		
		Попытка
			ПорядокОбласти = Число(ТабличныйДокумент.Области[Счет].Верх);
		Исключение
			ПорядокОбласти = Счет;
		КонецПопытки;
		
		НоваяСтрока.Порядок = ПорядокОбласти;
		
	КонецЦикла; // Для Счет = 0 По ТабличныйДокумент.Области.Количество() -1 Цикл
	
	Результат.Сортировать("Порядок Возр");
	
	Возврат	Результат;
	
КонецФункции // ПолучитьПорядокЛистов


///////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область КорректировкаДанныхСправочниковКлиент

Функция ПодготовитьОписаниеДокумента_КорректировкаДанныхПС(ПредметыСнабжения)
	
	Результат = Новый Структура;
	Результат.Вставить("Наименование", "Информация по изделиям");
	
	Макет = Обработки.ХранилищеМакетов.ПолучитьМакет_ОбменаСПоставщиками_ИнформацияПоИзделиям();
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Шапка
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Шапка"));
	
	// ПС
	Для Каждого СтрокаПредметСнабжения Из ПредметыСнабжения Цикл
		
		Область = Макет.ПолучитьОбласть("Строка");
		
		Область.Параметры.Идентификатор 				= ?(ЗначениеЗаполнено(СтрокаПредметСнабжения.ПредметСнабжения),
															Строка(СтрокаПредметСнабжения.ПредметСнабжения.УникальныйИдентификатор()), "");
		Область.Параметры.Входимость			 		= Строка(СтрокаПредметСнабжения.Входимость) + " " + СтрокаПредметСнабжения.ВходимостьОбозначение;
		Область.Параметры.Наименование 					= СтрокаПредметСнабжения.Наименование;
		Область.Параметры.ОбозначениеИзделия 			= СтрокаПредметСнабжения.Обозначение;
		Область.Параметры.ОбозначениеТехническихУсловий = СтрокаПредметСнабжения.ДокументНаПоставку;
		Область.Параметры.СрокИзготовленияПродукции 	= ?(СтрокаПредметСнабжения.СрокИзготовления > 0, СтрокаПредметСнабжения.СрокИзготовления, "");
		Область.Параметры.ИнформацияОПравилах 			= СтрокаПредметСнабжения.ПравилаУпаковкиТранспортировкиХранения; 
		
		ТабличныйДокумент.Вывести(Область);
		
	КонецЦикла; // Для каждого СтрокаПредметСнабжения Из ПредметыСнабжения Цикл
	
	Результат.Вставить("Лист", ТабличныйДокумент);
	
	Возврат	Результат;
	
КонецФункции //ПодготовитьОписаниеДокумента_КорректировкаДанныхПС

Функция ПодготовитьОписаниеДокумента_КорректировкаДанныхХарактеристики(Характеристики)
	
	Результат = Новый Структура;
	Результат.Вставить("Наименование", "Технические характеристики");
	
	Макет = Обработки.ХранилищеМакетов.ПолучитьМакет_ОбменаСПоставщиками_ТехническиеХарактеристики();
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Шапка
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Шапка"));

	Для каждого СтрокаХарактеристика Из Характеристики Цикл
		
		Область = Макет.ПолучитьОбласть("Строка");
		
		Область.Параметры.ИдентификаторПС 				= ?(ЗначениеЗаполнено(СтрокаХарактеристика.ПредметСнабжения),
															Строка(СтрокаХарактеристика.ПредметСнабжения.УникальныйИдентификатор()), "");
		Область.Параметры.ИдентификаторХарактеристики 	= Строка(СтрокаХарактеристика.Характеристика);
		Область.Параметры.ЕдиниЦаИзмерения 				= Строка(СтрокаХарактеристика.ЕдиницаИзмерения);
		Область.Параметры.ЕдиницаИзмеренияКод 			= СтрокаХарактеристика.ЕдиницаИзмеренияКод;
		Область.Параметры.Значение 						= СтрокаХарактеристика.Значение;
		Область.Параметры.ПризнакОсновнойХарактеристики = ?(СтрокаХарактеристика.Основная, "Да", "");
		
		ТабличныйДокумент.Вывести(Область);
		
	КонецЦикла; // Для каждого СтрокаХарактеристика Из Характеристики Цикл

	Результат.Вставить("Лист", ТабличныйДокумент);
	
	Возврат	Результат;
	
КонецФункции // ПодготовитьОписаниеДокумента_КорректировкаДанныхХарактеристики

Функция ПодготовитьОписаниеДокумента_КорректировкаДанныхАналоги()
	
	Результат = Новый Структура;
	Результат.Вставить("Наименование", "Аналоги");

	Макет = Обработки.ХранилищеМакетов.ПолучитьМакет_ОбменаСПоставщиками_Аналоги();
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Шапка
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Шапка"));
	
	Результат.Вставить("Лист", ТабличныйДокумент);
	
	Возврат	Результат;
	
КонецФункции // ПодготовитьОписаниеДокумента_КорректировкаДанныхАналоги

Функция ПодготовитьОписаниеДокумента_КорректировкаДанныхПравилаЗаполнения()
	
	Результат = Новый Структура;
	Результат.Вставить("Наименование", "Правила заполнения информации");
	
	Макет = Обработки.ХранилищеМакетов.ПолучитьМакет_ОбменаСПоставщиками_ПравилаЗаполненияИнформации();
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Шапка
	ТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Шапка"));
	
	Результат.Вставить("Лист", ТабличныйДокумент);
	
	Возврат	Результат;

КонецФункции // ПодготовитьОписаниеДокумента_КорректировкаДанныхПравилаЗаполнения

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
//
// Функция ПрочитатьФайлВТабличныйДокумент
//
// Описание: Читает файл на сервере через ТабличныйДокумент.Прочитать()
//
//
// Параметры:
//  АдресВременногоХранилища - Строка - Адрес файла во временном хранилище
//  ПараметрыФайла     - Структура - необязательный параметр,
//                       содержит информацию о расширении файла.
//
// Возвращаемое значение: табличный документ или неопределено 
//
Функция ПрочитатьФайлВТабличныйДокумент(АдресВременногоХранилища, ПараметрыФайла = Неопределено) Экспорт
	
	ТабличныйДокумент = ПрочитатьТабличныйДокумент(АдресВременногоХранилища, ПараметрыФайла);
	Если ТабличныйДокумент = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; // Если ТабличныйДокумент = Неопределено Тогда
	
	Если ТабличныйДокумент.Области.Количество() > 0 Тогда
		Результат = ТабличныйДокумент.ПолучитьОбласть(ТабличныйДокумент.Области[0].Имя);
	Иначе
		Результат = ТабличныйДокумент; 
	КонецЕсли; // Если ТабличныйДокумент.Области.Количество() > 0 Тогда
	
	Возврат	Результат;
	
КонецФункции // ПрочитатьФайлВТабличныйДокумент

Функция ПрочитатьВсеЛистыФайла(ПараметрыФайла) Экспорт
	
	ТабличныйДокумент = ПрочитатьТабличныйДокумент(ПараметрыФайла.Адрес, ПараметрыФайла);
	Если ТабличныйДокумент = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; // Если ТабличныйДокумент = Неопределено Тогда

	Результат = Новый Структура;
	
	// установим порядок листов как в исходном документе
	ТаблицаЛистов = ПолучитьПорядокЛистов(ТабличныйДокумент);
	
	Счет = 1;
	Для Каждого ОписаниеОбласти Из ТаблицаЛистов Цикл
		Результат.Вставить(СтрШаблон("Лист_%1", Счет), ТабличныйДокумент.ПолучитьОбласть(ОписаниеОбласти.Наименование)); 	
		Счет = Счет + 1;
	КонецЦикла; // Для Каждого ОписаниеОбласти Из ТаблицаЛистов Цикл

	Возврат	Результат;
	
КонецФункции // ПрочитатьВсеЛистыФайла

#Область КорректировкаДанныхСправочниковКлиент

Функция ПодготовитьТабличныйДокументыКорректировкаДанныхСправочников(Знач ПредметыСнабжения, Знач Характеристики) Экспорт
	
	Результат = Новый Массив;
	
	// Предметы снабжения
	Результат.Добавить(ПодготовитьОписаниеДокумента_КорректировкаДанныхПС(ПредметыСнабжения));
	
	// Характеристики
	Результат.Добавить(ПодготовитьОписаниеДокумента_КорректировкаДанныхХарактеристики(Характеристики));
	
	// Аналоги
	Результат.Добавить(ПодготовитьОписаниеДокумента_КорректировкаДанныхАналоги());
	
	// Правила заполнения
	Результат.Добавить(ПодготовитьОписаниеДокумента_КорректировкаДанныхПравилаЗаполнения());
	
	Возврат	Результат;
	
КонецФункции // ПодготовитьТабличныйДокументыКорректировкаДанныхСправочников

#КонецОбласти

#Область Контракт

Функция ПодготовитьТабличныйДокументКонтрактПриложение1(Знач СпецификацияТКП, ПараметрыТКП) Экспорт
	
	Результат = Новый ТабличныйДокумент;
	
	Макет = Обработки.ХранилищеМакетов.ПолучитьМакет_Контракт_ТКПRusEng();
	
	// Шарка
	Результат.Вывести(Макет.ПолучитьОбласть("Шапка"));
	
	// Состав
	Для каждого СтрокаСпецификация Из СпецификацияТКП Цикл
		
		Область = Макет.ПолучитьОбласть("Строка");
		
		Область.Параметры.НомерСтроки 		= СтрокаСпецификация.НомерСтроки;
		Область.Параметры.НомерСтрокиЗаявки = СтрокаСпецификация.НомерСтрокиЗаявки;
		Область.Параметры.Наименование 		= СтрокаСпецификация.Наименование;
		Область.Параметры.Обозначение 		= СтрокаСпецификация.Обозначение;
		Область.Параметры.ЕдиницаИзмерения 	= СтрокаСпецификация.ЕдиницаИзмерения;
		Область.Параметры.Количество 		= СтрокаСпецификация.Количество;
		Область.Параметры.Цена 				= СтрокаСпецификация.Цена;
		Область.Параметры.Стоимость 		= СтрокаСпецификация.Стоимость;
		
		Результат.Вывести(Область);
		
	КонецЦикла; // Для каждого СтрокаСпецификация Из СпецификацияТКП Цикл
	
	// Подвал
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Итого 	= СпецификацияТКП.Итог("Стоимость");
	Область.Параметры.Должность = ПараметрыТКП.Получить("<ДолжностьСоставителяАнгл>");
	Область.Параметры.ФИО 		= ПараметрыТКП.Получить("<ФИОСоставителяАнгл>");
	
	Результат.Вывести(Область);

	Результат.АвтоМасштаб 			= Истина;
	Результат.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	
	Возврат	Результат;
	
КонецФункции // ПодготовитьТабличныйДокументКонтрактПриложение1

#КонецОбласти