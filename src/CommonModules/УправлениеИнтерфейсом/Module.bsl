//процедура предназначена для вывода строки состояния
Процедура ВывестиТекущееСостояние(ТекстСообщения, ДатаНачала=Неопределено, КоличествоЗавершено=0, ОбщееКоличество=0, СтрПрошло="", СтрОсталось="", СтрокаПояснение="", Картинка = Неопределено) Экспорт
	
	ОбработкаПрерыванияПользователя();
	
	Если ДатаНачала = Неопределено Тогда
		ДатаНачала = ТекущаяДата();
	КонецЕсли; 
	
	ТекДата = ТекущаяДата();
	ВремяЗатрачено = ?(КоличествоЗавершено=0,0,(ТекДата - ДатаНачала)/КоличествоЗавершено*(ОбщееКоличество-КоличествоЗавершено));
	ВремяОсталось = Дата(1,1,1) + ВремяЗатрачено;
	ВремяОкончание = ТекДата + ВремяЗатрачено;
	
	ВремяПрошло   = Дата(1,1,1) + (ТекДата-ДатаНачала);
	СтрОсталось = ?(ВремяОсталось = Дата(1,1,1),"00:00:00",?(Год(ВремяОсталось)>1,Строка(Год(ВремяОсталось)-1) + " г. ","") + ?(Месяц(ВремяОсталось)>1,Строка(Месяц(ВремяОсталось)-1) + " мес. ","") + ?(День(ВремяОсталось)>1,Строка(День(ВремяОсталось)-1) + " дн. ","") + Формат(ВремяОсталось,"ДФ=""ЧЧ:мм:сс"""));
	СтрПрошло 	= ?(ВремяПрошло   = Дата(1,1,1),"00:00:00",?(Год(ВремяПрошло)>1,Строка(Год(ВремяПрошло)-1) + " г. ","") + ?(Месяц(ВремяПрошло)>1,Строка(Месяц(ВремяПрошло)-1) + " мес. ","") + ?(День(ВремяПрошло)>1,Строка(День(ВремяПрошло)-1) + " дн. ","") + Формат(ВремяПрошло,"ДФ=""ЧЧ:мм:сс"""));
	СтрОкончание = ?(НачалоДня(ВремяОкончание)>НачалоДня(ТекДата),ВремяОкончание,Формат(ВремяОкончание,"ДФ=""ЧЧ:мм:сс"""));
	СтрокаПояснение = "Прошло: " + СтрПрошло + "  Осталось: " + СтрОсталось + "  Окончание: " + СтрОкончание;
	
	Состояние("" + ДатаНачала  + " (" + КоличествоЗавершено + "/" + ОбщееКоличество + "): " + ТекстСообщения 
	,?(ОбщееКоличество=0,100,Цел(100/ОбщееКоличество*КоличествоЗавершено))
	,СтрокаПояснение, Картинка);
		
КонецПроцедуры

//функция включает/отключает только просмотр и доступность элементов на форме
//возвращает список элементов, статус которых был изменен
Функция УстановитьДоступностьРедактированияЭлементовФормы(Форма, Доступность, Элементы = Неопределено, ИсключаяЭлементы = Неопределено) Экспорт
	
	ЭлементыМассив = ?(Элементы = Неопределено, Неопределено, СтрРазделить(Элементы, ",", Ложь));
	ИсключаяЭлементыМассив = ?(ИсключаяЭлементы = Неопределено, Неопределено, СтрРазделить(ИсключаяЭлементы, ",", Ложь));
	
	МассивЭлементов = Новый Массив;
	
	Для каждого ЭлементФормы Из Форма.Элементы Цикл
		
		Если Не ЭлементыМассив = Неопределено И ЭлементыМассив.Найти(ЭлементФормы.Имя) = Неопределено 
			Или Не ИсключаяЭлементыМассив = Неопределено И Не ИсключаяЭлементыМассив.Найти(ЭлементФормы.Имя) = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		РезультатТолькоПросмотр = УстановитьЗначениеСвойства(ЭлементФормы, "ТолькоПросмотр", Не Доступность);
		
		Если РезультатТолькоПросмотр = 0 Тогда
			
			РезультатДоступность = УстановитьЗначениеСвойства(ЭлементФормы, "Доступность", Доступность);
			
			Если РезультатДоступность = 2 Тогда
				
				МассивЭлементов.Добавить(ЭлементФормы.Имя);
				
			КонецЕсли;
			
		ИначеЕсли РезультатТолькоПросмотр = 2 Тогда
			
			МассивЭлементов.Добавить(ЭлементФормы.Имя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрСоединить(МассивЭлементов, ",");
	
КонецФункции

//функция устанавливает значение свойства элемента формы, если значение свойства было отлично от переданно
//возвращает 0, если у элемента нет такого свойства, 1 - если свойство есть, но значение не было установлено, 2 - если значение установлено
Функция УстановитьЗначениеСвойства(ЭлементФормы, ИмяСвойства, ЗначениеСвойства)
	
	СтруктураПроверки = Новый Структура(ИмяСвойства, Неопределено);
	
	Попытка 
		
		ЗаполнитьЗначенияСвойств(СтруктураПроверки, ЭлементФормы);
		
		Если СтруктураПроверки[ИмяСвойства] = Неопределено Тогда
			
			Возврат 0;
			
		КонецЕсли;
		
		Если ЭлементФормы[ИмяСвойства] = ЗначениеСвойства Тогда
		
			Возврат 1;
		
		КонецЕсли;
		
	Исключение
		
		Возврат 0;
		
	КонецПопытки;
		
	ЭлементФормы[ИмяСвойства] = ЗначениеСвойства;
	Возврат 2;
	
КонецФункции

//процедура устанавливает состояние принятия к исполнению для формы задач 
//(если задача не принята к исполнению - элементы формы будут недоступны, кроме кнопки принятия к изменению)
Процедура УстановитьСостояниеПринятияКИзменению(ФормаЗадач) Экспорт
	
	Если Не ФормаЗадач.Объект.ПринятаКИсполнению Тогда
		
		ФормаЗадач.Элементы.ФормаОбщаяКомандаПринятьЗадачуКИсполнению.Видимость = Истина;
		ФормаЗадач.ЗаблокированныеРеквизиты = УстановитьДоступностьРедактированияЭлементовФормы(ФормаЗадач, Ложь, , "ФормаОбщаяКомандаПринятьЗадачуКИсполнению");
		
	КонецЕсли;
	
КонецПроцедуры