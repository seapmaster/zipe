//////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьПоставщиковПредметаСнабжения(ПредметСнабжения) Экспорт
	Результат 		= "";
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	ПРЕДСТАВЛЕНИЕ(КаталогПредметовСнабженияИзготовителиИПоставщики.Контрагент) КАК Контрагент
	             	  |ИЗ
	             	  |	Справочник.КаталогПредметовСнабжения.ИзготовителиИПоставщики КАК КаталогПредметовСнабженияИзготовителиИПоставщики
	             	  |ГДЕ
	             	  |	КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка = &ПредметСнабжения";
	Запрос.УстановитьПараметр("ПредметСнабжения", ПредметСнабжения);
	Выборка 		= Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат 	= Результат + ?(Результат = "", "", Символы.ПС) + Выборка.Контрагент;
	КонецЦикла; // Пока Выборка.Следующий() Цикл
	
	Возврат Результат;
КонецФункции // ПолучитьПоставщиковПредметаСнабжения

Функция ПолучитьКодINCAT(ПредметСнабжения) Экспорт
	Результат 		= "";
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	КодыINCATПредставление.Представление КАК Представление
	             	  |ИЗ
	             	  |	РегистрСведений.КодыINCATПредставление КАК КодыINCATПредставление
	             	  |ГДЕ
	             	  |	КодыINCATПредставление.ПредметСнабжения = &ПредметСнабжения";
	Запрос.УстановитьПараметр("ПредметСнабжения", ПредметСнабжения);
	Выборка 		= Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат 	= Выборка.Представление;
	КонецЦикла; // Пока Выборка.Следующий() Цикл
	
	Возврат Результат;
КонецФункции // ПолучитьПоставщиковПредметаСнабжения

Функция ПолучитьКонтрагентовКомплектующей(Комплектующая, Тип = "Поставщик", СписокКонтрагентов) Экспорт
	Результат 		= "";
	
	ДопУсловие = " И КаталогПредметовСнабженияИзготовителиИПоставщики." + Тип;
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	ЕСТЬNULL(ПРЕДСТАВЛЕНИЕ(КаталогПредметовСнабженияИзготовителиИПоставщики.Контрагент), """") КАК Контрагент
	             	  |ИЗ
	             	  |	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	             	  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения.ИзготовителиИПоставщики КАК КаталогПредметовСнабженияИзготовителиИПоставщики
	             	  |		ПО СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения = КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка
	             	  |ГДЕ
	             	  |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка = &Комплектующая
	             	  |	И КаталогПредметовСнабженияИзготовителиИПоставщики.Контрагент В(&СписокКонтрагентов)" + ДопУсловие;
	
	Запрос.УстановитьПараметр("Комплектующая", Комплектующая);
	Запрос.УстановитьПараметр("Комплектующая", СписокКонтрагентов);
	Выборка 		= Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат 	= Результат + ?(Результат = "", "", Символы.ПС) + Выборка.Контрагент;
	КонецЦикла; // Пока Выборка.Следующий() Цикл
	
	Возврат Результат;
КонецФункции // ПолучитьПоставщиковПредметаСнабжения

Функция ПолучитьТипКомплектующейСтрокой(Комплектующая)  Экспорт
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СпецификацииПС.ПредметСнабжения КАК ПредметСнабжения,
		|	ЕСТЬNULL(КОЛИЧЕСТВО(СпецификацииПС.СоставляющаяЧасть) > 0, ЛОЖЬ) КАК ЕстьСпецификация
		|ИЗ
		|	РегистрСведений.СпецификацииПС КАК СпецификацииПС
		|ГДЕ
		|	СпецификацииПС.ПредметСнабжения = &ПредметСнабжения
		|
		|СГРУППИРОВАТЬ ПО
		|	СпецификацииПС.ПредметСнабжения";
	
	Запрос.УстановитьПараметр("ПредметСнабжения", Комплектующая.ПредметСнабжения);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() и Комплектующая.Тип <> Справочники.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа Тогда
		Возврат "ЗИП";
	Иначе
		Возврат Строка(Комплектующая.Тип);
	КонецЕсли; 
		
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецФункции // ПолучитьТипКомплектующейСтрокой