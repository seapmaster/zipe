////////////////////////////////////////////////////////////////////////////////
// Модуль предназначен для общих процедур и функций, использующих кэширование.
// Создан отдельно вместо использования модуля ОбщегоНазначенияПовтИсп 
// для максимального упрощения возможного обновления БСП.
// Савинов А.А. 12.04.2017
////////////////////////////////////////////////////////////////////////////////

#Область Метаданные

// Функция предназначена для получения пустого значения реквизита справочника
// Не расчитана на реквизиты составного типа
// Параметры:
// ИмяСправочника - Строка - Например, "КаталогПредметовСнабжения"
// ИмяРеквизита - Строка - Например, "ЕКПС" или "ЕКПС.Наименование"
//
Функция ПолучитьПустоеЗначениеРеквизитаСправочника(ИмяСправочника, Знач ИмяРеквизита) Экспорт

	ПозицияТочки = Найти(ИмяРеквизита, ".");
	
	БезТочки = ПозицияТочки = 0;
	
	Если БезТочки Тогда
		
		Реквизиты = Неопределено;
		
		Выполнить("Реквизиты = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().Реквизиты;");
		
		Реквизит = Реквизиты.Найти(ИмяРеквизита);
		
		Если Реквизит = Неопределено Тогда
			
			Выполнить("Реквизит = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().СтандартныеРеквизиты." + ИмяРеквизита + ";");
				
		КонецЕсли;
		
		Возврат Реквизит.Тип.ПривестиЗначение();
		
	Иначе
		
		ПустоеЗначение = Неопределено;
		ОписаниеТипа = Неопределено;
		
		Пока ПозицияТочки > 0 Цикл
			
			ЧастьИмениРеквизита = Лев(ИмяРеквизита, ПозицияТочки - 1);
			
			Если ПустоеЗначение = Неопределено Тогда
				
				Реквизиты = Неопределено;
				
				Выполнить("Реквизиты = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().Реквизиты;");
				
				Реквизит = Реквизиты.Найти(ЧастьИмениРеквизита);
				
				Если Реквизит = Неопределено Тогда
					
					Выполнить("ОписаниеТипа = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().СтандартныеРеквизиты." + ЧастьИмениРеквизита + ".Тип;");	
					
				Иначе
					
					Выполнить("ОписаниеТипа = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().Реквизиты." + ЧастьИмениРеквизита + ".Тип;");	
					
				КонецЕсли;
				
				ПустоеЗначение = ОписаниеТипа.ПривестиЗначение();
				
			Иначе
				
				Реквизиты = ПустоеЗначение.Метаданные().Реквизиты;
				СтандартныеРеквизиты = ПустоеЗначение.Метаданные().СтандартныеРеквизиты;
				
				Реквизит = Реквизиты.Найти(ЧастьИмениРеквизита);
				
				Если Реквизит = Неопределено Тогда
				
					Выполнить("ОписаниеТипа = СтандартныеРеквизиты." + ЧастьИмениРеквизита + ".Тип;");
				
				Иначе
				
					Выполнить("ОписаниеТипа = Реквизиты." + ЧастьИмениРеквизита + ".Тип;");
				
				КонецЕсли;
				
				ПустоеЗначение = ОписаниеТипа.ПривестиЗначение();
				
			КонецЕсли;
			
			ИмяРеквизита = Прав(ИмяРеквизита, СтрДлина(ИмяРеквизита) - ПозицияТочки);
			
			ПозицияТочки = Найти(ИмяРеквизита, ".");
			
		КонецЦикла;
		
		Реквизиты = ПустоеЗначение.Метаданные().Реквизиты;
		
		Реквизит = Реквизиты.Найти(ИмяРеквизита);
		
		Если Реквизит = Неопределено Тогда
			
			СтандартныеРеквизиты = ПустоеЗначение.Метаданные().СтандартныеРеквизиты;
			
			Выполнить("Реквизит = СтандартныеРеквизиты." + ИмяРеквизита + ";");	
			
		КонецЕсли;
		
		Возврат Реквизит.Тип.ПривестиЗначение();	
		
	КонецЕсли;

КонецФункции // ПолучитьПустоеЗначениеРеквизитаСправочника()

// Функция предназначена для получения синонима реквизита справочника
// Параметры:
// ИмяСправочника - Строка - Например, "КаталогПредметовСнабжения"
// ИмяРеквизита - Строка - Например, "ЕКПС" или "ЕКПС.Наименование"
//
Функция ПолучитьСинонимРеквизитаСправочника(ИмяСправочника, Знач ИмяРеквизита) Экспорт

	ПозицияТочки = Найти(ИмяРеквизита, ".");
	
	БезТочки = ПозицияТочки = 0;
	
	Если БезТочки Тогда
		
		Реквизиты = Неопределено;
		
		Выполнить("Реквизиты = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().Реквизиты;");
		
		Реквизит = Реквизиты.Найти(ИмяРеквизита);
		
		Если Реквизит = Неопределено Тогда
			
			Выполнить("Реквизит = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().СтандартныеРеквизиты." + ИмяРеквизита + ";");
				
		КонецЕсли;
		
		Возврат ?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя);
		
	Иначе
		
		ПустоеЗначение = Неопределено;
		ОписаниеТипа = Неопределено;
		МассивСинонима = Новый Массив;
		
		Пока ПозицияТочки > 0 Цикл
			
			ЧастьИмениРеквизита = Лев(ИмяРеквизита, ПозицияТочки - 1);
			
			Если ПустоеЗначение = Неопределено Тогда
				
				Реквизиты = Неопределено;
				
				Выполнить("Реквизиты = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().Реквизиты;");
				
				Реквизит = Реквизиты.Найти(ЧастьИмениРеквизита);
				
				Если Реквизит = Неопределено Тогда
					
					Выполнить("Реквизит = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().СтандартныеРеквизиты." + ЧастьИмениРеквизита + ";");
					ОписаниеТипа = Реквизит.Тип;	
					
				Иначе
					
					Выполнить("ОписаниеТипа = Справочники." + ИмяСправочника + ".ПустаяСсылка().Метаданные().Реквизиты." + ЧастьИмениРеквизита + ".Тип;");	
					
				КонецЕсли;
				
				ПустоеЗначение = ОписаниеТипа.ПривестиЗначение();
				
			Иначе
				
				Реквизиты = ПустоеЗначение.Метаданные().Реквизиты;
				СтандартныеРеквизиты = ПустоеЗначение.Метаданные().СтандартныеРеквизиты;
				
				Реквизит = Реквизиты.Найти(ЧастьИмениРеквизита);
				
				Если Реквизит = Неопределено Тогда
					
					Реквизит = СтандартныеРеквизиты.Найти(ЧастьИмениРеквизита);
				
					Выполнить("ОписаниеТипа = СтандартныеРеквизиты." + ЧастьИмениРеквизита + ".Тип;");
				
				Иначе
				
					Выполнить("ОписаниеТипа = Реквизиты." + ЧастьИмениРеквизита + ".Тип;");
				
				КонецЕсли;
				
				ПустоеЗначение = ОписаниеТипа.ПривестиЗначение();
				
			КонецЕсли;
			
			МассивСинонима.Добавить(?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя));
			МассивСинонима.Добавить(".");
			
			ИмяРеквизита = Прав(ИмяРеквизита, СтрДлина(ИмяРеквизита) - ПозицияТочки);
			
			ПозицияТочки = Найти(ИмяРеквизита, ".");
			
		КонецЦикла;
		
		Реквизиты = ПустоеЗначение.Метаданные().Реквизиты;
		
		Реквизит = Реквизиты.Найти(ИмяРеквизита);
		
		Если Реквизит = Неопределено Тогда
			
			СтандартныеРеквизиты = ПустоеЗначение.Метаданные().СтандартныеРеквизиты;
			
			Выполнить("Реквизит = СтандартныеРеквизиты." + ИмяРеквизита + ";");	
			
		КонецЕсли;
		
		МассивСинонима.Добавить(?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя));
		
		Возврат СтрСоединить(МассивСинонима);	
		
	КонецЕсли;

КонецФункции // ПолучитьСинонимРеквизитаСправочника()

// Функция предназначена для получения массива имен справочников
//
Функция ПолучитьИменаСправочников() Экспорт

	МассивИменСправочников = Новый Массив;
	
	Для каждого Справочник Из Метаданные.Справочники Цикл
	
		МассивИменСправочников.Добавить(Справочник.Синоним);	
	
	КонецЦикла;	
	
	Возврат МассивИменСправочников;

КонецФункции // ПолучитьИменаСправочников()

// Функция предназначена для получения массива имен документов
//
Функция ПолучитьИменаДокументов() Экспорт

	МассивИменДокументов = Новый Массив;
	
	Для каждого Документ Из Метаданные.Документы Цикл
	
		МассивИменДокументов.Добавить(Документ.Синоним);	
	
	КонецЦикла;	
	
	Возврат МассивИменДокументов;

КонецФункции // ПолучитьИменаДокументов()

#КонецОбласти

#Область УникальныеИдентификаторы

// Функция предназначена для получения пустого значения уникального идентификатора
//
Функция ПолучитьПустойUID() Экспорт

	Возврат "00000000-0000-0000-0000-000000000000";	

КонецФункции // ПолучитьПустойUID()

#КонецОбласти

#Область ОбщиеРеквизиты

// Функция предназначена для определения вхождения объекта в состав общего реквизита UID
// Параметры:
// ИмяОбъектаМетаданных - Строка
//
Функция ОбъектИмеетUID(ИмяОбъектаМетаданных) Экспорт 	
	Результат 		= Ложь;	
	ЭлементСостава 	= Метаданные.ОбщиеРеквизиты.UID.Состав.Найти(ИмяОбъектаМетаданных);
	Если Не ЭлементСостава = Неопределено 
		И Строка(ЭлементСостава.Использование) = "Использовать" Тогда	
		Результат = Истина;
	КонецЕсли; // Если Не ЭлементСостава = Неопределено 

	Возврат Результат;
КонецФункции // ОбъектИмеетUID()

Функция ОбъектИмеетАвтора(ИмяОбъектаМетаданных) Экспорт	
	Результат 		= Ложь;	
	ЭлементСостава 	= Метаданные.ОбщиеРеквизиты.Автор.Состав.Найти(ИмяОбъектаМетаданных);
	Если Не ЭлементСостава = Неопределено 
		И Строка(ЭлементСостава.Использование) = "Использовать" Тогда	
		Результат = Истина;
	КонецЕсли; // Если Не ЭлементСостава = Неопределено 

	Возврат Результат;
КонецФункции // ОбъектИмеетАвтора()

Функция ОбъектИмеетДатуСоздания(ИмяОбъектаМетаданных) Экспорт	
	Результат 		= Ложь;	
	ЭлементСостава 	= Метаданные.ОбщиеРеквизиты.ДатаСоздания.Состав.Найти(ИмяОбъектаМетаданных);
	Если Не ЭлементСостава = Неопределено 
		И Строка(ЭлементСостава.Использование) = "Использовать" Тогда	
		Результат = Истина;
	КонецЕсли; // Если Не ЭлементСостава = Неопределено 

	Возврат Результат;
КонецФункции // ОбъектИмеетДатуСоздания()

#КонецОбласти


#Область ЗначенияПоУмолчанию

// Функция предназначена для получения ссылки на валюту USD
//
Функция ПолучитьВалютуUSD() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОКВ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОКВ КАК ОКВ
	|ГДЕ
	|	ОКВ.Наименование = ""USD""";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
	
		Возврат Справочники.ОКВ.ПустаяСсылка();	
	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;

КонецФункции // ПолучитьВалютуUSD()


#КонецОбласти