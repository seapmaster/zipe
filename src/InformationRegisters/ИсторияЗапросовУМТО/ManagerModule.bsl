//////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СоздатьЗаписьИстории(ПараметрыЗаписи = Неопределено) Экспорт
	
	Результат = РегистрыСведений.ИсторияЗапросовУМТО.СоздатьМенеджерЗаписи();
	Результат.Идентификатор 	= Новый УникальныйИдентификатор;
	Результат.ДатаЗапроса 		= ТекущаяДатаСеанса();
	
	Если Не ПараметрыЗаписи = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Результат, ПараметрыЗаписи);
	КонецЕсли; // Если Не ПараметрыЗаписи = Неопределено Тогда
	
	Результат.Записать();
	
	Возврат	Результат.Идентификатор;
	
КонецФункции // СоздатьЗаписьИстории

Процедура ЗафиксироватьПараметрЗаписи(ИдентификаторЗаписи, ИмяПараметра, ЗначениеПараметра) Экспорт
	
	ЗаписьИстории = РегистрыСведений.ИсторияЗапросовУМТО.СоздатьМенеджерЗаписи();
	ЗаписьИстории.Идентификатор = ИдентификаторЗаписи; 
	ЗаписьИстории.Прочитать();
	
	Если Не ЗаписьИстории.Выбран() Тогда
		ЗаписьИстории.Идентификатор = ИдентификаторЗаписи; 
	КонецЕсли; // Если Не ЗаписьИстории.Выбран() Тогда
	
	ЗаписьИстории[ИмяПараметра] = ЗначениеПараметра;
	ЗаписьИстории.Записать();
	
КонецПроцедуры // ЗафиксироватьПараметрЗаписи

Функция ОбновитьЗапись(Идентификатор, ПараметрыЗаписи) Экспорт
	Запись 					= РегистрыСведений.ИсторияЗапросовУМТО.СоздатьМенеджерЗаписи();
	Запись.Идентификатор 	= Идентификатор;
	Запись.Прочитать();
	Если Не Запись.Выбран() Тогда
		Возврат Ложь;
	КонецЕсли; // Если Не Запись.Выбран() Тогда
	
	Для Каждого Ресурс Из Метаданные.РегистрыСведений.ИсторияЗапросовУМТО.Ресурсы Цикл
		Если ПараметрыЗаписи.Свойство(Ресурс.Имя) Тогда
			Запись[Ресурс.Имя] = ПараметрыЗаписи[Ресурс.Имя];
		КонецЕсли; // Если ПараметрыЗаписи.Свойство(Ресурс.Имя) Тогда		
	КонецЦикла; // 	Для Каждого Ресурс Из Метаданные.РегистрыСведений.ИсторияЗапросовУМТО.Ресурсы Цикл
	
	Запись.Записать();
	Возврат Истина;
КонецФункции // ОбновитьЗапись
