
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Заказ") Тогда
	
		Запись.Заказ = Параметры.Заказ;	
	
	КонецЕсли;
	
	ДатаНачалаПред = Запись.ДатаНачала;
	ДатаОкончанияПред = Запись.ДатаОкончания;
	
	ДатаНачалаБаза = Запись.ДатаНачала;
	ДатаОкончанияБаза = Запись.ДатаОкончания
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если ПроверитьКорректностьДат() Тогда
		
		ДатаПостройки = ПолучитьДатуПостройки();
		
		Если Запись.ДатаНачала > ДатаПостройки Тогда
	
			ДатаНачалаПред = Запись.ДатаНачала;
			
		Иначе
			
			Сообщить("Дата меньше даты постройки корабля!");
			Запись.ДатаНачала = ДатаНачалаПред;
			
		КонецЕсли;
	
	Иначе
	
		Сообщить("Дата начала больше даты окончания!");
		Запись.ДатаНачала = ДатаНачалаПред;	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	Если ПроверитьКорректностьДат() Тогда
		
		ДатаПостройки = ПолучитьДатуПостройки();
		
		Если Запись.ДатаОкончания > ДатаПостройки Тогда
	
			ДатаНачалаПред = Запись.ДатаНачала;
			
		Иначе
			
			Сообщить("Дата меньше даты постройки корабля!");
			Запись.ДатаОкончания = ДатаОкончанияПред;
			
		КонецЕсли;
	
	Иначе
	
		Сообщить("Дата начала больше даты окончания!");
		Запись.ДатаОкончания = ДатаОкончанияПред;	
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьКорректностьДат()
	
	Если Не ЗначениеЗаполнено(Запись.ДатаНачала) Или Не ЗначениеЗаполнено(Запись.ДатаОкончания) Тогда
	
		Возврат Истина;
		
	Иначе
		
		Возврат  Запись.ДатаНачала < Запись.ДатаОкончания;	
	
	КонецЕсли;	 

КонецФункции // ПроверитьКорректностьДат()

&НаСервере
Функция ПолучитьДатуПостройки()
	
	Возврат Запись.Заказ.ДатаПостройки;
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//++ 17.05.2018 Веденеев П. //проверка наличия указанного вида ремонта в указанный период
	Отказ = ЕстьВидРемонтаЗаПериод();
	//-- 17.05.2018 Веденеев П. //проверка наличия указанного вида ремонта в указанный период
	
КонецПроцедуры

&НаСервере
Функция ЕстьВидРемонтаЗаПериод()
	
	МенеджерЗаписи = РеквизитФормыВЗначение("Запись");
	МенеджерЗаписи.Прочитать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РемонтИМодернизацияЗаказов.ДатаНачала КАК ДатаНачала,
	|	РемонтИМодернизацияЗаказов.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.РемонтИМодернизацияЗаказов КАК РемонтИМодернизацияЗаказов
	|ГДЕ
	|	РемонтИМодернизацияЗаказов.Заказ = &Заказ
	|	И РемонтИМодернизацияЗаказов.ВидРемонта = &ВидРемонта
	|	И (РемонтИМодернизацияЗаказов.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ИЛИ РемонтИМодернизацияЗаказов.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ИЛИ РемонтИМодернизацияЗаказов.ДатаНачала <= &ДатаНачала
	|				И РемонтИМодернизацияЗаказов.ДатаОкончания >= &ДатаОкончания)
	|	И НЕ(РемонтИМодернизацияЗаказов.ДатаНачала = &ДатаНачалаБаза
	|				И РемонтИМодернизацияЗаказов.ДатаОкончания = &ДатаОкончанияБаза)";
	Запрос.УстановитьПараметр("Заказ", Запись.Заказ);
	Запрос.УстановитьПараметр("ВидРемонта", Запись.ВидРемонта);
	Запрос.УстановитьПараметр("ДатаНачала", Запись.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Запись.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНачалаБаза", ДатаНачалаБаза);
	Запрос.УстановитьПараметр("ДатаОкончанияБаза", ДатаОкончанияБаза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Сообщить("Данный вид ремонта уже производился в периоды:");
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Сообщить("С " + Формат(Выборка.ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(Выборка.ДатаОкончания, "ДФ=dd.MM.yyyy"));
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции
