
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Выполнить("ЗамененныйЭлемент = Справочники." + Запись.ИмяСправочника + ".ПолучитьСсылку(Новый УникальныйИдентификатор(Запись.UIDЗамененногоЭлемента));
	|ЗаменившийЭлемент = Справочники." + Запись.ИмяСправочника + ".ПолучитьСсылку(Новый УникальныйИдентификатор(Запись.UIDЗаменившегоЭлемента));");
	
	Если Не Лев(Строка(ЗамененныйЭлемент), 18) = "<Объект не найден>" Тогда 
		
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(ЗамененныйЭлемент);
		
		ОбъектМетаданных = Неопределено;
		
		Если Лев(Запись.ИмяМестаИспользования, 15) = "РегистрСведений" Тогда
			
			ЭтоРегистрСведений = Истина;
			
			Выполнить("НаборЗаписей = " + СтрЗаменить(Запись.ИмяМестаИспользования, "РегистрСведений", "РегистрыСведений") + ".СоздатьНаборЗаписей();
			|ОбъектМетаданных = НаборЗаписей.Метаданные();");
			
			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(ОбъектМетаданных);
			
			РезультатПоиска = НайтиПоСсылкам(МассивСсылок, Новый Массив, МассивОбъектов);
			
			Если РезультатПоиска.Количество() = 0 Тогда
				
				Возврат;	
				
			КонецЕсли;
			
			КолонкиМестИспользования = Новый Массив;
			
			Для каждого Измерение Из ОбъектМетаданных.Измерения Цикл
				
				НовыйРеквизит = Новый РеквизитФормы(Измерение.Имя, Измерение.Тип, "МестаИспользования", Измерение.Синоним); 
				КолонкиМестИспользования.Добавить(НовыйРеквизит);
				
				СписокКолонок.Добавить(Измерение.Имя);
				
			КонецЦикла;
			
			ИзменитьРеквизиты(КолонкиМестИспользования);
			
			Для каждого КолонкаМестИспользования Из КолонкиМестИспользования Цикл
				
				НоваяКолонка = Элементы.Вставить("МестаИспользования" + КолонкаМестИспользования.Имя, Тип("ПолеФормы"), Элементы.МестаИспользования);
				НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
				НоваяКолонка.Заголовок = КолонкаМестИспользования.Заголовок;
				НоваяКолонка.ПутьКДанным = "МестаИспользования." + КолонкаМестИспользования.Имя;	
				
			КонецЦикла;
			
			Для каждого Строка Из РезультатПоиска Цикл
				
				Если Не Строка.Метаданные = ОбъектМетаданных Тогда
					
					Продолжить;	
					
				КонецЕсли;	
				
				НоваяСтрока = МестаИспользования.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка.Данные);
				
			КонецЦикла;	
			
		ИначеЕсли Лев(Запись.ИмяМестаИспользования, 8) = "Документ" Тогда
			
			ЭтоДокумент = Истина;
			
			ИмяМестаИспользования = ПолучитьИмяМестаИспользования(Запись.ИмяМестаИспользования);
			
			Выполнить("ОбъектМетаданных = Документы." + ИмяМестаИспользования + ".ПустаяСсылка().Метаданные();");
			
			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(ОбъектМетаданных);
			
			РезультатПоиска = НайтиПоСсылкам(МассивСсылок, Новый Массив, МассивОбъектов);
			
			Если РезультатПоиска.Количество() = 0 Тогда
				
				Возврат;	
				
			КонецЕсли;
			
			КолонкиМестИспользования = Новый Массив;
			
			НовыйРеквизит = Новый РеквизитФормы("Ссылка", Новый ОписаниеТипов("ДокументСсылка." + ИмяМестаИспользования), "МестаИспользования", "Ссылка"); 
			КолонкиМестИспользования.Добавить(НовыйРеквизит);
			
			ИзменитьРеквизиты(КолонкиМестИспользования);
			
			НоваяКолонка = Элементы.Вставить("МестаИспользованияСсылка", Тип("ПолеФормы"), Элементы.МестаИспользования);
			НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
			НоваяКолонка.Заголовок = "Ссылка";
			НоваяКолонка.ПутьКДанным = "МестаИспользования.Ссылка";
			
			Для каждого Строка Из РезультатПоиска Цикл
				
				Если Не Строка.Метаданные = ОбъектМетаданных Тогда
					
					Продолжить;	
					
				КонецЕсли;	
				
				НоваяСтрока = МестаИспользования.Добавить();
				НоваяСтрока.Ссылка = Строка.Данные;
				
			КонецЦикла;			
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяМестаИспользования(Знач ИмяМестаИспользования)

	ПозицияПервойТочки = Найти(ИмяМестаИспользования, ".");
	
	ИмяМестаИспользования = Прав(ИмяМестаИспользования, СтрДлина(ИмяМестаИспользования) - ПозицияПервойТочки);	
	
	ПозицияВторойТочки = Найти(ИмяМестаИспользования, ".");
	
	Если ПозицияВторойТочки = 0 Тогда
	
		Возврат ИмяМестаИспользования;	
	
	Иначе
	 	
		Возврат Лев(ИмяМестаИспользования, ПозицияВторойТочки - 1);
	
	КонецЕсли;

КонецФункции // ПолучитьИмяМестаИспользования()

&НаКлиенте
Процедура МестаИспользованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЭтоРегистрСведений Тогда
		
		СтруктураКлюча = Новый Структура;
		
		Для каждого ЭлементСпискаКолонок Из СписокКолонок Цикл
			
			Выполнить("СтруктураКлюча.Вставить(""" + ЭлементСпискаКолонок.Значение + """);");	
			
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(СтруктураКлюча, Элемент.ТекущиеДанные);
		
		ПараметрыОткрытия = ПолучитьПараметрыОткрытия(СтруктураКлюча); 
		
		ОткрытьФорму(Запись.ИмяМестаИспользования + ".ФормаЗаписи", ПараметрыОткрытия, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
	ИначеЕсли ЭтоДокумент Тогда
		
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);	
		
	КонецЕсли;	
	         
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОткрытия(СтруктураКлюча)
	
	КлючЗаписи = Неопределено;
	
	Выполнить("КлючЗаписи = " + СтрЗаменить(Запись.ИмяМестаИспользования, "РегистрСведений", "РегистрыСведений") + ".СоздатьКлючЗаписи(СтруктураКлюча);");	
	
	Возврат Новый Структура("Ключ", КлючЗаписи);
	
КонецФункции // ПолучитьПараметрыОткрытия()

