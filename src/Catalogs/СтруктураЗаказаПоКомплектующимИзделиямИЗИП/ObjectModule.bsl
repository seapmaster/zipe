/////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ВыбратьПодчиненныеЭлементыСтруктуры(Родитель) 
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка КАК Ссылка,
	             	  |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения КАК ПредметСнабжения,
	             	  |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ЗИП КАК ЗИП
	             	  |ИЗ
	             	  |	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	             	  |ГДЕ
	             	  |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Родитель = &Родитель
	             	  |
	             	  |УПОРЯДОЧИТЬ ПО
	             	  |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Наименование";	
	Запрос.УстановитьПараметр("Родитель", Родитель);                             	
	Возврат Запрос.Выполнить().Выбрать();                                        
КонецФункции // ВыбратьПодчиненныеЭлементыСтруктуры

Процедура ЗаписатьВРегистрСтруктураЗаказаРегистрацияРодителей(ЭлементСтруктурыЗаказа)
	Запись 							= РегистрыСведений.СтруктураЗаказаРегистрацияРодителей.СоздатьМенеджерЗаписи();
	Запись.ЭлементСтруктурыЗаказа 	= ЭлементСтруктурыЗаказа;
	Запись.Записать();	
КонецПроцедуры // ЗаписатьВРегистрСтруктураЗаказаРегистрацияРодителей

/////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ)

	Если Тип = Справочники.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа Тогда		
		Количество = 1;		
	Иначе		
		Если ЗначениеЗаполнено(ПредметСнабжения) Тогда			
			Наименование = ПредметСнабжения.Наименование;		
		КонецЕсли; 		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Ссылка) Тогда	
		РеквизитыЭлементаСтруктуры = ОбщиеФункцииСервер.ПолучитьЗначенияРеквизитов(Ссылка, "Наименование,Родитель,Заведование");		
		Если Не РеквизитыЭлементаСтруктуры.Наименование = Наименование 
			Или Не РеквизитыЭлементаСтруктуры.Родитель = Родитель Тогда		
			
			ДополнительныеСвойства.Вставить("СформироватьОписаниеИерархии");			
			Если Не РеквизитыЭлементаСтруктуры.Родитель = Родитель Тогда			
				Если ЗначениеЗаполнено(РеквизитыЭлементаСтруктуры.Родитель) Тогда					
					ЗаписатьВРегистрСтруктураЗаказаРегистрацияРодителей(РеквизитыЭлементаСтруктуры.Родитель);				
				КонецЕсли; // Если ЗначениеЗаполнено(РеквизитыЭлементаСтруктуры.Родитель) Тогда					
				
				Если ЗначениеЗаполнено(Родитель) Тогда										
					Если Не Родитель.ЕстьПодчиненные Тогда
						ЗаписатьВРегистрСтруктураЗаказаРегистрацияРодителей(Родитель);
					КонецЕсли;				
				КонецЕсли;				
			КонецЕсли;    			
		КонецЕсли;
		
		Если Не ДополнительныеСвойства.Свойство("ОбновлениеЗаведования") И Не РеквизитыЭлементаСтруктуры.Заведование = Заведование Тогда
			
			ДополнительныеСвойства.Вставить("ОбновитьЗаведованиеПодчиненных");	
			
		КонецЕсли;
		
	Иначе
		
		Если Не ДополнительныеСвойства.Свойство("ОписаниеИерархии") Тогда			
			ДополнительныеСвойства.Вставить("СформироватьОписаниеИерархии");			
		КонецЕсли; // Если Не ДополнительныеСвойства.Свойство("ОписаниеИерархии") Тогда			
		
		Если ЗначениеЗаполнено(Родитель) 
			И Не Родитель.ЕстьПодчиненные Тогда			
			ЗаписатьВРегистрСтруктураЗаказаРегистрацияРодителей(Родитель);
		КонецЕсли; // ЗаписатьВРегистрСтруктураЗаказаРегистрацияРодителей
		
	КонецЕсли; // Если ЗначениеЗаполнено(Ссылка) Тогда	
	
КонецПроцедуры // ПередЗаписью

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("НаименованиеДополнительное") Тогда
		
		РезультатЗаписиДопНаименования = СтруктураЗаказаСервер.ЗаписатьДополнительноеНаименование(?(ДополнительныеСвойства.Свойство("ПредметСнабжения"), ДополнительныеСвойства.ПредметСнабжения, Ссылка), ДополнительныеСвойства.Язык, ДополнительныеСвойства.НаименованиеДополнительное);	
		
		Если Не РезультатЗаписиДопНаименования.Выполнено Тогда
		
			Отказ = Истина;
			Сообщить(РезультатЗаписиДопНаименования.Описание);
			Возврат;
		
		КонецЕсли;
	
	КонецЕсли;
	
	ЗаписатьОписаниеИерархии = Ложь;
	
	Если ДополнительныеСвойства.Свойство("ОписаниеИерархии") Тогда
	
		ОписаниеИерархии = ДополнительныеСвойства.ОписаниеИерархии;
		
		ЗаписатьОписаниеИерархии = Истина;
	
	ИначеЕсли ДополнительныеСвойства.Свойство("СформироватьОписаниеИерархии") Тогда
	
		ОписаниеИерархии = СтруктураЗаказаСервер.СформироватьОписаниеИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП(Родитель);
		
		ЗаписатьОписаниеИерархии = Истина;
		
	КонецЕсли;
	
	Если ЗаписатьОписаниеИерархии Тогда
	
		РезультатЗаписиОписанияИерархии = СтруктураЗаказаСервер.ЗаписатьОписаниеИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП(Ссылка, ОписаниеИерархии, ДополнительныеСвойства.Свойство("ОписаниеИерархии"));
		
		Если Не РезультатЗаписиОписанияИерархии.Выполнено Тогда
		
			Отказ = Истина;
			Сообщить(РезультатЗаписиОписанияИерархии.Описание);
			Возврат;
		
		КонецЕсли;
	
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОбновитьЗаведованиеПодчиненных") Тогда
		
		РезультатЗаписиЭлементаДляЗаполненияЗаведованияПодчиненных = СтруктураЗаказаСервер.ЗаписатьЭлементСтруктурыДляЗаполненияЗаведованияПодчиненных(Ссылка, Заведование);
		
		Если Не РезультатЗаписиЭлементаДляЗаполненияЗаведованияПодчиненных.Выполнено Тогда
		
			Отказ = Истина;
			Сообщить(РезультатЗаписиЭлементаДляЗаполненияЗаведованияПодчиненных.Описание);
			Возврат;	
		
		КонецЕсли;	
	
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	ОбменДанными.Загрузка = Истина;
	ДополнительныеСвойства.Вставить("ПропуститьОбработкуЛогаЗагрузки");
	
	// Дополнительные наименования
	
	НаборЗаписей = РегистрыСведений.ДополнительныеНаименования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Владелец.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
	
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
	// Описание иерархии
	
	НаборЗаписей = РегистрыСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЭлементСтруктуры.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
	
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;	
	
	// Очередь перезаписи описания иерархии
	
	НаборЗаписей = РегистрыСведений.ЭлементыСтруктурыЗаказовПоКомплектующимИзделиямИЗИПДляИзмененияОписанияИерархии.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЭлементСтруктуры.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
	
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
	// Очередь СтруктураЗаказаРегистрацияРодителей
	
	НаборЗаписей = РегистрыСведений.СтруктураЗаказаРегистрацияРодителей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЭлементСтруктурыЗаказа.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
	
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
	//++ 13.10.2017 Веденеев П. //проверка наличия ссылки на элемент в регистре эталонов, замена ссылки на альтернативную, удаление записи при отсутствии альтернатив
	Если Не Тип = Справочники.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Группа Тогда
		
		ЭталонныеИзделияВСтруктуреЗаказовМенеджерЗаписи = РегистрыСведений.ЭталонныеИзделияВСтруктуреЗаказов.СоздатьМенеджерЗаписи();
		ЭталонныеИзделияВСтруктуреЗаказовМенеджерЗаписи.ПредметСнабжения = ПредметСнабжения;
		ЭталонныеИзделияВСтруктуреЗаказовМенеджерЗаписи.Прочитать();
		
		Если ЭталонныеИзделияВСтруктуреЗаказовМенеджерЗаписи.ЭлементСтруктурыЗаказа = Ссылка Тогда //элемент яляется эталоном, производим замену или удаление
			
			Запрос = Новый Запрос; //ищем замену
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
			|ГДЕ
			|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения = &ПредметСнабжения
			|	И НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ЗИП
			|	И НЕ СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("ПредметСнабжения", ПредметСнабжения);
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Попытка
				
				Если РезультатЗапроса.Пустой() Тогда //замена найдена - удаляем запись
					
					ЭталонныеИзделияВСтруктуреЗаказовМенеджерЗаписи.Удалить();
					
				Иначе //замена найдена - заменяем ссылку
					
					Выборка = РезультатЗапроса.Выбрать();
					
					Выборка.Следующий();
					
					ЭталонныеИзделияВСтруктуреЗаказовМенеджерЗаписи.ЭлементСтруктурыЗаказа = Выборка.Ссылка;
					
					ЭталонныеИзделияВСтруктуреЗаказовМенеджерЗаписи.Записать();
					
				КонецЕсли;
				
			Исключение
				
				Отказ = Истина;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	//-- 13.10.2017 Веденеев П. //проверка наличия ссылки на элемент в регистре эталонов, замена ссылки на альтернативную, удаление записи при отсутствии альтернатив
	
	//+ 25.10.2017 13:45:15 Базунов Д.А. Задача: Пометки пользователей
	НаборЗаписей = РегистрыСведений.ПометкиПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЭлементСтруктуры.Установить(Ссылка);
	НаборЗаписей.Записать();
	//- 25.10.2017 13:45:15 Базунов Д.А. Задача: 
	
КонецПроцедуры

/////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ДобавитьВОчередьНаИзменение(ПредметСнабжения) Экспорт
	
	СпецификацииОчередьИзменений = РегистрыСведений.СпецификацииПредметовСнабженияОчередьИзменений.СоздатьМенеджерЗаписи();
	СпецификацииОчередьИзменений.Период = ТекущаяДата();
	СпецификацииОчередьИзменений.ПредметСнабжения = ПредметСнабжения;
	СпецификацииОчередьИзменений.Записать();
	
КонецПроцедуры

// Процедура - Преобразовать в изделие
//
// Параметры:
//  ДопПараметры	 - Структура:
//		- ЭлементСтруктуры - ссылка на СтруктураЗаказаПоКомплектующимИзделиямИЗИП
//  	- ПредметСнабжения - ссылка на КаталоПС
//  Проверить - Булево - Из формы проверки не нужны, она там есть
Процедура ПреобразоватьВИзделие(ДопПараметры, Проверить = Истина) Экспорт
	
	ЭтотОбъект.Количество = 1;
	ЭтотОбъект.Тип = Справочники.ТипыУзловЭлектроннойСтруктурыКомплектующихИзделийИЗИПКорабля.Изделие;

	ПредметСнабжения = ДопПараметры.ПредметСнабжения;
	
	Если Проверить Тогда
		
		СпрСтруктура = Справочники.СтруктураЗаказаПоКомплектующимИзделиямИЗИП;
		
		Если СпрСтруктура.ЕстьПодчиненныеГруппы(Ссылка) Тогда
			ВызватьИсключение "У изделия есть подчиненные группы!";
			Возврат;
		КонецЕсли; 
		Если СпрСтруктура.СсылкаЭтоИзделие(Ссылка) Тогда
			ВызватьИсключение "Текущий элемент это изделие!";
		КонецЕсли;
		Если СпрСтруктура.ЭтоЗИП(Ссылка.Родитель) Тогда
			ВызватьИсключение "Нельзя! Родитель с признаком ЗИП";
			Возврат;
		КонецЕсли; 
		Если СпрСтруктура.ЕстьВОчередиНаИзменение(Ссылка) Тогда
			ВызватьИсключение "Изделие стоит в очереди на изменение, преобразование невозможно!";
			Возврат;
		КонецЕсли; 
		
	КонецЕсли; 
	
	ПричинаПрочее = Константы.ЗначениеПоУмолчаниюПричинаВыбораПредметаСнабженияДляЗИП.Получить();
	ТипСЧ 		  = Константы.ЗначениеПоУмолчаниюРазделСпецификацииЗИП.Получить();
	
	ТаблицаСпецификаций = СпецификацииПредметовСнабжения.ВыгрузитьСпецификациюВТаблицуЗначений(ПредметСнабжения);
	Выборка 			= ВыбратьПодчиненныеЭлементыСтруктуры(Ссылка);
				
	Пока Выборка.Следующий() Цикл
		
		Если ТаблицаСпецификаций.Найти(Выборка.ПредметСнабжения, "СоставляющаяЧасть") = Неопределено Тогда
			НовСтр = ТаблицаСпецификаций.Добавить();
			НовСтр.ПредметСнабжения  = ПредметСнабжения;
			НовСтр.СоставляющаяЧасть = Выборка.ПредметСнабжения;
			НовСтр.Тип = ТипСЧ;
			НовСтр.ПричинаВыбораДляЗИП = ПричинаПрочее;
			НовСтр.ЗИП = Выборка.ЗИП;
			НовСтр.Количество = 1;
		КонецЕсли; 
		
	КонецЦикла;  

	СпецификацииПредметовСнабжения.ОбновитьСпецификациюПредметаСнабжения(ПредметСнабжения, ТаблицаСпецификаций); 
	СпецификацииПредметовСнабжения.ДобавитьВРегистрАктуализацияСтруктурыПС(ПредметСнабжения, Ложь);
		
КонецПроцедуры


