
&НаСервере
Процедура ВидАлгоритмаПриИзмененииНаСервере()
	
	Если Объект.ВидАлгоритма = Перечисления.ВидАлгоритма.Код  Тогда
		
		Элементы.ТекстЗапросаФильтра.ПодсказкаВвода = "Код";
		
	Иначе
		
		Элементы.ТекстЗапросаФильтра.ПодсказкаВвода = "Текст Запроса";
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВидАлгоритмаПриИзменении(Элемент)
	
	ВидАлгоритмаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() И Параметры.ЗначениеКопирования.Пустая() Тогда
		Объект.ТекстЗапросаФильтра = "//Запрос должен возвращать одно поле ""Ссылка"" по которому будет произведен отбор элементов." + Символы.ПС;
		Объект.ТекстЗапросаГруппировочногоПоля = "//Необязательное поле. Получение значения группировочного поля в запросе." + Символы.ПС;
		Объект.ТекстЗапросаВиртуальныхТаблиц = "//Необязательное поле. Текст запроса для создания виртуальной таблицы или множества таблиц, 
												|которые можно использовать в остальных текстах запроса." + Символы.ПС;
	КонецЕсли; 
	
	Объект.ВидАлгоритма = Перечисления.ВидАлгоритма.Запрос;
	ВидАлгоритмаПриИзмененииНаСервере();
	
	СпрОб = РеквизитФормыВЗначение("Объект");
	
	Для каждого Стр Из СпрОб.ПараметрыЗапроса Цикл
		НовСтр = ПараметрыЗапросаФорма.Добавить();
		НовСтр.ИмяПараметра = Стр.ИмяПараметра;
		Если НЕ Стр.Хранилище.Получить() = Неопределено Тогда
			НовСтр.ЗначениеПараметра = Стр.Хранилище.Получить();
		Иначе
			НовСтр.ЗначениеПараметра = Стр.ЗначениеПараметра
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыНаСервере()
	
	СтруктураПараметров = Новый Структура();
	ТекстЗапросаФильтра = Объект.ТекстЗапросаФильтра;
	
	Если НЕ ПустаяСтрока(ТекстЗапросаФильтра) Тогда
		
		Запрос = Новый Запрос(ТекстЗапросаФильтра);
		Попытка
			НайденныеПараметры = Запрос.НайтиПараметры();
		Исключение
			ааа = ОписаниеОшибки();
		КонецПопытки;
		Для каждого ПараметрЗапроса из НайденныеПараметры Цикл
			СтруктураПараметров.Вставить(ПараметрЗапроса.Имя, ПараметрЗапроса.ТипЗначения);
		КонецЦикла;
		
	КонецЕсли;
	
	Для каждого Пар Из СтруктураПараметров Цикл
		НовСтр = ПараметрыЗапросаФорма.Добавить();
		НовСтр.ИмяПараметра = Пар.Ключ;
		НовСтр.ЗначениеПараметра = Пар.Значение.ПривестиЗначение(НовСтр.ЗначениеПараметра);
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
        ПараметрыЗапросаФорма.Очистить();
    КонецЕсли;

	ЗаполнитьПараметрыНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметры(Команда)
	
	Если ПараметрыЗапросаФорма.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, "Продолжить выполнение операции?", РежимДиалогаВопрос.ОКОтмена, 0);
	Иначе
		ЗаполнитьПараметрыНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//СпрОб = РеквизитФормыВЗначение("Объект");
	ТекущийОбъект.ПараметрыЗапроса.Очистить();
	Для каждого Стр Из ПараметрыЗапросаФорма Цикл
		НовСтр = ТекущийОбъект.ПараметрыЗапроса.Добавить();
		НовСтр.ИмяПараметра = Стр.ИмяПараметра;
		Если ТипЗнч(Стр.ЗначениеПараметра) = Тип("СписокЗначений") Тогда
			НовСтр.Хранилище = Новый ХранилищеЗначения(Стр.ЗначениеПараметра);
		Иначе
			НовСтр.ЗначениеПараметра = Стр.ЗначениеПараметра
		КонецЕсли; 
	КонецЦикла;
	//ЗначениеВРеквизитФормы(СпрОб, "Объект");
	
КонецПроцедуры

&НаКлиенте
Функция Оповещение(ИмяПроцедуры, ДополнительныеПараметры = Неопределено, Модуль = Неопределено)
	Возврат Новый ОписаниеОповещения(ИмяПроцедуры, ?(Модуль = Неопределено, ЭтотОбъект, Модуль), ДополнительныеПараметры);
КонецФункции

&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Команда)
	
	Если ЭтаФорма.ТекущийЭлемент.Имя = "ТекстЗапросаФильтра" Тогда
		ЭлементДерева = Элементы.ТекстЗапросаФильтра;
	ИначеЕсли ЭтаФорма.ТекущийЭлемент.Имя = "ТекстЗапросаГруппировочногоПоля" Тогда
		ЭлементДерева = Элементы.ТекстЗапросаГруппировочногоПоля;
	ИначеЕсли ЭтаФорма.ТекущийЭлемент.Имя = "ТекстЗапросаВиртуальныхТаблиц" Тогда
		ЭлементДерева = Элементы.ТекстЗапросаВиртуальныхТаблиц;
	Иначе
		Возврат;
	КонецЕсли; 
	
	Если ЭлементДерева <> Неопределено Тогда
		Если ЗначениеЗаполнено(ЭлементДерева.ТекстРедактирования) Тогда
			Конструктор = Новый КонструкторЗапроса(ЭлементДерева.ТекстРедактирования);
		Иначе
			Конструктор = Новый КонструкторЗапроса();
		КонецЕсли;
		Конструктор.Показать(Оповещение("ОЗ_КонструкторЗапроса", ЭлементДерева));
	Иначе
		//ПоказатьПредупреждение(, "Запрос не выбран");
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОЗ_КонструкторЗапроса(Текст, ЭлементДерева) Экспорт
	
	Если ЗначениеЗаполнено(Текст) Тогда
		Объект[ЭлементДерева.Имя] = Текст;
		Модифицированность = Истина;
	Иначе
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры
