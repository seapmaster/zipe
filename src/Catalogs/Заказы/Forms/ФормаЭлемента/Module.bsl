&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
	
		ЗаполнитьИзображения();
		
		//+ 21.03.2017 13:48:40 Савинов Александр Задача: ОПЗ 2
		
		ЗаполнитьПроектанта();
		
		//- 21.03.2017 13:48:45 Савинов Александр Задача: ОПЗ 2
	
	КонецЕсли;
	
	//++ 13.03.2018 Веденеев П. //отключение непосредственного изменения данных
	КорректировкаДанныхСправочников.ОтключитьНепосредственноеИзменениеДанных(ЭтаФорма);
	
	//++ 15.03.2018 Веденеев П. //старт бизнес-процесса на редактирование структуры корабля
	// ++ 27.06.2018 17:10:10 Базунов Д.А. Задача: 
	// Добавил "РуководительПроектаДепартаментаВТС"
	// -- 27.06.2018 17:10:10 Базунов Д.А. Задача:
	Элементы.ФормаОтправитьНаРедактированиеСтруктуры.Видимость = РольДоступна("РуководительДепартаментаВТС") Или РольДоступна("РуководительПроектаДепартаментаВТС") или РольДоступна("ПолныеПрава");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзображения()

	МассивРасширенийКартинок = Новый Массив;
	МассивРасширенийКартинок.Добавить("bmp");
	МассивРасширенийКартинок.Добавить("dib");
	МассивРасширенийКартинок.Добавить("rle");
	МассивРасширенийКартинок.Добавить("gif");
	МассивРасширенийКартинок.Добавить("jpg");
	МассивРасширенийКартинок.Добавить("jpeg");
	МассивРасширенийКартинок.Добавить("png");
	МассивРасширенийКартинок.Добавить("tif");
	МассивРасширенийКартинок.Добавить("ico");
	МассивРасширенийКартинок.Добавить("wmf");
	МассивРасширенийКартинок.Добавить("emf");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Справочник.ЗаказыПрисоединенныеФайлы КАК ПрисоединенныеФайлы
	|ГДЕ
	|	ПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
	|	И ПрисоединенныеФайлы.Расширение В (&МассивРасширенийКартинок)";
	
	Запрос.УстановитьПараметр("ВладелецФайла", Объект.Ссылка);
	Запрос.УстановитьПараметр("МассивРасширенийКартинок", МассивРасширенийКартинок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат;	
	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Изображения.Добавить(ПрисоединенныеФайлы.ПолучитьДанныеФайла(Выборка.Ссылка, УникальныйИдентификатор).СсылкаНаДвоичныеДанныеФайла);	
		
		КоличествоИзображений = КоличествоИзображений + 1;
	
	КонецЦикла;
	
	АдресКартинки = Изображения.Получить(0).Значение;
	
	Элементы.СледующееИзображение.Доступность = КоличествоИзображений > 1;
	
	НомерТекущегоИзображения = 0;

КонецПроцедуры // ЗаполнитьИзображения()

&НаСервере
Процедура ВывестиИзображенияНаСервере()
	
	Если Объект.Ссылка.Пустая() Тогда
	     Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	
	МассивРасширенийКартинок = Новый Массив;
	МассивРасширенийКартинок.Добавить("bmp");
	МассивРасширенийКартинок.Добавить("dib");
	МассивРасширенийКартинок.Добавить("rle");
	МассивРасширенийКартинок.Добавить("gif");
	МассивРасширенийКартинок.Добавить("jpg");
	МассивРасширенийКартинок.Добавить("jpeg");
	МассивРасширенийКартинок.Добавить("png");
	МассивРасширенийКартинок.Добавить("tif");
	МассивРасширенийКартинок.Добавить("ico");
	МассивРасширенийКартинок.Добавить("wmf");
	МассивРасширенийКартинок.Добавить("emf");
	
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПрисоединенныеФайлы.Ссылка
		|ИЗ
		|	Справочник.ЗаказыПрисоединенныеФайлы КАК ПрисоединенныеФайлы
		|ГДЕ
		|	ПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
		|	И ПрисоединенныеФайлы.Расширение В (&МассивРасширенийКартинок)";
	
	Запрос.УстановитьПараметр("ВладелецФайла", Объект.Ссылка);
	Запрос.УстановитьПараметр("МассивРасширенийКартинок", МассивРасширенийКартинок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЭтаФорма.АдресКартинки = ПрисоединенныеФайлы.ПолучитьДанныеФайла(Выборка.Ссылка).СсылкаНаДвоичныеДанныеФайла;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВывестиИзображения()
	ВывестиИзображенияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//ПодключитьОбработчикОжидания("ВывестиИзображения",0.1,Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Заказы.Ссылка,
	//	|	Заказы.Наименование,
	//	|	Заказы.БортовойНомер,
	//	|	Заказы.ЗаводскойНомер
	//	|ИЗ
	//	|	Справочник.Заказы КАК Заказы
	//	|ГДЕ
	//	|	(Заказы.БортовойНомер = &БортовойНомер И &БортовойНомер <> """"
	//	|	ИЛИ Заказы.ЗаводскойНомер = &ЗаводскойНомер И &ЗаводскойНомер <> """")
	//	|	И Заказы.Ссылка <> &Ссылка";
	//
	//Запрос.УстановитьПараметр("БортовойНомер", СокрЛП(ТекущийОбъект.БортовойНомер));
	//Запрос.УстановитьПараметр("ЗаводскойНомер", СокрЛП(ТекущийОбъект.ЗаводскойНомер));
	//Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Если Не РезультатЗапроса.Пустой() Тогда
	//
	//	Сообщить("Уже имеются другие заказы с одинаковыми бортовыми или заводскими номерами:",СтатусСообщения.Информация);
	//	
	//	Выборка = РезультатЗапроса.Выбрать();
	//	
	//	Пока Выборка.Следующий() Цикл
	//	
	//		Сообщение = Новый СообщениеПользователю;
	//		Сообщение.Текст = "" + Выборка.Наименование + ", боротовой номер: " + Выборка.БортовойНомер + ", заводской номер: " + Выборка.ЗаводскойНомер;
	//		Сообщение.УстановитьДанные(Выборка.Ссылка.ПолучитьОбъект());
	//		Сообщение.Сообщить(); 
	//	
	//	КонецЦикла; 
	//	
	//	//Сообщить("Элемент не записан!",СтатусСообщения.Важное);
	//	//Отказ = Истина;
	//
	//КонецЕсли;
	
	//++ 13.03.2018 Веденеев П. //отключение непосредственного изменения данных
	Если ПолучитьФункциональнуюОпцию("ИспользоватьБизнесПроцессыДляКорректировкиСправочников") И КоманднаяПанель.ПодчиненныеЭлементы.ФормаОбщаяКомандаАкцептоватьИзмененияВСправочнике.Видимость Тогда
	
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущееИзображение(Команда)
	
	НомерТекущегоИзображения = НомерТекущегоИзображения - 1;
	
	АдресКартинки = Изображения.Получить(НомерТекущегоИзображения).Значение;
	
	Элементы.ПредыдущееИзображение.Доступность = НомерТекущегоИзображения > 0;
	Элементы.СледующееИзображение.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СледующееИзображение(Команда)
	
	НомерТекущегоИзображения = НомерТекущегоИзображения + 1;
	
	АдресКартинки = Изображения.Получить(НомерТекущегоИзображения).Значение;
	
	Элементы.ПредыдущееИзображение.Доступность = Истина;
	Элементы.СледующееИзображение.Доступность = КоличествоИзображений > НомерТекущегоИзображения + 1;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПроектанта()

	Проектант = ОбщиеФункцииСервер.ПолучитьЗначениеРеквизита(Объект.Владелец, "Проектант");	

КонецПроцедуры // ЗаполнитьПроектанта()

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ЗаполнитьПроектанта();	
	
КонецПроцедуры

&НаКлиенте
Процедура ВооружениеВооружениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Вооружение.ТекущиеДанные;
	ТекущиеДанные.ЕдиницаИзмерения = ПолучитьЗначениеРеквизита(ТекущиеДанные.Вооружение, "ЕдиницаИзмерения");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеРеквизита(Ссылка, ИмяРеквизита)
	
	Возврат Ссылка[ИмяРеквизита];
	
КонецФункции

//++ 15.03.2018 Веденеев П. //старт бизнес-процесса на редактирование структуры корабля
&НаКлиенте
Процедура ОтправитьНаРедактированиеСтруктуры(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПоказатьПредупреждение(, "Сначала нужно записать элемент!");
		Возврат;
		
	КонецЕсли;
	
	Если КорректировкаДанныхСправочников.КорабльНаходитсяВПроцессеРедактирования(Объект.Ссылка, Истина) Тогда
		
		ПоказатьПредупреждение(, "Структура корабля уже находится в процессе редактирования!");
		Возврат;
		
	КонецЕсли;
	
	ДанныеБизнесПроцесса = ПолучитьСтруктуруДанныхБизнесПроцесса(Объект.Ссылка);
	
	ОткрытьФорму("БизнесПроцесс.РедактированиеЭлектроннойСтруктурыКорабля.Форма.ФормаБизнесПроцесса", 
		Новый Структура("ДанныеБизнесПроцесса", ДанныеБизнесПроцесса));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруДанныхБизнесПроцесса(Знач Ссылка);
	
	СтруктураДанныхБизнесПроцесса = Новый Структура;
	
	СтруктураДанныхБизнесПроцесса.Вставить("Наименование", "Корректировка структуры корабля " + Ссылка.Наименование);
	СтруктураДанныхБизнесПроцесса.Вставить("Важность", Перечисления.ВариантыВажностиЗадачи.Обычная);
	СтруктураДанныхБизнесПроцесса.Вставить("Дата", ТекущаяДата());
	СтруктураДанныхБизнесПроцесса.Вставить("Автор", ПараметрыСеанса.ТекущийПользователь);
	СтруктураДанныхБизнесПроцесса.Вставить("АвторСтрокой", Строка(СтруктураДанныхБизнесПроцесса.Автор));
	СтруктураДанныхБизнесПроцесса.Вставить("Исполнитель", Справочники.РолиИсполнителей.ОтветственныйЗаСтруктуруКорабля);
	СтруктураДанныхБизнесПроцесса.Вставить("Предмет", Ссылка);
	СтруктураДанныхБизнесПроцесса.Вставить("Содержание", "Корректировка структуры комплектующих изделий и ЗИП корабля");
	СтруктураДанныхБизнесПроцесса.Вставить("НаПроверке", Ложь);
	СтруктураДанныхБизнесПроцесса.Вставить("Проверяющий", Неопределено);
	
	Возврат СтруктураДанныхБизнесПроцесса;
	
КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//++ 13.03.2018 Веденеев П. //отключение непосредственного изменения данных
	КорректировкаДанныхСправочников.ОтключитьНепосредственноеИзменениеДанных(ЭтаФорма);
	
КонецПроцедуры
//-- 15.03.2018 Веденеев П. //старт бизнес-процесса на редактирование структуры корабля
