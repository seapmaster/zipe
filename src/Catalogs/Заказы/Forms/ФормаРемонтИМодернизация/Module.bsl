
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Заказ", Заказ);
	
	РемонтИМодернизация.Параметры.УстановитьЗначениеПараметра("Заказ", Заказ);
	
	Если Не РольДоступна("ПолныеПрава") И РольДоступна("ПредставительПроектантаКорабля") Тогда
	
		Элементы.РемонтИМодернизация.ТолькоПросмотр = Истина;
		Элементы.РемонтИМодернизацияСоздатьЗапись.Доступность = Ложь;
		Элементы.РемонтИМодернизацияУдалитьЗапись.Доступность = Ложь;
		Элементы.РемонтИМодернизацияКонтекстноеМенюСоздатьЗапись.Доступность = Ложь;
		Элементы.РемонтИМодернизацияКонтекстноеМенюУдалитьЗапись.Доступность = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗапись(Команда)
	
	ПараметрыОткрытия = Новый Структура("Заказ", Заказ);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикСозданияЗаписи", ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.РемонтИМодернизацияЗаказов.ФормаЗаписи", ПараметрыОткрытия, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСозданияЗаписи(ВозЗнач, ДопПараметры = Неопределено) Экспорт

	Элементы.РемонтИМодернизация.Обновить();	

КонецПроцедуры // ОбработчикСозданияЗаписи()

&НаКлиенте
Процедура УдалитьЗапись(Команда)
	
	ТекДанные = Элементы.РемонтИМодернизация.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	УдалитьЗаписьНаСервере(ТекДанные);
	
	Элементы.РемонтИМодернизация.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьЗаписьНаСервере(ТекДанные)

	МенеджерЗаписи = РегистрыСведений.РемонтИМодернизацияЗаказов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ТекДанные);
	
	Попытка
	
		МенеджерЗаписи.Удалить();
	
	Исключение
		
		Сообщить(ОписаниеОшибки());
	
	КонецПопытки;

КонецПроцедуры // УдалитьЗаписьНаСервере()

