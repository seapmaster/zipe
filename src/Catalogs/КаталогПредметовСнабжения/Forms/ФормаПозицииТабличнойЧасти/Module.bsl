
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяТабличнойЧасти = Параметры.ИмяТабличнойЧасти;
	ПредметСнабжения  = Параметры.ПредметСнабжения;
	
	Элементы.ГруппаХарактеристика.Видимость 			= (ИмяТабличнойЧасти = "Характеристики");
	Элементы.ГруппаАналоги.Видимость 					= (ИмяТабличнойЧасти = "Аналоги");
	Элементы.ГруппаИзготовителиИПоставщики.Видимость 	= (ИмяТабличнойЧасти = "ИзготовителиИПоставщики");

	Если ИмяТабличнойЧасти = "Характеристики" Тогда
		
		Если Параметры.Свойство("Характеристика", Характеристика) Тогда КонецЕсли;
		Если Параметры.Свойство("Значение", Значение) Тогда КонецЕсли;
		Если Параметры.Свойство("ЕдиницаИзмерения", ЕдиницаИзмерения) Тогда КонецЕсли;
		Если Параметры.Свойство("Основная", Основная) Тогда КонецЕсли;
		Если Параметры.Свойство("ОтображениеДляЗаказчика", ОтображениеДляЗаказчика) Тогда КонецЕсли;
		
		Если Параметры.Свойство("ВыбранныеХарактеристики") Тогда 
			ВыбранныеХарактеристики.ЗагрузитьЗначения(Параметры.ВыбранныеХарактеристики);	
		КонецЕсли;

		ЭтаФорма.Заголовок = "Характеристика";
	
	ИначеЕсли ИмяТабличнойЧасти = "Аналоги" Тогда
		
		Если Параметры.Свойство("Аналог", Аналог) Тогда КонецЕсли;
		Если Параметры.Свойство("ТипЗамены", ТипЗамены) Тогда КонецЕсли;
		
		ЭтаФорма.Заголовок = "Аналог";

	ИначеЕсли ИмяТабличнойЧасти = "ИзготовителиИПоставщики" Тогда
		
		Если Параметры.Свойство("Контрагент", Контрагент) Тогда КонецЕсли;
		Если Параметры.Свойство("Поставщик", Поставщик) Тогда КонецЕсли;
		Если Параметры.Свойство("Разработчик", Разработчик) Тогда КонецЕсли;
		Если Параметры.Свойство("Изготовитель", Изготовитель) Тогда КонецЕсли;
		Если Параметры.Свойство("СрокиИзготовления", СрокиИзготовления) Тогда КонецЕсли;
		Если Параметры.Свойство("ЕдиницаИзмерения", ЕдиницаИзмерения) Тогда КонецЕсли;
		Если Параметры.Свойство("СостояниеПроизводства", СостояниеПроизводства) Тогда КонецЕсли;
		
		Если Параметры.Свойство("ВыбранныеПоставщики") Тогда 
			ВыбранныеПоставщики.ЗагрузитьЗначения(Параметры.ВыбранныеПоставщики);	
		КонецЕсли;

		ЭтаФорма.Заголовок = "Поставщик";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	ПараметрыЗакрытия = Новый Структура;
	
	ПараметрыЗакрытия.Вставить("ИмяТабличнойЧасти", ИмяТабличнойЧасти);
	
	Ошибки = Неопределено;
	Если ИмяТабличнойЧасти = "Характеристики" Тогда
		
		Если НЕ ЗначениеЗаполнено(Характеристика) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Характеристика", НСтр("ru = 'Поле ""Характеристика"" не заполнено.'"), Неопределено);
					
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Значение", НСтр("ru = 'Поле ""Значение"" не заполнено.'"), Неопределено);
					
		КонецЕсли; 
		
		ПараметрыЗакрытия.Вставить("Характеристика", Характеристика);
		ПараметрыЗакрытия.Вставить("Значение", Значение);
		ПараметрыЗакрытия.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
		ПараметрыЗакрытия.Вставить("Основная", Основная);
		ПараметрыЗакрытия.Вставить("ОтображениеДляЗаказчика", ОтображениеДляЗаказчика);
		
	ИначеЕсли ИмяТабличнойЧасти = "Аналоги" Тогда
		
		Если НЕ ЗначениеЗаполнено(Аналог) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Аналог", НСтр("ru = 'Поле ""Аналог"" не заполнено.'"), Неопределено);
			
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(ТипЗамены) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "ТипЗамены", НСтр("ru = 'Поле ""ТипЗамены"" не заполнено.'"), Неопределено);
			
		КонецЕсли; 
		
		ПараметрыЗакрытия.Вставить("Аналог", Аналог);
		ПараметрыЗакрытия.Вставить("ТипЗамены", ТипЗамены);
		
	ИначеЕсли ИмяТабличнойЧасти = "ИзготовителиИПоставщики" Тогда
		
		Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Контрагент", НСтр("ru = 'Поле ""Контрагент"" не заполнено.'"), Неопределено);
					
		КонецЕсли;
		
		ПараметрыЗакрытия.Вставить("Контрагент", Контрагент);
		ПараметрыЗакрытия.Вставить("Поставщик", Поставщик);
		ПараметрыЗакрытия.Вставить("Разработчик", Разработчик);
		ПараметрыЗакрытия.Вставить("Изготовитель", Изготовитель);
		ПараметрыЗакрытия.Вставить("СрокиИзготовления", СрокиИзготовления);
		ПараметрыЗакрытия.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
		ПараметрыЗакрытия.Вставить("СостояниеПроизводства", СостояниеПроизводства);

	КонецЕсли;  	
	
	Если ЗначениеЗаполнено(Ошибки) Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
		
	Иначе
		
		Закрыть(ПараметрыЗакрытия);

	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтбора = Новый НастройкиКомпоновкиДанных;
	
	Если ВыбранныеХарактеристики.Количество() > 0 Тогда
		НовыйЭлемент = НастройкиОтбора.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		НовыйЭлемент.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеВСписке;
		НовыйЭлемент.ПравоеЗначение= ВыбранныеХарактеристики;
	КонецЕсли;		
	
	ОткрытьФорму("Справочник.ХарактеристикиПредметовСнабжения.ФормаВыбора", Новый Структура("ФиксированныеНастройки", НастройкиОтбора), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура АналогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтбора = Новый НастройкиКомпоновкиДанных;
	
	НовыйЭлемент = НастройкиОтбора.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	НовыйЭлемент.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеРавно;
	НовыйЭлемент.ПравоеЗначение= ПредметСнабжения;
		
	ОткрытьФорму("Справочник.КаталогПредметовСнабжения.Форма.ФормаВыбора", Новый Структура("ФиксированныеНастройки", НастройкиОтбора), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтбора = Новый НастройкиКомпоновкиДанных;
	
	Если ВыбранныеПоставщики.Количество() > 0 Тогда
		НовыйЭлемент = НастройкиОтбора.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		НовыйЭлемент.ВидСравнения  = ВидСравненияКомпоновкиДанных.НеВСписке;
		НовыйЭлемент.ПравоеЗначение= ВыбранныеПоставщики;
	КонецЕсли;		
	
	ОткрытьФорму("Справочник.Организации.Форма.ФормаВыбора", Новый Структура("ФиксированныеНастройки", НастройкиОтбора), ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмерения1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВыборДляПредметовСнабжения");
	
	ОткрытьФорму("Справочник.ОКЕИ.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтотОбъект); 

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.Организации.Форма.ФормаВыбора" Тогда
		
		Контрагент = ВыбранноеЗначение;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.КаталогПредметовСнабжения.Форма.ФормаВыбора" Тогда
		
		Аналог = ВыбранноеЗначение;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.ХарактеристикиПредметовСнабжения.ФормаВыбора" Тогда
		
		Характеристика = ВыбранноеЗначение;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.ОКЕИ.Форма.ФормаВыбора" Тогда
		
		ЕдиницаИзмерения = ВыбранноеЗначение;

	КонецЕсли;  
	
КонецПроцедуры

