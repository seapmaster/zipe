
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВыборДляКонтракта") Тогда
		
		ВыборДляКонтракта = Истина;
		
		Элементы.ГруппаОтборы.Видимость = Истина;
		
		Если Параметры.Свойство("Поставщик") Тогда
			
			Элементы.ИспользоватьОтборПоПоставщику.Видимость = Истина;
			Элементы.Поставщик.Видимость = Истина;
			
			//ИспользоватьОтборПоПоставщику = Истина;
			Поставщик = Параметры.Поставщик;	
			
		КонецЕсли;
		
		НастроитьОтбор();	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоПоставщикуПриИзменении(Элемент)
	
	Если Не ИспользоватьОтборПоПоставщику Или ИспользоватьОтборПоПоставщику И ЗначениеЗаполнено(Поставщик) Тогда
	
		НастроитьОтбор();	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоЗаказуПриИзменении(Элемент)
	
	Если Не ИспользоватьОтборПоЗаказу Или ИспользоватьОтборПоЗаказу И ЗначениеЗаполнено(Заказ) Тогда
	
		НастроитьОтбор();	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоВидуПриИзменении(Элемент)
	
	Если Не ИспользоватьОтборПоВиду Или ИспользоватьОтборПоВиду И ЗначениеЗаполнено(Вид) Тогда
	
		НастроитьОтбор();	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	
	Если ИспользоватьОтборПоПоставщику Тогда
	
		НастроитьОтбор();	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПриИзменении(Элемент)
	
	Если ИспользоватьОтборПоЗаказу Тогда
	
		НастроитьОтбор();	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	
	Если ИспользоватьОтборПоВиду Тогда
	
		НастроитьОтбор();	
	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтбор()
	
	УстановитьПараметрПоставщик = ИспользоватьОтборПоПоставщику И ЗначениеЗаполнено(Поставщик);
	УстановитьПараметрЗаказ 	= ИспользоватьОтборПоЗаказу И ЗначениеЗаполнено(Заказ);
	УстановитьПараметрВид 		= ИспользоватьОтборПоВиду И ЗначениеЗаполнено(Вид);
	
	Если Не УстановитьПараметрПоставщик И Не УстановитьПараметрЗаказ И Не УстановитьПараметрВид Тогда
	
		Список.ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СправочникКаталогПредметовСнабжения.Ссылка КАК Ссылка,
		|	СправочникКаталогПредметовСнабжения.Наименование КАК НаименованиеРус,
		|	СправочникКаталогПредметовСнабжения.Обозначение КАК Обозначение,
		|	СправочникКаталогПредметовСнабжения.ОбозначениеТранслитированное КАК ОбозначениеТранслитированное,
		|	СправочникКаталогПредметовСнабжения.СамостоятельнаяПоставка КАК СамостоятельнаяПоставка,
		|	СправочникКаталогПредметовСнабжения.ДокументНаПоставку КАК ДокументНаПоставку,
		|	СправочникКаталогПредметовСнабжения.ФНН КАК ФНН,
		|	СправочникКаталогПредметовСнабжения.NSN КАК NSN,
		|	ЕСТЬNULL(КодыINCATПредставление.Представление, """") КАК INCAT,
		|	СправочникКаталогПредметовСнабжения.НоменклатурныйНомерВМФ КАК НоменклатурныйНомерВМФ,
		|	СправочникКаталогПредметовСнабжения.ОКПД2 КАК ОКПД2,
		|	СправочникКаталогПредметовСнабжения.ТНВЭД КАК ТНВЭД,
		|	СправочникКаталогПредметовСнабжения.Статус КАК Статус,
		|	СправочникКаталогПредметовСнабжения.ЕКПС КАК ЕКПС,
		|	ПОДСТРОКА(СправочникКаталогПредметовСнабжения.Наименование, 1, 1) КАК ГруппировкаПоАлфавиту,
		|	ТабЕКПС.Родитель КАК ЕКПСРодитель
		|ИЗ
		|	Справочник.КаталогПредметовСнабжения КАК СправочникКаталогПредметовСнабжения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕКПС КАК ТабЕКПС
		|		ПО СправочникКаталогПредметовСнабжения.ЕКПС = ТабЕКПС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыINCATПредставление КАК КодыINCATПредставление
		|		ПО СправочникКаталогПредметовСнабжения.Ссылка = КодыINCATПредставление.ПредметСнабжения";		
	
	Иначе
		
		МассивТекстаЗапроса = Новый Массив;
		
		МассивТекстаЗапроса.Добавить("ВЫБРАТЬ");
		
		Если УстановитьПараметрЗаказ Или УстановитьПараметрВид Тогда
		
			МассивТекстаЗапроса.Добавить(" РАЗЛИЧНЫЕ");	
		
		КонецЕсли;
		
		МассивТекстаЗапроса.Добавить("
		|		СправочникКаталогПредметовСнабжения.Ссылка КАК Ссылка,
		|		СправочникКаталогПредметовСнабжения.Наименование КАК НаименованиеРус,
		|		СправочникКаталогПредметовСнабжения.Обозначение КАК Обозначение,
		|		СправочникКаталогПредметовСнабжения.ОбозначениеТранслитированное КАК ОбозначениеТранслитированное,
		|		СправочникКаталогПредметовСнабжения.СамостоятельнаяПоставка КАК СамостоятельнаяПоставка,
		|		СправочникКаталогПредметовСнабжения.ДокументНаПоставку КАК ДокументНаПоставку,
		|		СправочникКаталогПредметовСнабжения.ФНН КАК ФНН,
		|		СправочникКаталогПредметовСнабжения.NSN КАК NSN,
		|		ЕСТЬNULL(КодыINCATПредставление.Представление, """") КАК INCAT,
		|		СправочникКаталогПредметовСнабжения.НоменклатурныйНомерВМФ КАК НоменклатурныйНомерВМФ,
		|		СправочникКаталогПредметовСнабжения.ОКПД2 КАК ОКПД2,
		|		СправочникКаталогПредметовСнабжения.ТНВЭД КАК ТНВЭД,
		|		СправочникКаталогПредметовСнабжения.Статус КАК Статус,
		|		СправочникКаталогПредметовСнабжения.ЕКПС,
		|		СправочникКаталогПредметовСнабжения.ЕКПС.Родитель КАК ЕКПСРодитель,
		|		ПОДСТРОКА(СправочникКаталогПредметовСнабжения.Наименование, 1, 1) КАК ГруппировкаПоАлфавиту");
		
		Если УстановитьПараметрЗаказ Тогда
		
			МассивТекстаЗапроса.Добавить(",
			|		СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец КАК Владелец");	
		
		КонецЕсли;
		
		Если УстановитьПараметрВид Тогда
		
			МассивТекстаЗапроса.Добавить(",
			|		СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ТипСоставляющейЧасти КАК ТипСоставляющейЧасти");	
		
		КонецЕсли;
		
		МассивТекстаЗапроса.Добавить("
		|	ИЗ
		|		Справочник.КаталогПредметовСнабжения КАК СправочникКаталогПредметовСнабжения");
		
		Если УстановитьПараметрЗаказ Или УстановитьПараметрВид Тогда
		
			МассивТекстаЗапроса.Добавить("
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
			|			ПО СправочникКаталогПредметовСнабжения.Ссылка = СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения");
		
		КонецЕсли;
		
		МассивТекстаЗапроса.Добавить("
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыINCATПредставление КАК КодыINCATПредставление
		|		ПО СправочникКаталогПредметовСнабжения.Ссылка = КодыINCATПредставление.ПредметСнабжения");		
		
		МассивТекстаЗапроса.Добавить("
		|	ГДЕ
		|		ИСТИНА");
		
		Если УстановитьПараметрПоставщик Тогда
		
			МассивТекстаЗапроса.Добавить("
			|			
			|И СправочникКаталогПредметовСнабжения.Ссылка В 
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			КаталогПредметовСнабженияИзготовителиИПоставщики.Ссылка КАК Ссылка
			|		ИЗ
			|			Справочник.КаталогПредметовСнабжения.ИзготовителиИПоставщики КАК КаталогПредметовСнабженияИзготовителиИПоставщики
			|		ГДЕ
			|			КаталогПредметовСнабженияИзготовителиИПоставщики.Контрагент = &Поставщик)");	
			
		КонецЕсли;
		
		Если УстановитьПараметрЗаказ Тогда
		
			МассивТекстаЗапроса.Добавить("
			|	И СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец = &Заказ");	
		
		КонецЕсли;
		
		Если УстановитьПараметрВид Тогда
		
			МассивТекстаЗапроса.Добавить("
			|	И СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ТипСоставляющейЧасти = &Вид");	
		
		КонецЕсли;
		
		Список.ТекстЗапроса = СтрСоединить(МассивТекстаЗапроса);
		
		УстановитьПараметрыСписка(УстановитьПараметрПоставщик, УстановитьПараметрЗаказ, УстановитьПараметрВид);
		
	КонецЕсли;
	
	Список.УстановитьОбязательноеИспользование("Ссылка", Истина);

КонецПроцедуры // НастроитьОтбор()

&НаСервере
Процедура УстановитьПараметрыСписка(УстановитьПараметрПоставщик = Ложь, УстановитьПараметрЗаказ = Ложь, УстановитьПараметрВид = Ложь)

	Если УстановитьПараметрПоставщик Тогда
	
		Список.Параметры.УстановитьЗначениеПараметра("Поставщик", Поставщик);	
	
	КонецЕсли;
	
	Если УстановитьПараметрЗаказ Тогда
	
		Список.Параметры.УстановитьЗначениеПараметра("Заказ", Заказ);	
	
	КонецЕсли;
	
	Если УстановитьПараметрВид Тогда
	
		Список.Параметры.УстановитьЗначениеПараметра("Вид", Вид);	
	
	КонецЕсли;

КонецПроцедуры // УстановитьПараметрыСписка()

&НаКлиенте
Процедура ВыбратьПредметСнабжения(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
	
		Закрыть(ТекущиеДанные.Ссылка);	
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Закрыть(Элементы.Список.ТекущиеДанные.Ссылка);	
	
КонецПроцедуры
