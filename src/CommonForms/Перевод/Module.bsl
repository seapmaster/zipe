////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПередЗакрытиемПродолжение(Ответ, ДопПараметры = Неопределено) Экспорт

	Если Ответ = КодВозвратаДиалога.Отмена Тогда	
		Возврат;			
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда		
		ЗакрытиеОбработано = Истина;		
		Закрыть();                  	
	Иначе		
		ЗаписатьИЗакрытьПрограммно();	
	КонецЕсли;	// Если Ответ = КодВозвратаДиалога.Отмена Тогда	

КонецПроцедуры // ПередЗакрытиемПродолжение()

&НаСервере
Функция ЗаписатьПереводы()

	Результат	 = Новый Структура("Выполнено, Описание", Ложь, "");
	
	НаборЗаписей = РегистрыСведений.ДополнительныеНаименования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Владелец.Установить(Владелец);
	НаборЗаписей.Отбор.ИмяРеквизита.Установить(ИмяРеквизита);
	НаборЗаписей.Прочитать();
		
	Если НаборЗаписей.Количество() > 0 Тогда	
		НаборЗаписей.Очистить();		
	КонецЕсли; // Если НаборЗаписей.Количество() > 0 Тогда	
	
	Для Каждого Строка Из Переводы Цикл	
		НоваяЗапись 				= НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
		НоваяЗапись.Владелец 		= Владелец;
		НоваяЗапись.ИмяРеквизита 	= ИмяРеквизита;	
	КонецЦикла; // Для Каждого Строка Из Переводы Цикл	
	
	Попытка   	
		НаборЗаписей.Записать(Истина);		
	Исключение                      		
		Результат.Описание 	= ОписаниеОшибки();
		Возврат Результат;	
	КонецПопытки;
	
	Результат.Выполнено 	= Истина;
	Возврат Результат;	
КонецФункции // ЗаписатьПереводы()


&НаКлиенте
Функция ЕстьПустыеЗначенияПереводов()
	
	Результат 	= Ложь;	
	Сч 			= 1;   	
	Для Каждого СтрокаПеревод Из Переводы Цикл		
		Если Не ЗначениеЗаполнено(СтрокаПеревод.Язык) Тогда			
			Сообщить("Не заполнен язык в строке " + Строка(Сч), СтатусСообщения.Важное);
			Результат = Истина;			
		КонецЕсли; // Если Не ЗначениеЗаполнено(СтрокаПеревод.Язык) Тогда			
		
		Если Не ЗначениеЗаполнено(СтрокаПеревод.Перевод) Тогда			
			Сообщить("Не заполнен перевод в строке " + Строка(Сч), СтатусСообщения.Важное);
			Результат = Истина;                               			
		КонецЕсли; // Если Не ЗначениеЗаполнено(СтрокаПеревод.Перевод) Тогда			
		
		Сч = Сч + 1;		
	КонецЦикла; // Для Каждого СтрокаПеревод Из Переводы Цикл	
	Возврат Результат;	
КонецФункции // ЕстьПустыеЗначенияПереводов

&НаСервере
Процедура ЗаполнитьПереводы()   
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	ДополнительныеНаименования.Язык КАК Язык,
	             	  |	ДополнительныеНаименования.Перевод КАК Перевод
	             	  |ИЗ
	             	  |	РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	             	  |ГДЕ
	             	  |	ДополнительныеНаименования.Владелец = &Владелец
	             	  |	И ДополнительныеНаименования.ИмяРеквизита = &ИмяРеквизита";   	
	Запрос.УстановитьПараметр("Владелец", 		Владелец);
	Запрос.УстановитьПараметр("ИмяРеквизита", 	ИмяРеквизита);
	Переводы.Загрузить(Запрос.Выполнить().Выгрузить());	
КонецПроцедуры // ЗаполнитьПереводы()

////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура КомандаНижнийРегистр(Команда)
	Элементы.ПереводыПеревод.ВыделенныйТекст = НРег(Элементы.ПереводыПеревод.ВыделенныйТекст);
КонецПроцедуры // КомандаНижнийРегистр

&НаКлиенте
Процедура КомандаВерхнийРегистр(Команда)
	Элементы.ПереводыПеревод.ВыделенныйТекст = ВРег(Элементы.ПереводыПеревод.ВыделенныйТекст);
КонецПроцедуры // КомандаВерхнийРегистр

&НаКлиенте
Процедура ЗаписатьПрограммно(Команда)
	
	Если ЕстьПустыеЗначенияПереводов() Тогда		
		Возврат;                            		
	КонецЕсли; // Если ЕстьПустыеЗначенияПереводов() Тогда  	
	
	РезультатЗаписи = ЗаписатьПереводы();	
	Если Не РезультатЗаписи.Выполнено Тогда	
		Сообщить(РезультатЗаписи.Описание);
		Возврат;		
	КонецЕсли; // Если Не РезультатЗаписи.Выполнено Тогда		
	МодифицированностьПереводов = Ложь;	
КонецПроцедуры // ЗаписатьПрограммно

&НаКлиенте
Процедура ЗаписатьИЗакрытьПрограммно(Команда = Неопределено)
	
	Если ЕстьПустыеЗначенияПереводов() Тогда		
		Возврат;		
	КонецЕсли; // Если ЕстьПустыеЗначенияПереводов() Тогда
		
	РезультатЗаписи = ЗаписатьПереводы();	
	Если Не РезультатЗаписи.Выполнено Тогда	
		Сообщить(РезультатЗаписи.Описание);
		Возврат;		
	КонецЕсли; // Если Не РезультатЗаписи.Выполнено Тогда	
	
	МодифицированностьПереводов = Ложь;	
	ЗакрытиеОбработано 			= Истина;       	
	Закрыть();   	
КонецПроцедуры // ЗаписатьИЗакрытьПрограммно


////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Владелец") Или Не Параметры.Свойство("ИмяРеквизита") Или Не Параметры.Свойство("Значение") Тогда
	
		Отказ = Истина;
		Возврат;
	
	КонецЕсли;
	
	Параметры.Свойство("Владелец", Владелец);
	Параметры.Свойство("ИмяРеквизита", ИмяРеквизита);
	
	Элементы.ДекорацияЗначение.Заголовок = Параметры.Значение;
	
	ЗаполнитьПереводы();
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ДополнительныеНаименования) Тогда
		ТолькоПросмотр = Истина;
		Элементы.ФормаЗаписатьПрограммно.Доступность = Ложь;
		Элементы.ФормаЗаписатьИЗакрытьПрограммно.Доступность = Ложь;
		Элементы.Переводы.ТолькоПросмотр = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПереводыПриИзменении(Элемент)
	
	//++ 21.05.2018 Веденеев П. //проверка на повторы языков
	ТекущиеДанные = Элементы.Переводы.ТекущиеДанные;
	
	Если Переводы.НайтиСтроки(Новый Структура("Язык", ТекущиеДанные.Язык)).Количество() > 1 Тогда
		
		Сообщить("Для данного языка уже есть перевод!", СтатусСообщения.Важное);
		ТекущиеДанные.Язык = Неопределено;
		
	КонецЕсли;
	//-- 21.05.2018 Веденеев П. //проверка на повторы языков
	
	МодифицированностьПереводов = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереводыПереводПриИзменении(Элемент)
	
	МодифицированностьПереводов = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗавершениеРаботы И Не ЗакрытиеОбработано Тогда
		
		Если МодифицированностьПереводов Тогда
			
			Отказ = Истина;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемПродолжение", ЭтотОбъект);
			
			ПоказатьВопрос(ОписаниеОповещения, "Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена, , , "1С:Предприятие");
			
		Иначе
			
			ПередЗакрытиемПродолжение(КодВозвратаДиалога.Нет);		
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры






