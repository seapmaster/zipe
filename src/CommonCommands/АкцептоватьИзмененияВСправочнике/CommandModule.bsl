
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ТекущийОбъект = ПараметрыВыполненияКоманды.Источник.Объект;
	
	//Если Не ЗначениеЗаполнено(ТекущийОбъект.Ссылка) Тогда //новые элементы обрабатываются другим бизнес-процессом
	//	
	//	Возврат;
	//	
	//КонецЕсли;
	
	Если Не ПараметрыВыполненияКоманды.Источник.Модифицированность Тогда
		
		ПоказатьПредупреждение(, "Данные не изменялись!");
		Возврат;
		
	КонецЕсли;
	
	НезаполненныеРеквизиты = ПолучитьНезаполненныеРеквизиты(ТекущийОбъект);
	
	Если НезаполненныеРеквизиты.Количество() > 0 Тогда
		
		Сообщить("Не заполнены значения следующих обязательных реквизитов:" + Символы.ПС + СтрСоединить(НезаполненныеРеквизиты, Символы.ПС));
		Возврат;
		
	КонецЕсли;
	
	Если НайтиДубльЭлементаСправочника(ТекущийОбъект) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыВыполненияКоманды.Источник.Модифицированность = Ложь;
	ПараметрыВыполненияКоманды.Источник.Закрыть();
	
	СоздатьБизнесПроцессНаКорректировку(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБизнесПроцессНаКорректировку(ТекущийОбъект)
	
	ЗначенияРеквизитов = ПолучитьСтруктуруЗначенийРеквизитов(ТекущийОбъект);
	
	Если ЗначенияРеквизитов = Неопределено Тогда
		
		ПоказатьПредупреждение(, "Данные не изменились!");
		Возврат;
		
	КонецЕсли;
	
	ДанныеБизнесПроцесса = ПолучитьСтруктуруДанныхБизнесПроцесса(ТекущийОбъект.Ссылка, ТекущийОбъект.Наименование);
	
	ОткрытьФорму("БизнесПроцесс.КорректировкаСправочников.Форма.ФормаБизнесПроцесса", 
		Новый Структура("ЗначенияРеквизитов, ДанныеБизнесПроцесса", ЗначенияРеквизитов, ДанныеБизнесПроцесса));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруЗначенийРеквизитов(ТекущийОбъект)
	
	СтруктураЗначенийРеквизитов = Новый Структура;
	СтруктураСтарыхЗначенийРеквизитов = Новый Структура;
	
	Объект = ДанныеФормыВЗначение(ТекущийОбъект, Тип("СправочникОбъект." + ТекущийОбъект.Ссылка.Метаданные().Имя));
	МетаданныеОбъекта = Объект.Метаданные();
	Ссылка = Объект.Ссылка;
	
	Для каждого СтандартныйРеквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		
		ИмяРеквизита = СтандартныйРеквизит.Имя;
		ЗначениеРеквизита = Объект[ИмяРеквизита];
		
		Если Не ЗначениеРеквизита = Ссылка[ИмяРеквизита] Тогда
			
			СтруктураЗначенийРеквизитов.Вставить(ИмяРеквизита, ЗначениеРеквизита);
			СтруктураСтарыхЗначенийРеквизитов.Вставить(ИмяРеквизита, Ссылка[ИмяРеквизита]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		
		ИмяРеквизита = Реквизит.Имя;
		ЗначениеРеквизита = Объект[ИмяРеквизита];
		
		Если Не ЗначениеРеквизита = Ссылка[ИмяРеквизита] Тогда
			
			СтруктураЗначенийРеквизитов.Вставить(ИмяРеквизита, ЗначениеРеквизита);
			СтруктураСтарыхЗначенийРеквизитов.Вставить(ИмяРеквизита, Ссылка[ИмяРеквизита]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = ?(СтруктураЗначенийРеквизитов.Количество() = 0, Неопределено, 
		Новый Структура("НовыеЗначения, СтарыеЗначения", СтруктураЗначенийРеквизитов, СтруктураСтарыхЗначенийРеквизитов));
		
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруДанныхБизнесПроцесса(Знач Ссылка, НаименованиеЭлемента);
	
	СтруктураДанныхБизнесПроцесса = Новый Структура;
	
	Наименование = ?(ЗначениеЗаполнено(Ссылка), "Изменение данных элемента " + Строка(Ссылка) + " справочника " + Ссылка.Метаданные().Имя,
		"Создание элемента " + НаименованиеЭлемента + " справочника " + Ссылка.Метаданные().Имя);
	
	СтруктураДанныхБизнесПроцесса.Вставить("Наименование", Наименование);
	СтруктураДанныхБизнесПроцесса.Вставить("Важность", Перечисления.ВариантыВажностиЗадачи.Обычная);
	СтруктураДанныхБизнесПроцесса.Вставить("Дата", ТекущаяДата());
	СтруктураДанныхБизнесПроцесса.Вставить("Автор", ПараметрыСеанса.ТекущийПользователь);
	СтруктураДанныхБизнесПроцесса.Вставить("АвторСтрокой", Строка(СтруктураДанныхБизнесПроцесса.Автор));
	СтруктураДанныхБизнесПроцесса.Вставить("Исполнитель", Справочники.РолиИсполнителей.РуководительПроектаЗИПЭ);
	СтруктураДанныхБизнесПроцесса.Вставить("Предмет", Ссылка);
	СтруктураДанныхБизнесПроцесса.Вставить("Содержание", "Подтверждение изменений, внесенных в элемент справочника");
	
	Возврат СтруктураДанныхБизнесПроцесса;
	
КонецФункции

&НаСервере
Процедура ЗапуститьБизнесПроцессНаКорректировку(ТекущийОбъект)
	
	КорректировкаСправочников = БизнесПроцессы.КорректировкаСправочников.СоздатьБизнесПроцесс();
	РеквизитыСправочника = КорректировкаСправочников.РеквизитыСправочника;
	
	Объект = ДанныеФормыВЗначение(ТекущийОбъект, Тип("СправочникОбъект." + ТипЗнч(ТекущийОбъект.Ссылка)));
	МетаданныеОбъекта = Объект.Метаданные();
	Ссылка = Объект.Ссылка;
	
	Для каждого СтандартныйРеквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		
		ИмяРеквизита = СтандартныйРеквизит.Имя;
		ЗначениеРеквизита = Объект[ИмяРеквизита];
		
		Если Не ЗначениеРеквизита = Ссылка[ИмяРеквизита] Тогда
			
			РеквизитСправочника = РеквизитыСправочника.Добавить();
			РеквизитСправочника.ИмяРеквизита = ИмяРеквизита;
			РеквизитСправочника.НовоеЗначение = ЗначениеРеквизита;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		
		ИмяРеквизита = Реквизит.Имя;
		ЗначениеРеквизита = Объект[ИмяРеквизита];
		
		Если Не ЗначениеРеквизита = Ссылка[ИмяРеквизита] Тогда
			
			РеквизитСправочника = РеквизитыСправочника.Добавить();
			РеквизитСправочника.ИмяРеквизита = ИмяРеквизита;
			РеквизитСправочника.НовоеЗначение = ЗначениеРеквизита;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РеквизитыСправочника.Количество() > 0 Тогда //произвошли изменения - запускаем бизнес-процесс
		
		КорректировкаСправочников.Наименование = "Изменение данных элемента " + Строка(Ссылка) + " справочника " + Строка(ТипЗнч(Ссылка));
		КорректировкаСправочников.Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
		КорректировкаСправочников.Дата = ТекущаяДата();
		КорректировкаСправочников.Автор = ПараметрыСеанса.ТекущийПользователь;
		КорректировкаСправочников.АвторСтрокой = КорректировкаСправочников.Автор;
		КорректировкаСправочников.Исполнитель = Справочники.РолиИсполнителей.РуководительПроектаЗИПЭ;
		КорректировкаСправочников.Предмет = Ссылка;
		КорректировкаСправочников.Содержание = "Подтверждение изменений, внесенных в элемент справочника";
		
		КорректировкаСправочников.Записать();
		КорректировкаСправочников.Старт();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиДубльЭлементаСправочника(ТекущийОбъект)
	
	Ссылка = ТекущийОбъект.Ссылка;
	
	ИмяСправочника = Ссылка.Метаданные().Имя;
	
	СтруктураОписанийРеквизитовПроверки = ПолучитьОписаниеРеквизитовПроверки();
	
	СписокРеквизитовПроверки = Неопределено;
		
	Если Не СтруктураОписанийРеквизитовПроверки.Свойство(ИмяСправочника, СписокРеквизитовПроверки) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	МассивРеквизитовПроверки = СтрРазделить(СписокРеквизитовПроверки, ",", Ложь);
	
	Сч = МассивРеквизитовПроверки.ВГраница();
	
	Пока Сч >= 0 Цикл
		
		Если Не ЗначениеЗаполнено(ТекущийОбъект[МассивРеквизитовПроверки[Сч]]) Тогда
			
			МассивРеквизитовПроверки.Удалить(Сч);
			
		КонецЕсли;
		
		Сч = Сч - 1;
		
	КонецЦикла;
	
	Если МассивРеквизитовПроверки.Количество() = 0 Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	ЗапросСхемы = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
	ОператорЗапроса = ЗапросСхемы.Операторы[0];
	ОператорЗапроса.Источники.Добавить("Справочник." + ИмяСправочника, ИмяСправочника);
	ОператорЗапроса.ВыбираемыеПоля.Добавить("Ссылка");
	ОператорЗапроса.Отбор.Добавить("НЕ " + ИмяСправочника + ".Ссылка = &Ссылка");
	
	УсловияПоРеквизитам = Новый Массив;
	
	Для каждого РеквизитПроверки Из МассивРеквизитовПроверки Цикл
		
		УсловияПоРеквизитам.Добавить(РеквизитПроверки + " = &" + РеквизитПроверки);
		Запрос.УстановитьПараметр(РеквизитПроверки, ТекущийОбъект[РеквизитПроверки]);
		
	КонецЦикла;
	
	ОператорЗапроса.Отбор.Добавить(СокрЛП("(" + СтрСоединить(УсловияПоРеквизитам, " ИЛИ ") + ")"));
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Ложь;
		
	Иначе
		
		Сообщить("В справочнике " + ИмяСправочника + " уже есть элемент с указанным значением реквизита(ов) " + СписокРеквизитовПроверки);
		Возврат Истина;
		
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПолучитьОписаниеРеквизитовПроверки()
	
	//структура с перечислением всех справочников присутствует для наглядности (информация не хранится в бд, ибо пока незачем)
	//ключ структуры - имя справочника, значение структуры - имена реквизитов через запятую
	СтруктураОписанийРеквизитовПроверки = Новый Структура;
	СтруктураОписанийРеквизитовПроверки.Вставить("ОКАТО", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ОКВЭД2", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ЕКПС", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ТНВЭД", "ПолноеНаименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ОКЕИ", "НаименованиеПолное");
	СтруктураОписанийРеквизитовПроверки.Вставить("ОКВ", "Наименование,НаименованиеПолное");
	СтруктураОписанийРеквизитовПроверки.Вставить("ОКПД2", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ОКСМ", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("Инкотермс2010", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ПричиныВыбораПредметаСнабженияДляЗИП", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ПризнакиПодбораИлиИзготовленияПредметовСнабжения", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ТипыЗаменыПредметаСнабженияАналогом", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("УтвержденныеНаименованияПредметовСнабжения", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ТипыКораблей", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("РангиКораблей", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ПроектыКораблей", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("Флоты", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("РазделыСпецификацииЗИП", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ВидыРемонта", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ТипыПоказателейИзделий", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ТипДокументацииДляИзготовленияИПоставкиПредметовСнабжения", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ХарактеристикиПредметовСнабжения", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ЭтапыВыполненияЗаявокНаПоставкуПредметовСнабжения", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ХарактеристикиКораблей", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ВооружениеКораблей", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("Языки", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("ИностранныеЗаказчики", "Наименование");
	СтруктураОписанийРеквизитовПроверки.Вставить("Организации", "ОКПО");
	
	Возврат СтруктураОписанийРеквизитовПроверки;
	
КонецФункции

&НаСервере
Функция ПолучитьНезаполненныеРеквизиты(Объект)
	
	НезаполненныеРеквизиты = Новый Массив;
	
	МетаданныеСправочника = Объект.Ссылка.Метаданные();
	
	ПроверятьЗаполнение = ПроверкаЗаполнения.ВыдаватьОшибку;
	
	Для каждого СтандартныйРеквизит Из МетаданныеСправочника.СтандартныеРеквизиты Цикл
		
		Если СтандартныйРеквизит.ПроверкаЗаполнения = ПроверятьЗаполнение И Не ЗначениеЗаполнено(Объект[СтандартныйРеквизит.Имя]) Тогда
			
			НезаполненныеРеквизиты.Добавить(?(ЗначениеЗаполнено(СтандартныйРеквизит.Синоним), СтандартныйРеквизит.Синоним, СтандартныйРеквизит.Имя));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
		
		Если Реквизит.ПроверкаЗаполнения = ПроверятьЗаполнение И Не ЗначениеЗаполнено(Объект[Реквизит.Имя]) Тогда
			
			НезаполненныеРеквизиты.Добавить(?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя));
			
		КонецЕсли;
		
	КонецЦикла;
	
	//Для каждого ТабличнаяЧасть Из МетаданныеСправочника.ТабличныеЧасти Цикл
	//	
	//	ИмяТабличнойЧасти = ?(ЗначениеЗаполнено(ТабличнаяЧасть.Синоним), ТабличнаяЧасть.Синоним, ТабличнаяЧасть.Имя);
	//	
	//	Для каждого СтрокаТабличнойЧасти Из Объект[ТабличнаяЧасть.Имя] Цикл
	//		
	//		Для каждого РеквизитТабличнойЧасти Из ТабличнаяЧасть.Реквизиты Цикл
	//			
	//			Если РеквизитТабличнойЧасти.ПроверкаЗаполнения = ПроверятьЗаполнение И Не ЗначениеЗаполнено(Объект[РеквизитТабличнойЧасти.Имя]) Тогда
	//				
	//				ИмяРеквизита = ?(ЗначениеЗаполнено(РеквизитТабличнойЧасти.Синоним), РеквизитТабличнойЧасти.Синоним, РеквизитТабличнойЧасти.Имя);
	//				
	//				НезаполненныеРеквизиты.Добавить(ИмяТабличнойЧасти + "." + ИмяРеквизита +
	//					"(Строка " + СтрокаТабличнойЧасти.НомерСтроки + ")");
	//				
	//			КонецЕсли;
	//			
	//		КонецЦикла;
	//		
	//	КонецЦикла;
	//	
	//КонецЦикла;
	
	Возврат НезаполненныеРеквизиты;
	
КонецФункции