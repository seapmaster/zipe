
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Для нового объекта выполняем код инициализации формы в ПриСозданииНаСервере.
	// Для существующего - в ПриЧтенииНаСервере.
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	АвторСтрокой = Строка(Объект.Автор);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЗаявок, "ПакетЗапросов", Объект.БизнесПроцесс.Предмет, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокФайлов, "СсылкаБизнесПроцесс", Объект.БизнесПроцесс, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ИзмененныеРеквизиты, "СсылкаБизнесПроцесс", Объект.БизнесПроцесс, Истина);
		
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОткрытьФормуЗадачиНажатие(Элемент)
	
	ПоказатьЗначение(,Объект.Ссылка);
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Объект.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИсполненияПриИзменении(Элемент)
	
	Если Объект.ДатаИсполнения = НачалоДня(Объект.ДатаИсполнения) Тогда
		Объект.ДатаИсполнения = КонецДня(Объект.ДатаИсполнения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполненаВыполнить(Команда)

	Если НЕ ПроверитьВыполнениеЗадачи() Тогда
		Возврат;
	КонецЕсли;
	
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект, Истина);

КонецПроцедуры

&НаКлиенте
Процедура Дополнительно(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОткрытьДопИнформациюОЗадаче(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	Если ЗначениеЗаполнено(Объект.БизнесПроцесс) Тогда
		ПараметрыФормы = БизнесПроцессыИЗадачиВызовСервера.ФормаВыполненияЗадачи(Объект.Ссылка);
		ЕстьФормаЗадачи = ПараметрыФормы.Свойство("ИмяФормы");
		Элементы.Выполнена.Доступность = НЕ ЕстьФормаЗадачи;
	КонецЕсли;
	НачальныйПризнакВыполнения = Объект.Выполнена;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
		Объект.СрокИсполнения = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Элементы.Предмет.Гиперссылка = Объект.Предмет <> Неопределено И НЕ Объект.Предмет.Пустая();
	ПредметСтрокой = ОбщегоНазначения.ПредметСтрокой(Объект.Предмет);	
	
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокНачалаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	Элементы.ДатаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтотОбъект, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		Элементы.Автор.Видимость = Ложь;
		Элементы.АвторСтрокой.Видимость = Истина;
		Элементы.Исполнитель.КнопкаОткрытия = Ложь;
	КонецЕсли;
	
	Элементы.Выполнена.Доступность = ПравоДоступа("Изменение", Метаданные.Задачи.ЗадачаИсполнителя);
	
	Если Объект.РольИсполнителя.Пустая() Тогда
		Элементы.РольИсполнителя.Видимость = Ложь;
		Элементы.Исполнитель.Видимость = Истина;
	Иначе
		Элементы.РольИсполнителя.Видимость = Истина;
		Элементы.Исполнитель.Видимость = Ложь;
	КонецЕсли;
	
	// + 27.02.2018 14:11:26 Базунов Д.А. Задача: 
	
	ТекТочкаМаршрута = Объект.ТочкаМаршрута;
	
	Если ТекТочкаМаршрута = БизнесПроцессы.УведомлениеОФормированииЗаявки.ТочкиМаршрута.ВСуществующийЗапросДобавленыНовыеФайлы Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаФайлы;
		Элементы.Описание.Видимость = Ложь;
	ИначеЕсли ТекТочкаМаршрута = БизнесПроцессы.УведомлениеОФормированииЗаявки.ТочкиМаршрута.ИзменениеЗаявки Тогда
		Элементы.СтраницаЗаявки.Видимость = Ложь;
		Элементы.СтраницаФайлы.Видимость = Ложь;
		Элементы.ИзменениеЗаявки.Видимость = Истина;
		Элементы.Описание.Видимость = Ложь;
	КонецЕсли; 
	
	Если БизнесПроцессыИЗадачиВызовСервера.ЭтоВедущаяЗадача(Объект.Ссылка) Тогда
		ТолькоПросмотр = Истина;
		Элементы.ЗаписатьИЗакрыть.Доступность  = Ложь;
	КонецЕсли; 
	
	Если ТолькоПросмотр Тогда
		Элементы.Выполнена.Доступность = Ложь;
	КонецЕсли; 
	
	// - 27.02.2018 14:11:26 Базунов Д.А. Задача:
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если СокрЛП(Объект.РезультатВыполнения) = "" Тогда
		Если Объект.ВыбранныйВариант = "" Тогда
			Объект.РезультатВыполнения = "Выполнена";
		Иначе
			Объект.РезультатВыполнения = СокрЛП(Объект.ВыбранныйВариант);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФайловВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПрисоединенныеФайлыКлиент.ОткрытьФайл(ПрисоединенныеФайлыКлиент.ПолучитьДанныеФайла(Элемент.ТекущиеДанные.СсылкаНаФайл), Ложь);
	
КонецПроцедуры

// + 27.02.2018 11:44:32 Базунов Д.А. Задача: 

&НаСервере
Процедура УстановитьЭтапЗаявок(ЗапросТКПRFP)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Заявка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Заявка КАК Заявка
	|ГДЕ
	|	Заявка.ЗапросТКПRFP = &ЗапросТКПRFP";
	
	Запрос.УстановитьПараметр("ЗапросТКПRFP", ЗапросТКПRFP);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Этап = Константы.ЭтапЗаявкиНазначениеРДВТС.Получить();
	
	Пока Выборка.Следующий() Цикл
		
		ОбщиеФункцииСервер.ДобавитьЭтапКЗаявке(Выборка.Ссылка, Этап, ТекущаяДата());
		
	КонецЦикла;  
	
КонецПроцедуры
 

&НаСервере
Функция ПроверитьВыполнениеЗадачи()
	
	Точки = БизнесПроцессы.УведомлениеОФормированииЗаявки.ТочкиМаршрута;
	
	Если Объект.ТочкаМаршрута = Точки.СформированаЗаявкаЗаказчиком Тогда
		
		Если Объект.Предмет.РуководительПроектаВТС.Пустая() Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Заявка.РуководительПроектаВТС КАК РуководительПроектаВТС
			|ИЗ
			|	Документ.Заявка КАК Заявка
			|ГДЕ
			|	Заявка.ЗапросТКПRFP = &ЗапросТКПRFP
			|	И Заявка.РуководительПроектаВТС = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
			Запрос.УстановитьПараметр("ЗапросТКПRFP", Объект.Предмет);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Сообщить("В заявках не указаны Руководители проекта ВТС!");
				Возврат Ложь;
			КонецЕсли; 
			
		КонецЕсли; 
		
		// Ставим этап к завкам Заявка утверждена заказчиком
		УстановитьЭтапЗаявок(Объект.Предмет);
		
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

// - 27.02.2018 11:44:32 Базунов Д.А. Задача:
#КонецОбласти



