
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Для нового объекта выполняем код инициализации формы в ПриСозданииНаСервере.
	// Для существующего - в ПриЧтенииНаСервере.
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	АвторСтрокой = Строка(Объект.Автор);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ТаблицаПредметовСнабжения, "Ссылка", Объект.БизнесПроцесс, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОткрытьФормуЗадачиНажатие(Элемент)
	
	ПоказатьЗначение(,Объект.Ссылка);
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Объект.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИсполненияПриИзменении(Элемент)
	
	Если Объект.ДатаИсполнения = НачалоДня(Объект.ДатаИсполнения) Тогда
		Объект.ДатаИсполнения = КонецДня(Объект.ДатаИсполнения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ЭтоТочкаМарштрутаОжиданиеПолученияОтвета()
	
	Возврат Объект.ТочкаМаршрута = БизнесПроцессы.ВзаимодействиеСРОЭ.ТочкиМаршрута.ОжиданиеПолученияОтвета;
	
КонецФункции

&НаКлиенте
Процедура ВыполненаВыполнить(Команда)

	Объект.ВариантВыбораДляЗагрузки = 1;

	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект, Истина);

КонецПроцедуры

&НаКлиенте
Процедура Дополнительно(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОткрытьДопИнформациюОЗадаче(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область CallBackМетоды

&НаКлиенте
Процедура ПослеПомещенияФайлаНаСервер(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если Результат = Неопределено Тогда
	
	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("Расширение", Результат.СсылкаНаФайл.Расширение);
	
	ЛистЭксель = РаботаСФайламиOffice.ПрочитатьФайлВТабличныйДокумент(Результат.Адрес, ПараметрыФайла);
	Если ЛистЭксель = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если ТабличныйДокуммент = Неопределено Тогда
	
	Для сч = 2 По ЛистЭксель.ВысотаТаблицы Цикл // Самую первую пропускаем
		
		Если СокрЛП(ЛистЭксель.Область(сч,  1).Текст) = "" Тогда
			Продолжить;
		КонецЕсли; 
		
		НовСтр = ТаблицаЗагрузки.Добавить();
		
		НовСтр.NSN 					= СокрЛП(ЛистЭксель.Область(сч,  1).Текст);
		НовСтр.RN 					= СокрЛП(ЛистЭксель.Область(сч,  2).Текст);
		НовСтр.RN_TRANSLIT 			= СокрЛП(ЛистЭксель.Область(сч,  3).Текст);
		НовСтр.ORIG_NAME_RU 		= СокрЛП(ЛистЭксель.Область(сч,  4).Текст);
		НовСтр.ORIG_NAME_ENG 		= СокрЛП(ЛистЭксель.Область(сч,  5).Текст);
		НовСтр.ORIG_NAME_TRANSLIT 	= СокрЛП(ЛистЭксель.Область(сч,  6).Текст);
		НовСтр.INC					= СокрЛП(ЛистЭксель.Область(сч,  7).Текст);
		НовСтр.NAME_EN				= СокрЛП(ЛистЭксель.Область(сч,  8).Текст);
		НовСтр.NAME_RU 				= СокрЛП(ЛистЭксель.Область(сч,  9).Текст);
		НовСтр.NSG 					= СокрЛП(ЛистЭксель.Область(сч, 10).Текст);
		НовСтр.NSC 					= СокрЛП(ЛистЭксель.Область(сч, 11).Текст);
		НовСтр.NCAGE 				= СокрЛП(ЛистЭксель.Область(сч, 12).Текст);
		НовСтр.CODIFIED_BY 			= СокрЛП(ЛистЭксель.Область(сч, 13).Текст);
		НовСтр.NAME_ORG 			= СокрЛП(ЛистЭксель.Область(сч, 14).Текст);
		НовСтр.NAME_ORG_TRANSLIT 	= СокрЛП(ЛистЭксель.Область(сч, 15).Текст);
		НовСтр.CIN 					= СокрЛП(ЛистЭксель.Область(сч, 16).Текст);
		НовСтр.DATE_CREA 			= СокрЛП(ЛистЭксель.Область(сч, 17).Текст);
		НовСтр.DATE_ASSI 			= СокрЛП(ЛистЭксель.Область(сч, 18).Текст);
		НовСтр.DATE_CANC 			= СокрЛП(ЛистЭксель.Область(сч, 19).Текст);
		НовСтр.TIIC 				= СокрЛП(ЛистЭксель.Область(сч, 20).Текст);
		НовСтр.RPDMRC 				= СокрЛП(ЛистЭксель.Область(сч, 21).Текст);
		НовСтр.KIDN 				= СокрЛП(ЛистЭксель.Область(сч, 22).Текст);
		НовСтр.RNCC 				= СокрЛП(ЛистЭксель.Область(сч, 23).Текст);
		НовСтр.RNVC 				= СокрЛП(ЛистЭксель.Область(сч, 24).Текст);
		НовСтр.DAC 					= СокрЛП(ЛистЭксель.Область(сч, 25).Текст);
		НовСтр.RNJC 				= СокрЛП(ЛистЭксель.Область(сч, 26).Текст);
		НовСтр.RNSC 				= СокрЛП(ЛистЭксель.Область(сч, 27).Текст);
		НовСтр.RNFC 				= СокрЛП(ЛистЭксель.Область(сч, 28).Текст);
		НовСтр.RNAAC 				= СокрЛП(ЛистЭксель.Область(сч, 29).Текст);
		НовСтр.N_STROKI 			= СокрЛП(ЛистЭксель.Область(сч, 30).Текст);
		
		Состояние("Идет загрузка", сч-1, "Загрузка из файла");
		
	КонецЦикла;
	
	Результат = ОбновитьДанныеБизнецПроцесса();
	
	Если Результат.Выполнено Тогда
		ИмяФайла = Результат.СсылкаНаФайл.Файл.ПолноеИмя;
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла));
		ДобавитьФайлВПрисоединенныеФайлы(ИмяФайла, АдресВоВременномХранилище);
	Иначе
		Объект.РезультатВыполнения = Объект.РезультатВыполнения + Символы.ПС + Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy") + " Ошибка: " + Результат.Описание;
	КонецЕсли; // Если Результат.Выполнено Тогда
	
	Элементы.ТаблицаПредметовСнабжения.Обновить();
	
КонецПроцедуры // ПослеПомещенияФайлаНаСервер

#КонецОбласти

&НаСервере
Функция ОбновитьДанныеБизнецПроцесса()
	
	Результат = Новый Структура("Выполнено, Описание", Истина, "");
	
	БизнесПроцессОбъект = Объект.БизнесПроцесс.ПолучитьОбъект();
	
	ТаблЧасть = БизнесПроцессОбъект.ПредметыСнабжения;
	
	Для каждого Стр Из ТаблицаЗагрузки Цикл
		
		Если СокрЛП(Стр.N_STROKI) = "" Тогда
			ТекСтрока = Неопределено;
		Иначе
			ТекСтрока = ТаблЧасть.Найти(Число(Стр.N_STROKI), "НомерСтроки");
		КонецЕсли; 
		
		Если НЕ ТекСтрока = Неопределено Тогда
			
			ЗаполнитьЗначенияСвойств(ТекСтрока, Стр);
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Попытка
		БизнесПроцессОбъект.Записать();
		Результат.Выполнено = Истина;
	Исключение
	    ОписаниеОшибки = ОписаниеОшибки();
		Результат.Выполнено = Ложь;
		Результат.Описание = ОписаниеОшибки;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции
 
&НаКлиенте
Функция ЗагрузитьФайлИОбновитьТЧ()
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Заголовок = "Выберите файл";
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Фильтр = "Табличный документ(*.xls);Табличный документ(*.xlsx)|*.xls;*.xlsx"; 
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ПослеПомещенияФайлаНаСервер", ЭтаФорма);
	
	НачатьПомещениеФайлаНаСервер(ОповещениеЗавершения,,,, ПараметрыДиалога, ЭтаФорма.УникальныйИдентификатор);
		
КонецФункции // ЗагрузитьФайлИОбновитьТЧ

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьФайлВПрисоединенныеФайлы(ПутьКФайлу, АдресВоВременномХранилище)
	
	ПолныйФайл= ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПутьКФайлу);
	ИмяБезРасширения   = ПолныйФайл.ИмяБезРасширения;
	РасширениеБезТочки = СтрЗаменить(ПолныйФайл.Расширение, ".", "");
	
	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("ВладелецФайлов",              Объект.БизнесПроцесс);
	ПараметрыФайла.Вставить("Автор",                       ПараметрыСеанса.ТекущийПользователь);
	ПараметрыФайла.Вставить("ИмяБезРасширения",            ИмяБезРасширения);
	ПараметрыФайла.Вставить("РасширениеБезТочки",          РасширениеБезТочки);
	ПараметрыФайла.Вставить("ВремяИзменения",              Неопределено);
	ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", Неопределено);
	
	ПрисоединенныеФайлы.ДобавитьПрисоединенныйФайл(ПараметрыФайла, АдресВоВременномХранилище, "", "");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияФормы()
	
	Если ЗначениеЗаполнено(Объект.БизнесПроцесс) Тогда
		ПараметрыФормы = БизнесПроцессыИЗадачиВызовСервера.ФормаВыполненияЗадачи(Объект.Ссылка);
		ЕстьФормаЗадачи = ПараметрыФормы.Свойство("ИмяФормы");
		//Элементы.ГруппаФормаВыполнения.Видимость = ЕстьФормаЗадачи;
		Элементы.Выполнена.Доступность = НЕ ЕстьФормаЗадачи;
	//Иначе
	//	Элементы.ГруппаФормаВыполнения.Видимость = Ложь;
	КонецЕсли;
	НачальныйПризнакВыполнения = Объект.Выполнена;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
		Объект.СрокИсполнения = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Элементы.Предмет.Гиперссылка = Объект.Предмет <> Неопределено И НЕ Объект.Предмет.Пустая();
	ПредметСтрокой = ОбщегоНазначения.ПредметСтрокой(Объект.Предмет);	
	
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокНачалаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	Элементы.ДатаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтотОбъект, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		Элементы.Автор.Видимость = Ложь;
		Элементы.АвторСтрокой.Видимость = Истина;
		Элементы.Исполнитель.КнопкаОткрытия = Ложь;
	КонецЕсли;
	
	Элементы.Выполнена.Доступность = ПравоДоступа("Изменение", Метаданные.Задачи.ЗадачаИсполнителя);
	
	// + 16.01.2018 10:58:37 Базунов Д.А. Задача: 

	Если НЕ Объект.Описание = "" Тогда
		Элементы.Описание.Видимость = Истина;
	Иначе
		Элементы.Описание.Видимость = Ложь;
	КонецЕсли; 
	
	Если Объект.РольИсполнителя.Пустая() Тогда
		Элементы.РольИсполнителя.Видимость = Ложь;
		Элементы.Исполнитель.Видимость = Истина;
	Иначе
		Элементы.РольИсполнителя.Видимость = Истина;
		Элементы.Исполнитель.Видимость = Ложь;
	КонецЕсли;
	
	ТочкиМаршрута = БизнесПроцессы.ВзаимодействиеСРОЭ.ТочкиМаршрута;
	
	Если Объект.ТочкаМаршрута = ТочкиМаршрута.ОжиданиеПолученияОтвета Тогда
		Элементы.ТаблицаПредметовСнабжения.ТолькоПросмотр = Истина;
		Элементы.ГруппаВариантыВыбора.Видимость = Истина;
		Элементы.Отклонить.Видимость = Истина;
	ИначеЕсли Объект.ТочкаМаршрута = ТочкиМаршрута.ОбновлениеДанныхВКаталогеПС Тогда
		ТолькоПросмотр = Истина;
		Элементы.ГруппаВариантыВыбора.Видимость = Ложь;
	КонецЕсли; 
	
	Если Объект.Выполнена Тогда
		Элементы.Выполнена.Доступность = Ложь;
		Элементы.ДатаИсполнения.Доступность = Ложь;
		Элементы.ДатаИсполненияВремя.Доступность = Ложь;
		Элементы.ГруппаВариантыВыбора.Доступность = Ложь;
		Элементы.Отклонить.Доступность = Ложь;
	КонецЕсли;
	
	// - 16.01.2018 10:58:37 Базунов Д.А. Задача: 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредметовСнабженияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(, Элемент.ТекущиеДанные.ПредметСнабжения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если СокрЛП(Объект.РезультатВыполнения) = "" Тогда
		Если Объект.ВыбранныйВариант = "" Тогда
			Объект.РезультатВыполнения = "Выполнена";
		Иначе
			Объект.РезультатВыполнения = СокрЛП(Объект.ВыбранныйВариант);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	ЗагрузитьФайлИОбновитьТЧ();
КонецПроцедуры // ЗагрузитьИзФайла

&НаКлиенте
Процедура Отклонить(Команда)
	
	Объект.ВариантВыбораДляЗагрузки = 2;
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект, Истина);	
	
КонецПроцедуры

#КонецОбласти
