/////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПослеПодтвержденияОрганизации(Результат, ДополнительныеПараметры) Экспорт
	Если Не Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли; // Если Не Результат = КодВозвратаДиалога.ОК Тогда
	
	Если Не ДополнительныеПараметры.Свойство("Организация") Тогда
		Возврат;
	КонецЕсли; // Если Не ДополнительныеПараметры.Свойство("Организация") Тогда
	
	Если ДополнительныеПараметры.Свойство("ВыделенныеСтроки") Тогда
		Для Каждого Идентификатор Из ДополнительныеПараметры.ВыделенныеСтроки Цикл
			Строка = ПредметыСнабжения.НайтиПоИдентификатору(Идентификатор);
			Если Не Строка = Неопределено Тогда
				Строка.Организация = ДополнительныеПараметры.Организация;
			КонецЕсли; // Если Не Строка = Неопределено Тогда			
		КонецЦикла; // Для Каждого Идентификатор Из ДополнительныеПараметры.ВыделенныеСтроки Цикл		
	Иначе
		Для Каждого Строка Из ПредметыСнабжения Цикл
			Строка.Организация = ДополнительныеПараметры.Организация;
		КонецЦикла; // Для Каждого Строка Из ПредметыСнабжения Цикл		
	КонецЕсли; // Если ДополнительныеПараметры.Свойство("ВыделенныеСтроки") Тогда
	
	Модифицированность = Истина;
КонецПроцедуры // ПослеПодтвержденияОрганизации

&НаКлиенте
Процедура ПослеПодтвержденияРаспределения(Результат, ДополнительныеПараметры) Экспорт
	Если Не Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли; // Если Не Результат = КодВозвратаДиалога.ОК Тогда

	РаспределитьПоИсполнителям();
	Модифицированность = Истина;
КонецПроцедуры // ПослеПодтвержденияРаспределения

&НаСервере
Процедура РаспределитьПоИсполнителям()
	БизнесПроцесс = Объект.БизнесПроцесс.ПолучитьОбъект();
	БизнесПроцесс.РаспределитьПоИсполнителям();
	БизнесПроцесс.Записать();
	ПредметыСнабжения.Загрузить(Объект.БизнесПроцесс.ПредметыСнабжения.Выгрузить());
КонецПроцедуры // РаспределитьПоИсполнителям

&НаСервере
Функция ПолучитьСписокОрганизаций()
	Результат 	= Новый СписокЗначений;
	Проекты 	= Документы.ЗаявкаФСВТС.ПолучитьПроекты(Объект.Предмет);
	Результат.ЗагрузитьЗначения(РегистрыСведений.ИсполнителиПоПроектам.ПолучитьИсполнителей(Проекты));
	Результат.Добавить(Константы.ОсновнаяОрганизация.Получить());
	Возврат Результат;
КонецФункции // ПолучитьСписокОрганизаций

/////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура КомандаУстановитьДляВсех(Команда)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена организация!",,,"Организация");
		Возврат;
	КонецЕсли; // Если Не ЗначениеЗаполнено(Организация) Тогда
	
	ДополнительныеПараметры = Новый Структура("Организация", Организация);
	ОписаниеОповещения 		= Новый ОписаниеОповещения("ПослеПодтвержденияОрганизации", ЭтаФорма, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, 
					"Установить выбранную организацию для всех строк?",
					РежимДиалогаВопрос.ОКОтмена,
					30, 
					КодВозвратаДиалога.Отмена, 
					"Внимание", 
					КодВозвратаДиалога.Отмена);
КонецПроцедуры // КомандаУстановитьДляВсех

&НаКлиенте
Процедура КомандаУстановитьДляВыбранных(Команда)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена организация!",,,"Организация");
		Возврат;
	КонецЕсли; // Если Не ЗначениеЗаполнено(Организация) Тогда
	
	ВыделенныеСтроки = Элементы.ПредметыСнабжения.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрано ни одной строки!",,,"ПредметыСнабжения");
		Возврат;
	КонецЕсли; // Если ВыделенныеСтроки.Количество() = 0 Тогда
	
	ДополнительныеПараметры = Новый Структура("Организация, ВыделенныеСтроки", Организация, ВыделенныеСтроки);
	ОписаниеОповещения 		= Новый ОписаниеОповещения("ПослеПодтвержденияОрганизации", ЭтаФорма, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, 
					"Установить выбранную организацию для выбранных строк?",
					РежимДиалогаВопрос.ОКОтмена,
					30, 
					КодВозвратаДиалога.Отмена, 
					"Внимание", 
					КодВозвратаДиалога.Отмена);
КонецПроцедуры // КомандаУстановитьДляВыбранных

&НаКлиенте
Процедура КомандаПоказатьВложения(Команда)
	ПараметрыФормы 	= Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла", 	Объект.Предмет);	
	ПараметрыФормы.Вставить("ТолькоПросмотр", 	Истина);	
	ОткрытьФорму("ОбщаяФорма.ПрисоединенныеФайлы", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры // КомандаПоказатьВложения

&НаКлиенте
Процедура КомандаРаспределить(Команда)
	ОписаниеОповещения 		= Новый ОписаниеОповещения("ПослеПодтвержденияРаспределения", ЭтаФорма);
	ПоказатьВопрос(ОписаниеОповещения, 
					"Автоматическое распределение заменит установленные ранее организации. Продолжить?",
					РежимДиалогаВопрос.ОКОтмена,
					30, 
					КодВозвратаДиалога.Отмена, 
					"Внимание", 
					КодВозвратаДиалога.Отмена);
КонецПроцедуры // КомандаРаспределить

/////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПредметыСнабжения.Загрузить(Объект.БизнесПроцесс.ПредметыСнабжения.Выгрузить());
	Элементы.КомандаПоказатьВложения.Заголовок 	= Справочники.ЗаявкаФСВТСПрисоединенныеФайлы.ПолучитьКоличество(Объект.Предмет);
КонецПроцедуры // ПриСозданииНаСервере

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	БизнесПроцесс 			= ТекущийОбъект.БизнесПроцесс.ПолучитьОбъект();
	БизнесПроцесс.ПредметыСнабжения.Загрузить(ПредметыСнабжения.Выгрузить());
	БизнесПроцесс.Записать();
КонецПроцедуры // ПриЗаписиНаСервере

&НаКлиенте       	
Процедура ПередВыполнением(Отказ)
	Если Модифицированность Тогда
		Попытка
			Записать();
			Модифицированность = Ложь;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать задачу: " + ОписаниеОшибки(),,,,Отказ);
		КонецПопытки;		
	КонецЕсли; // Если Модифицированность Тогда
КонецПроцедуры // ПередВыполнением

&НаКлиенте
Процедура ПредметыСнабженияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры // ПредметыСнабженияПередНачаломДобавления

&НаКлиенте
Процедура ПредметыСнабженияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры // ПредметыСнабженияПередУдалением

&НаКлиенте
Процедура ПредметыСнабженияПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры // ПредметыСнабженияПриИзменении

&НаКлиенте
Процедура ОрганизацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда
		СписокВыбора 				= ПолучитьСписокОрганизаций();
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка 	= Ложь;
			ДанныеВыбора 			= СписокВыбора;		
		КонецЕсли; // Если СписокВыбора.Количество() > 0 Тогда
	КонецЕсли; // Если Ожидание = 0 Тогда 	              
КонецПроцедуры // ОрганизацияАвтоПодбор








