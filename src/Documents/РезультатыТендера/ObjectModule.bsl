//////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ЕстьДублиЦен()
	Результат 				= Ложь;
	ДублиПредметовСнабжения = Новый Соответствие;
	
	ТаблицаПроверкиЦен 		= Цены.Выгрузить();
	ТаблицаПроверкиЦен.Колонки.Добавить("КоличествоПоставщиков");
	ТаблицаПроверкиЦен.ЗаполнитьЗначения(1, "КоличествоПоставщиков");
	ТаблицаПроверкиЦен.Свернуть("ПредметСнабжения,Поставщик,Количество", "КоличествоПоставщиков");
	
	Для Каждого СтрокаТаблицы Из ТаблицаПроверкиЦен Цикл
		Если СтрокаТаблицы.КоличествоПоставщиков > 1 Тогда
			ДублиПредметовСнабжения.Вставить(СтрокаТаблицы.ПредметСнабжения);
		КонецЕсли; // Если СтрокаТаблицы.Количество > 1 Тогда		
	КонецЦикла; // Для Каждого СтрокаТаблицы Из ТаблицаПроверкиЦен Цикл	
	
	Для Каждого Дубль Из ДублиПредметовСнабжения Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Предмет снабжения [" + Дубль.Ключ + "] дублируется!");
		Результат 			= Истина;
	КонецЦикла; // Для Каждого Дубль Из ДублиПредметовСнабжения Цикл	
	
	Возврат Результат;
КонецФункции // ПроверкаДублейЦен

Функция ЕстьОшибки()
	Результат = Ложь;
	
	// Валюта
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана валюта!", ЭтотОбъект, "Валюта");
		Результат = Истина;
	КонецЕсли; // Если Не ЗначениеЗаполнено(Валюта) Тогда	
	
	// Проверка заполнения в табличной части "Цены"
	Для Каждого СтрокаТаблицы Из Цены Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПредметСнабжения) Тогда
			Результат = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Есть строки с незаполненными предметами снабжения!");
			Возврат Результат;
		КонецЕсли; // Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПредметСнабжения) Тогда
		
	КонецЦикла; // Для Каждого СтрокаТаблицы Из Цены Цикл
	
	
	// Проверка на дубли в табличной части "Цены"
	Если ЕстьДублиЦен() Тогда
		Результат = Истина;
	КонецЕсли; // Если ЕстьДублиЦен() Тогда	
	
	Возврат Результат;
КонецФункции // ЕстьОшибки

//////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	                                          
	Если ЕстьОшибки() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли; // Если ЕстьОшибки() Тогда
	
	// РС Цены
	ТаблицаДвижений = Документы.РезультатыТендера.ПолучитьТаблицуДвиженийЦены(Ссылка);
	Движения.Цены.Загрузить(ТаблицаДвижений);
КонецПроцедуры // ОбработкаПроведения