
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПредметСнабжения", ПредметСнабжения);
	
	СформироватьСписокИзделий();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокИзделий()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка КАК Ссылка,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Тип КАК Тип,
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ЗИП КАК ЗИП
	|ИЗ
	|	Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	|ГДЕ
	|	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПредметСнабжения = &ПредметСнабжения";
	
	Запрос.УстановитьПараметр("ПредметСнабжения", ПредметСнабжения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	МассивЭлементовСтруктуры = Новый Массив;
	
	Выборка = РезультатЗапроса.Выбрать();	
	
	Пока Выборка.Следующий() Цикл
	
		НужныйЭлементСтруктуры = Выборка.Ссылка;
		
		Если Не НужныйЭлементСтруктуры = Неопределено И МассивЭлементовСтруктуры.Найти(НужныйЭлементСтруктуры) = Неопределено Тогда
		
			МассивЭлементовСтруктуры.Добавить(НужныйЭлементСтруктуры);	
		
		КонецЕсли;
	
	КонецЦикла;
	
	Если МассивЭлементовСтруктуры.Количество() = 0 Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка КАК Изделие,
	               |	ПроектыКораблей.Наименование КАК НаименованиеПроекта,
	               |	ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ОписаниеИерархии КАК ОписаниеИерархии,
	               |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Наименование КАК НаименованиеИзделия,
	               |	Заказы.Наименование КАК НаименованиеЗаказа
	               |ИЗ
	               |	РегистрСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП КАК ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураЗаказаПоКомплектующимИзделиямИЗИП КАК СтруктураЗаказаПоКомплектующимИзделиямИЗИП
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Заказы КАК Заказы
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПроектыКораблей КАК ПроектыКораблей
	               |				ПО Заказы.Владелец = ПроектыКораблей.Ссылка
	               |			ПО СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Владелец = Заказы.Ссылка
	               |		ПО ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ЭлементСтруктуры = СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка
	               |ГДЕ
	               |	СтруктураЗаказаПоКомплектующимИзделиямИЗИП.Ссылка В(&МассивЭлементовСтруктуры)";
	
	Запрос.УстановитьПараметр("МассивЭлементовСтруктуры", МассивЭлементовСтруктуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		НоваяСтрока = Изделия.Добавить();
		НоваяСтрока.Изделие = Выборка.Изделие;
		НоваяСтрока.Описание = Выборка.НаименованиеПроекта + "/" + Выборка.НаименованиеЗаказа + "/" + Выборка.ОписаниеИерархии;
	
	КонецЦикла;

	Изделия.Сортировать("Описание");
КонецПроцедуры // СформироватьСписокИзделий()

&НаСервереБезКонтекста
Функция НайтиНужныйЭлементСтруктуры(Знач ЭлементСтруктуры)
	
	Пока Истина Цикл
	
		ЭлементСтруктуры = ЭлементСтруктуры.Родитель;
		
		Если Не ЗначениеЗаполнено(ЭлементСтруктуры) Тогда
		
			Возврат Неопределено;	
		
		КонецЕсли;
		
		Если Не ЭлементСтруктуры.ЗИП Тогда
		
			Возврат ЭлементСтруктуры;	
		
		КонецЕсли;

	КонецЦикла;

КонецФункции // НайтиНужныйЭлементСтруктуры()

&НаКлиенте
Процедура ИзделияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Закрыть(Новый Структура("Изделие, Описание", ТекДанные.Изделие, ТекДанные.Описание));
	
КонецПроцедуры

