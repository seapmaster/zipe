
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриЗаписи(Отказ)
	
	РезультатЗаписиИсполнителейДЗО = ЗаписатьИсполнителейДЗО();
	
	Если Не ЗначениеЗаполнено(Корабли) И Проекты.Количество() > 0 Тогда
		
		Корабли = СтрСоединить(Проекты.ВыгрузитьКолонку("Корабль"), ", "); //для вывода в динамические списки и отчеты
		
	КонецЕсли;
	
КонецПроцедуры	//ПриЗаписи

Процедура ПередУдалением(Отказ)
	
	НаборЗаписей = РегистрыСведений.ИсполнителиДЗОЗаявок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Заявка.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;	
	
КонецПроцедуры	//ПередУдалением

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// ++ 19.07.2018 10:51:51 Базунов Д.А. Задача: 
	// Для РДВТС убираем проверку реквизитов в ТЧ спецификация
	//Если РольДоступна("РуководительДепартаментаВТС") ИЛИ РольДоступна("РуководительПроектаДепартаментаВТС") Тогда
	//	
	//	МассивУдаляемых = Новый Массив;
	//	
	//	Для каждого ТекРеквизит Из ПроверяемыеРеквизиты Цикл
	//		
	//		Если СтрНайти(ТекРеквизит, "Спецификация") > 0 Тогда
	//			МассивУдаляемых.Добавить(ТекРеквизит);
	//		КонецЕсли;
	//		
	//	КонецЦикла; 
	//	
	//	Для каждого УдаляемыйРеквизит Из МассивУдаляемых Цикл
	//		
	//		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти(УдаляемыйРеквизит));
	//		
	//	КонецЦикла; 
	//	
	//КонецЕсли; 
	// -- 19.07.2018 10:51:51 Базунов Д.А. Задача:
	
КонецПроцедуры //ОбработкаПроверкиЗаполнения

Функция ЗаписатьИсполнителейДЗО()
	
	Результат = Новый Структура("Выполнено, Описание", Ложь, "");
	
	Если Спецификация.Количество() = 0 Тогда
		
		Результат.Выполнено = Истина;
		Возврат Результат;
		
	КонецЕсли;
	
	ТЗИсполнителиДЗО = Новый ТаблицаЗначений;
	ТЗИсполнителиДЗО.Колонки.Добавить("Заявка", Новый ОписаниеТипов("ДокументСсылка.Заявка"));
	ТЗИсполнителиДЗО.Колонки.Добавить("ИсполнительДЗО", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Для каждого Строка Из Спецификация Цикл
		
		Если ЗначениеЗаполнено(Строка.ИсполнительДЗО) И ТЗИсполнителиДЗО.Найти(Строка.ИсполнительДЗО, "ИсполнительДЗО") = Неопределено Тогда
			
			НоваяСтрока = ТЗИсполнителиДЗО.Добавить();
			НоваяСтрока.Заявка = Ссылка;
			НоваяСтрока.ИсполнительДЗО = Строка.ИсполнительДЗО;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Если ТЗИсполнителиДЗО.Количество() = 0 Тогда
		
		Результат.Выполнено = Истина;
		Возврат Результат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗИсполнителиДЗО.Заявка,
	|	ТЗИсполнителиДЗО.ИсполнительДЗО
	|ПОМЕСТИТЬ ВТ_ИсполнителиДЗО
	|ИЗ
	|	&ТЗИсполнителиДЗО КАК ТЗИсполнителиДЗО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсполнителиДЗО.ИсполнительДЗО КАК ИсполнительДЗОЗаявки,
	|	ИсполнителиДЗОЗаявок.ИсполнительДЗО КАК ИсполнительДЗОРегистра
	|ИЗ
	|	ВТ_ИсполнителиДЗО КАК ВТ_ИсполнителиДЗО
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиДЗОЗаявок КАК ИсполнителиДЗОЗаявок
	|		ПО ВТ_ИсполнителиДЗО.Заявка = ИсполнителиДЗОЗаявок.Заявка
	|			И ВТ_ИсполнителиДЗО.ИсполнительДЗО = ИсполнителиДЗОЗаявок.ИсполнительДЗО
	|ГДЕ
	|	(ВТ_ИсполнителиДЗО.ИсполнительДЗО ЕСТЬ NULL 
	|			ИЛИ ИсполнителиДЗОЗаявок.ИсполнительДЗО ЕСТЬ NULL )";
	
	Запрос.УстановитьПараметр("ТЗИсполнителиДЗО", ТЗИсполнителиДЗО);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Результат.Выполнено = Истина;
		Возврат Результат;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ИсполнителиДЗОЗаявок.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Заявка.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	ЕстьЗаписи = НаборЗаписей.Количество() > 0;
	
	Если ЕстьЗаписи Тогда
		
		НаборЗаписей.Очистить();	
		
	КонецЕсли;
	
	НаборЗаписей.Загрузить(ТЗИсполнителиДЗО);
	
	Попытка
		
		НаборЗаписей.Записать(ЕстьЗаписи);	
		
	Исключение
		
		Результат.Описание = ОписаниеОшибки();
		Возврат Результат;
		
	КонецПопытки;
	
	Результат.Выполнено = Истина;
	Возврат Результат;
	
КонецФункции	//ЗаписатьИсполнителейДЗО
