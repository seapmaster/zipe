
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтборЗаявки = Заявки.Отбор;
	ОтборЗаявки.Элементы.Очистить();
	
	ЭлементОтбораЗаявки = ОтборЗаявки.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораЗаявки.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЗапросТКПRFP");
	ЭлементОтбораЗаявки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораЗаявки.ПравоеЗначение = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Ссылка, Неопределено);
	
	КоличествоЗаявок = ?(ЗначениеЗаполнено(Объект.Ссылка), РассчитатьКоличествоЗаявок(Объект.Ссылка), 0);
	
	Флот = Объект.Заказчик.ВМС;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиПриИзменении(Элемент)
	
	КоличествоЗаявок = ?(ЗначениеЗаполнено(Объект.Ссылка), РассчитатьКоличествоЗаявок(Объект.Ссылка), 0);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РассчитатьКоличествоЗаявок(ЗапросТКПRFP)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заявка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.Заявка КАК Заявка
	|ГДЕ
	|	Заявка.ЗапросТКПRFP = &ЗапросТКПRFP
	|	И НЕ Заявка.ПометкаУдаления";
	Запрос.УстановитьПараметр("ЗапросТКПRFP", ЗапросТКПRFP);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать().Количество();
	
КонецФункции

&НаКлиенте
Процедура ЗаявкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПоказатьПредупреждение(, "Сначала нужно записать документ!");
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокУсловийПоставки = ПолучитьСписокУсловийПоставки();		
	СписокУсловийПоставки.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("УсловияПоставкиВыбор", ЭтаФорма), "Выберите условия поставки:");
	
КонецПроцедуры

&НаКлиенте
Процедура УсловияПоставкиВыбор(Список, ДополнительныеПараметры) Экспорт
	
	Если Список = Неопределено Тогда
		
		Возврат;
		
	ИначеЕсли Список.Количество() = 0 Тогда
		
		Объект.УсловияПоставки = "";
		Возврат;
		
	КонецЕсли;
	
	МассивУсловийПоставки = Новый Массив;
	
	Для каждого ЭлементСписка Из Список Цикл
		
		Если ЭлементСписка.Пометка Тогда
			
			МассивУсловийПоставки.Добавить(ЭлементСписка.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.УсловияПоставки = СтрСоединить(МассивУсловийПоставки, ", ");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокУсловийПоставки()
	
	СписокУсловийПоставки = Новый СписокЗначений;

	Выборка = Справочники.Инкотермс2010.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		СписокУсловийПоставки.Добавить(Выборка.Код, Выборка.Код + " (" + Выборка.Наименование + ")");		
	
	КонецЦикла;
	
	Возврат СписокУсловийПоставки;	

КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.РуководительПроектаВТС) Тогда
		Объект.РуководительПроектаВТС = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОтборЗаявки = Заявки.Отбор;
	
	ЭлементОтбораЗаявки = ОтборЗаявки.Элементы[0];
	ЭлементОтбораЗаявки.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЗапросТКПRFP");
	ЭлементОтбораЗаявки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораЗаявки.ПравоеЗначение = Объект.Ссылка;
	
	Элементы.Заявки.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	
	ПриИзмененииЗаказчика();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииЗаказчика()
	
	Если Не Флот = Объект.Заказчик.ВМС Тогда
		
		Флот = Объект.Заказчик.ВМС;
		Объект.Грузополучатель = Справочники.ИностранныеЗаказчики.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

