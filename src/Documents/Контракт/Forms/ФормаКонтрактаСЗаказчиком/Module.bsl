
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//++ 11.04.2018 Веденеев П. //разделение формы документа
	Если Параметры.Свойство("ВидКонтракта") Тогда
		
		Объект.Вид = Параметры.ВидКонтракта;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Вид) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	//-- 11.04.2018 Веденеев П. //разделение формы документа
	
	ВидКонтрактСЗаказчиком 	= Перечисления.ВидыКонтрактов.КонтрактСЗаказчиком;
	ВидКонтрактСПоставщиком = Перечисления.ВидыКонтрактов.КонтрактСПоставщиком;
	
	ТКПСПоставщиком 	= Параметры.Свойство("ТКПСПоставщиком");
	ТКПСЗаказчиком 		= Параметры.Свойство("ТКПСЗаказчиком");
	КонтрактСЗаказчиком = Параметры.Свойство("КонтрактСЗаказчиком");
	
	Если ТКПСПоставщиком Или ТКПСЗаказчиком Или КонтрактСЗаказчиком Тогда
		
		Модифицированность = Истина;
		
		ДанныеПодбораЗаявок = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилища);
		
		УдалитьИзВременногоХранилища(Параметры.АдресВременногоХранилища);
		
		Если ДанныеПодбораЗаявок.Свойство("Валюта") Тогда
		
			Объект.Валюта = ДанныеПодбораЗаявок.Валюта;	
		
		ИначеЕсли ДанныеПодбораЗаявок.Свойство("МассивВалют") Тогда
		
			Если ДанныеПодбораЗаявок.МассивВалют.Количество() > 0 Тогда
			
				СообщениеВалюты = "В выбранных заявках установлены валюты: " + СтрСоединить(ДанныеПодбораЗаявок.МассивВалют, ", ") + ". Необходимо установить валюту контракта вручную.";	
			
			КонецЕсли;	
		
		КонецЕсли;
		
		Если ТКПСПоставщиком Тогда
		
			Объект.Тип = Перечисления.ТипыКонтрактов.КоммерческоеПредложение;
			Объект.Вид = ВидКонтрактСПоставщиком;
			Объект.Контрагент = ДанныеПодбораЗаявок.ИсполнительДЗО;
		
		ИначеЕсли ТКПСЗаказчиком Или КонтрактСЗаказчиком Тогда
		
			Объект.Тип = ?(КонтрактСЗаказчиком, Перечисления.ТипыКонтрактов.Контракт, Перечисления.ТипыКонтрактов.ТКП);
			Объект.Вид = ВидКонтрактСЗаказчиком;
			Объект.Контрагент = ДанныеПодбораЗаявок.Заказчик;
			
			ДанныеПодбораЗаявок.ТаблицаВыбранныхПозицийЗаявок.Колонки.Найти("ЦенаОСК").Имя = "Цена";
			
		КонецЕсли;
		
		Объект.ПредметыСнабжения.Загрузить(ДанныеПодбораЗаявок.ТаблицаВыбранныхПозицийЗаявок);
	
	КонецЕсли;
	
	// ++ 10.07.2018 11:13:07 Базунов Д.А. Задача: 
	Если ТКПСЗаказчиком И Объект.Тип = Перечисления.ТипыКонтрактов.ТКП Тогда
		Элементы.ОтветственноеЛицо.Заголовок = "Ответственное лицо ТКП";
	КонецЕсли; 
	// -- 10.07.2018 11:13:07 Базунов Д.А. Задача:
	
	Если Объект.Вид = ВидКонтрактСЗаказчиком Тогда
		
		Заказчик = Объект.Контрагент;	
		
	ИначеЕсли Объект.Вид = ВидКонтрактСПоставщиком Тогда
		
		Поставщик = Объект.Контрагент;			
		
	КонецЕсли;
	
	Если Параметры.Свойство("СсылкаПС") Тогда
		
		Найдено = Объект.ПредметыСнабжения.НайтиСтроки(Новый Структура("ПредметСнабжения", Параметры.СсылкаПС));
		
		Если Найдено.Количество() > 0 Тогда
			
			Элементы.ПредметыСнабжения.ТекущаяСтрока = Найдено[0].ПолучитьИдентификатор();
			
		КонецЕсли; 
		
		
	КонецЕсли; 
	
	// + 13.03.2018 13:55:50 Базунов Д.А. Задача: 
	Если НЕ ПравоДоступа("Изменение", Метаданные.Документы.Контракт) Тогда
		Элементы.Заказчик.Доступность = Ложь;
		Элементы.ПредметыСнабженияПодбор.Доступность = Ложь;
	КонецЕсли; 
	// - 13.03.2018 13:55:50 Базунов Д.А. Задача:
	
	УстановитьВидимостьКнопокПечати();
	
	//++ 27.03.2018 Веденеев П. //установка валюты по умолчанию
	УстановитьВалютуПоУмолчанию();
	//-- 27.03.2018 Веденеев П. //установка валюты по умолчанию
	
	//++ 06.04.2018 Веденеев П. //добавлен новый реквизит ТКП - ДатаЗаключенияКонтракта
	Элементы.ДатаЗаключенияКонтракта.Видимость = (Объект.Тип  = Перечисления.ТипыКонтрактов.ТКП 
		И Объект.Вид = Перечисления.ВидыКонтрактов.КонтрактСЗаказчиком);
	//-- 06.04.2018 Веденеев П. //добавлен новый реквизит ТКП - ДатаЗаключенияКонтракта
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Объект.ОтветственноеЛицо = Константы.ОтветственноеЛицоПоКонтрактам.Получить();
		
	КонецЕсли;
		
КонецПроцедуры

//++ 27.03.2018 Веденеев П. //установка валюты по умолчанию
&НаСервере
Процедура УстановитьВалютуПоУмолчанию()
	
	Если ЗначениеЗаполнено(Объект.Вид) Тогда
		
		Объект.Валюта = ?(Объект.Вид = Перечисления.ВидыКонтрактов.КонтрактСПоставщиком, Константы.ОсновнаяВалюта.Получить(), Константы.ДолларСША.Получить());
		
	Иначе
		
		Объект.Валюта = Справочники.ОКВ.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры	
//++ 27.03.2018 Веденеев П. //установка валюты по умолчанию

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьВидимостьЭлементов();
	
	ЗаполнитьСрокТоргов(); 
	
	СформироватьСписокВыбораТипа();
	
	Если ЗначениеЗаполнено(СообщениеВалюты) Тогда
	
		ПоказатьПредупреждение(, СообщениеВалюты,, "Необходимо заполнить валюту вручную");	
	
	КонецЕсли;
	
	УстановитьЗаголовкиЦенФСВТС();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	
	НастроитьВидимостьЭлементов();
	
	СформироватьСписокВыбораТипа();
	
	УстановитьВидимостьКнопокПечати();
	
	//++ 27.03.2018 Веденеев П. //установка валюты по умолчанию
	УстановитьВалютуПоУмолчанию();
	//-- 27.03.2018 Веденеев П. //установка валюты по умолчанию
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСписокВыбораТипа()

	Элементы.Тип.СписокВыбора.Очистить();
	
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.ВидыКонтрактов.ПустаяСсылка") Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	Элементы.Тип.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКонтрактов.Контракт"), "Контракт");
	Элементы.Тип.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКонтрактов.Договор"), "Договор");
	
	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.ВидыКонтрактов.КонтрактСЗаказчиком") Тогда
	
		Элементы.Тип.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКонтрактов.ТКП"), "ТКП");	
	
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.ВидыКонтрактов.КонтрактСПоставщиком") Тогда
	
		Элементы.Тип.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКонтрактов.КоммерческоеПредложение"), "Коммерческое предложение");
		
	КонецЕсли;	

КонецПроцедуры // СформироватьСписокВыбораТипа()

&НаКлиенте
Процедура НастроитьВидимостьЭлементов()

	Если Не ЗначениеЗаполнено(Объект.Вид) Тогда
	
		Элементы.Заказчик.Видимость 		= Ложь;
		Элементы.Поставщик.Видимость 		= Ложь;
		Элементы.ДатаНачалаТоргов.Видимость = Ложь;
		Элементы.СрокТоргов.Видимость 		= Ложь;
	
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.ВидыКонтрактов.КонтрактСЗаказчиком") Тогда
	
		Элементы.Заказчик.Видимость 		= Истина;
		Элементы.Поставщик.Видимость 		= Ложь;
		Элементы.ДатаНачалаТоргов.Видимость = Ложь;
		Элементы.СрокТоргов.Видимость 		= Ложь;
		
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.ВидыКонтрактов.КонтрактСПоставщиком") Тогда
	
		Элементы.Заказчик.Видимость 		= Ложь;
		Элементы.Поставщик.Видимость 		= Истина;
		Элементы.ДатаНачалаТоргов.Видимость = Истина;
		Элементы.СрокТоргов.Видимость 		= Истина;
	
	КонецЕсли;	
	
КонецПроцедуры // НастроитьВидимостьЭлементов()

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЗаполнитьСрокТоргов();
	
	УстановитьЗаголовкиЦенФСВТС();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаТорговПриИзменении(Элемент)
		
	ЗаполнитьСрокТоргов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСрокТоргов()

	Если ЗначениеЗаполнено(Объект.Дата) И ЗначениеЗаполнено(Объект.ДатаНачалаТоргов) Тогда
	
		СрокТоргов = Цел((Объект.ДатаНачалаТоргов - Объект.Дата) / 86400);
		
	Иначе
		
		СрокТоргов = 0;	
	
	КонецЕсли;	

КонецПроцедуры // ЗаполнитьСрокТоргов()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.Вид = Перечисления.ВидыКонтрактов.КонтрактСЗаказчиком Тогда
	
		ТекущийОбъект.Контрагент = Заказчик;	
	
	ИначеЕсли ТекущийОбъект.Вид = Перечисления.ВидыКонтрактов.КонтрактСПоставщиком Тогда
	
		ТекущийОбъект.Контрагент = Поставщик;		
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияПредметСнабженияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикВыбораПредметаСнабжения", ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВыборДляКонтракта");	
	
	Если ЗначениеЗаполнено(Поставщик) И Объект.Вид = ПредопределенноеЗначение("Перечисление.ВидыКонтрактов.КонтрактСПоставщиком") Тогда
	
		ПараметрыОткрытия.Вставить("Поставщик", Поставщик);	
	
	КонецЕсли;
	
	ОткрытьФорму("Справочник.КаталогПредметовСнабжения.Форма.ФормаВыбораРасширенная", ПараметрыОткрытия, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораПредметаСнабжения(ПредметСнабжения, ДопПараметры = Неопределено) Экспорт

	Если Не ЗначениеЗаполнено(ПредметСнабжения) Тогда
	
		Возврат;
	
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.ПредметыСнабжения.ТекущиеДанные;
	
	ТекущиеДанные.ПредметСнабжения = ПредметСнабжения;
	// ++ 06.07.2018 11:08:56 Базунов Д.А. Задача: 
	ТекущиеДанные.ЕдиницаИзмерения = ОбщиеФункцииСервер.ПолучитьЗначениеРеквизита(ПредметСнабжения, "ЕдиницаИзмерения");
	// -- 06.07.2018 11:08:56 Базунов Д.А. Задача:

КонецПроцедуры // ОбработчикВыбораПредметаСнабжения()

&НаКлиенте
Процедура Подбор(Команда)
    
    ПараметрыФормы = Новый Структура("РежимВыбора, ЗакрыватьприВыборе, МножественныйВыбор", Истина, Ложь, Ложь);
    Форма = ПолучитьФорму("Справочник.КаталогПредметовСнабжения.ФормаСписка", ПараметрыФормы,Элементы.ПредметыСнабжения);
    Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
    Форма.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    
    Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КаталогПредметовСнабжения") Тогда
        
    Строки = Объект.ПредметыСнабжения.НайтиСтроки(Новый Структура("ПредметСнабжения", ВыбранноеЗначение));
        Если Строки.Количество() = 0 Тогда
            НоваяСтрока = Объект.ПредметыСнабжения.Добавить();
            НоваяСтрока.ПредметСнабжения = ВыбранноеЗначение;
			Элементы.ПредметыСнабжения.ТекущаяСтрока = Объект.ПредметыСнабжения.Количество()-1;
			// ++ 06.07.2018 11:08:56 Базунов Д.А. Задача: 
			НоваяСтрока.ЕдиницаИзмерения = ОбщиеФункцииСервер.ПолучитьЗначениеРеквизита(ВыбранноеЗначение, "ЕдиницаИзмерения");
			// -- 06.07.2018 11:08:56 Базунов Д.А. Задача:
        КонецЕсли; 
            
    КонецЕсли;     
    
КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияЗаявкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияЗаявкаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПриИзменении(Элемент)
	
	УстановитьВидимостьКнопокПечати();
	
КонецПроцедуры

//++ 11.04.2018 Веденеев П. //добавление списков цен
&НаКлиенте
Процедура ПоказатьСкрытьВнутренниеЦены(Команда)
	
	Если Элементы.ГруппаВнутренниеЦены.Видимость Тогда
		
		Элементы.ГруппаВнутренниеЦены.Видимость = Ложь;
		Элементы.ПредметыСнабженияПоказатьСкрытьВнутренниеЦены.Пометка = Ложь;
		
	Иначе
		
		ОтобразитьЦены("ЦеныВнутренние");
		Элементы.ГруппаВнутренниеЦены.Видимость = Истина;
		Элементы.ПредметыСнабженияПоказатьСкрытьВнутренниеЦены.Пометка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьВнешниеЦены(Команда)
	
	Если Элементы.ГруппаВнешниеЦены.Видимость Тогда
		
		Элементы.ГруппаВнешниеЦены.Видимость = Ложь;
		Элементы.ПредметыСнабженияПоказатьСкрытьВнешниеЦены.Пометка = Ложь;
		
	Иначе
		
		ОтобразитьЦены("ЦеныВнешние");
		Элементы.ГруппаВнешниеЦены.Видимость = Истина;
		Элементы.ПредметыСнабженияПоказатьСкрытьВнешниеЦены.Пометка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияПриАктивизацииСтроки(Элемент)
	
	ПриВыбореПредметаСнабжения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияПредметСнабженияПриИзменении(Элемент)
	
	ПриВыбореПредметаСнабжения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыСнабженияПослеУдаления(Элемент)
	
	ПриВыбореПредметаСнабжения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореПредметаСнабжения()
	
	Если Элементы.ГруппаВнутренниеЦены.Видимость Тогда
		
		ОтобразитьЦены("ЦеныВнутренние");
		
	КонецЕсли;
	
	Если Элементы.ГруппаВнешниеЦены.Видимость Тогда
		
		ОтобразитьЦены("ЦеныВнешние");
		
	КонецЕсли;
	
	Если Элементы.ГруппаТендерныеЦены.Видимость Тогда
		
		ОтобразитьЦены("ЦеныТендерные");
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьЦены(ИмяСпискаЦен)
	
	ТекущиеДанные = Элементы.ПредметыСнабжения.ТекущиеДанные;
	ПредметСнабжения = ?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.ПредметСнабжения);
	
	ЭтаФорма[ИмяСпискаЦен].Параметры.УстановитьЗначениеПараметра("ПредметСнабжения", ПредметСнабжения);
	
КонецПроцедуры
//-- 11.04.2018 Веденеев П. //добавление списков цен

//++ 21.02.2018 Веденеев П.
#Область Печать

&НаКлиенте
Процедура ПечатьКоммерческоеПредложение(Команда)
	
	ПечатьОтчета("КоммерческоеПредложениеПоставщика", Новый Структура("КоммерческоеПредложение", Объект.Ссылка));
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТехникоКоммерческоеПредложение(Команда)
		
	ПечатьОтчета("ТехникоКоммерческоеПредложение", Новый Структура("КоммерческоеПредложение", Объект.Ссылка));
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчета(ИмяОтчета, Параметры)
	
	Если Не Объект.Проведен Или Модифицированность Тогда
		
		ПоказатьПредупреждение(, "Сначала проведите документ!");
		Возврат;
		
	КонецЕсли;
	
	Если Объект.ПредметыСнабжения.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(, "В документе нет ни одного предмета снабжения!");
		Возврат;
		
	КонецЕсли;
	
	РезультатОтчета = Новый ТабличныйДокумент;
	РезультатОтчета.ОтображатьЗаголовки = Ложь;
	РезультатОтчета.ОтображатьСетку = Ложь;
	
	ВывестиОтчет(РезультатОтчета, ИмяОтчета, Параметры);
	
	РезультатОтчета.Показать();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиОтчет(ТабличныйДокумент, ИмяОтчета, Параметры)
	
	ОтчетОбъект = Отчеты[ИмяОтчета].Создать();
	
	ПараметрыОтчета = ОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;
	
	Для каждого Параметр Из Параметры Цикл
		
		ПараметрОтчета = ПараметрыОтчета.Найти(Параметр.Ключ);
		
		Если Не ПараметрОтчета = Неопределено Тогда
			
			ПараметрОтчета.Использование = Истина;
			ПараметрОтчета.Значение = Параметр.Значение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОтчетОбъект.СкомпоноватьРезультат(ТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопокПечати()
	
	Элементы.ФормаПечатьКоммерческоеПредложение.Видимость = (Объект.Тип  = Перечисления.ТипыКонтрактов.КоммерческоеПредложение 
		И Объект.Вид = Перечисления.ВидыКонтрактов.КонтрактСПоставщиком);
	Элементы.ФормаПечатьТехникоКоммерческоеПредложение.Видимость = (Объект.Тип  = Перечисления.ТипыКонтрактов.ТКП 
		И Объект.Вид = Перечисления.ВидыКонтрактов.КонтрактСЗаказчиком);
	Элементы.ФормаВыгрузкаТКП.Видимость = Элементы.ФормаПечатьТехникоКоммерческоеПредложение.Видимость;
	Элементы.ФормаВыгрузкаВнешнихЦенДляФСВТС.Видимость = Элементы.ФормаПечатьТехникоКоммерческоеПредложение.Видимость;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКаталогВыгрузки()
	
	Если Не Объект.Проведен Или Модифицированность Тогда
		
		ПоказатьПредупреждение(, "Сначала проведите документ!");
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если Объект.ПредметыСнабжения.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(, "В документе нет ни одного предмета снабжения!");
		Возврат Неопределено;
		
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Заголовок = "Выберите каталог для формирования файлов:";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		Возврат ДиалогВыбораФайла.Каталог + "\";
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузкаТКП(Команда)
	
	Каталог = ПолучитьКаталогВыгрузки();
	
	Если Каталог = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Состояние("Выгрузка файлов в " + Каталог, , , БиблиотекаКартинок.ДлительнаяОперация48);
	
	ПараметрыТКП = ПолучитьПараметрыТКП();
	НомерЗапроса = ПараметрыТКП.Получить("<НомерЗапроса>");
	
	ИмяФайла = НомерЗапроса + " " + Объект.НомерКонтракта;	
	ИмяФайла = Каталог + УдалитьЗапрещенныеСимволы(ИмяФайла);
	
	ВыгрузитьФайлWord("ТКПRus", ИмяФайла + " Rus.doc", ПараметрыТКП);
	ВыгрузитьФайлWord("ТКПEng", ИмяФайла + " Eng.doc", ПараметрыТКП);
	ВыгрузитьФайлExcel(ИмяФайла + " RusEng.xls", ПараметрыТКП);
	
	Сообщить("Завершена выгрузка файлов по адресу " + Каталог);
	
КонецПроцедуры

&НаКлиенте
Функция УдалитьЗапрещенныеСимволы(ИсходнаяСтрока)
	
	Результат = ИсходнаяСтрока;
	
	Результат = СтрЗаменить(Результат, ".", " ");
	Результат = СтрЗаменить(Результат, ",", " ");
	Результат = СтрЗаменить(Результат, "#", " ");
	Результат = СтрЗаменить(Результат, "%", " ");
	Результат = СтрЗаменить(Результат, "&", " ");
	Результат = СтрЗаменить(Результат, "*", " ");
	Результат = СтрЗаменить(Результат, "|", " ");
	Результат = СтрЗаменить(Результат, "|", " ");
	Результат = СтрЗаменить(Результат, ":", " ");
	Результат = СтрЗаменить(Результат, """""", " ");
	Результат = СтрЗаменить(Результат, ",", " ");
	Результат = СтрЗаменить(Результат, "<", " ");
	Результат = СтрЗаменить(Результат, ">", " ");
	Результат = СтрЗаменить(Результат, "?", " ");
	Результат = СтрЗаменить(Результат, "/", " ");
	
	Возврат СокрЛП(Результат);
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьФайлWord(ИмяМакета, ИмяФайла, ПараметрыТКП)
	
	Макет = ПолучитьМакетНаСервере(ИмяМакета);
	
	Попытка
		
		Макет.Записать(ИмяФайла);
		
	Исключение
		
		Сообщить("Не удалось записать файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	Попытка
		
		ОбъектВорд = Новый COMОбъект("Word.Application");
		ОбъектВорд.Documents.add(ИмяФайла);
		
		ДокументВорд = ОбъектВорд.Application.Documents(1);
		ДокументВорд.Activate();
		
	Исключение
		
		Сообщить("Не удалось открыть файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		УдалитьФайлы(ИмяФайла);
		
	КонецПопытки;
	
	Замена = ДокументВорд.Content.Find;
	Колонтитул = ДокументВорд.Sections(1).Footers(1).Range;
	ТекстКолонтитула = Колонтитул.Text;
	
	Для каждого ПараметрТКП Из ПараметрыТКП Цикл
		
		Замена.Execute(ПараметрТКП.Ключ, , , , , , , , , ПараметрТКП.Значение, 2);
		ТекстКолонтитула = СтрЗаменить(ТекстКолонтитула,  ПараметрТКП.Ключ, ПараметрТКП.Значение);
		
	КонецЦикла;
	
	Колонтитул.Text = ТекстКолонтитула;
	
	Попытка
		
		ДокументВорд.SaveAs(ИмяФайла);
		ДокументВорд.Application.Quit();
		
	Исключение
		
		Сообщить("Не удалось сохранить файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	ДокументВорд = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайлExcel(ИмяФайла, ПараметрыТКП)
	
	Макет = ПолучитьМакетНаСервере("ТКПRusEng");   
	
	Попытка
		
		Макет.Записать(ИмяФайла);
		
	Исключение
		
		Сообщить("Не удалось записать файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	
	Попытка
		
		ОбъектExcel = Новый COMОбъект("Excel.Application");
		
		Книга = ОбъектExcel.WorkBooks.Open(ИмяФайла);
		
	Исключение
		
		Сообщить("Не удалось открыть файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	ЗаполнитьТаблицуСпецификацииТКП();
	
	КоличествоСтрок = СпецификацияТКП.Количество(); 
	
	Лист = Книга.WorkSheets(1);
	
	Лист.Cells(6, 1).Value = ПараметрыТКП.Получить("<НомерЗапроса>");
	
	Если КоличествоСтрок > 1 Тогда
		
		Для Сч = 1 По КоличествоСтрок - 1 Цикл 
		
			Лист.Rows(7).Select();
			Лист.Rows(7).Copy();
			Лист.Rows(7).Insert();
			
		КонецЦикла;
		
	КонецЕсли;
	
	Сч = 7;
	
	Для каждого СтрокаСпецификация Из СпецификацияТКП Цикл
		
		Лист.Cells(Сч, 1).Value = СтрокаСпецификация.НомерСтроки;
		Лист.Cells(Сч, 2).Value = СтрокаСпецификация.НомерСтрокиЗаявки;
		Лист.Cells(Сч, 3).Value = СтрокаСпецификация.Наименование;
		Лист.Cells(Сч, 4).Value = СтрокаСпецификация.Обозначение;
		Лист.Cells(Сч, 5).Value = СтрокаСпецификация.ЕдиницаИзмерения;
		Лист.Cells(Сч, 6).Value = СтрокаСпецификация.Количество;
		Лист.Cells(Сч, 7).Value = СтрокаСпецификация.Цена;
		Лист.Cells(Сч, 8).Value = СтрокаСпецификация.Стоимость;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	Лист.Cells(Сч, 8).Value = СпецификацияТКП.Итог("Стоимость");
	
	Лист.Cells(Сч + 2, 1).Value = ПараметрыТКП.Получить("<ДолжностьСоставителяАнгл>");
	Лист.Cells(Сч + 2, 5).Value = ПараметрыТКП.Получить("<ФИОСоставителяАнгл>");
	
	Попытка
		
		ОбъектExcel.Application.DisplayAlerts = False;
		Книга.SaveAs(ИмяФайла);
		ОбъектExcel.Application.Quit();
		
	Исключение

		Сообщить("Не удалось сохранить файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	ОбъектExcel = "";
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСпецификацииТКП()
	
	СпецификацияТКП.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтрактПредметыСнабжения.Заявка КАК Заявка,
	|	КонтрактПредметыСнабжения.НомерСтроки КАК НомерСтроки,
	|	КонтрактПредметыСнабжения.ПредметСнабжения КАК ПредметСнабжения,
	|	КонтрактПредметыСнабжения.Цена КАК Цена,
	|	КонтрактПредметыСнабжения.Количество КАК Количество,
	|	КонтрактПредметыСнабжения.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ втСоставКП
	|ИЗ
	|	Документ.Контракт.ПредметыСнабжения КАК КонтрактПредметыСнабжения
	|ГДЕ
	|	КонтрактПредметыСнабжения.Ссылка = &КоммерческоеПредложение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПредметСнабжения,
	|	Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втСоставКП.Заявка КАК Заявка,
	|	втСоставКП.НомерСтроки КАК НомерСтроки,
	|	втСоставКП.ПредметСнабжения КАК ПредметСнабжения,
	|	втСоставКП.Цена КАК Цена,
	|	втСоставКП.Количество КАК Количество,
	|	втСоставКП.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КаталогПредметовСнабжения.Обозначение + ""/"" + КаталогПредметовСнабжения.ОбозначениеТранслитированное КАК Обозначение,
	|	ЕСТЬNULL(ЗаявкаСпецификация.НомерСтроки, """") КАК НомерСтрокиЗаявки,
	|	КаталогПредметовСнабжения.Наименование КАК Наименование
	|ПОМЕСТИТЬ втТКПБезПереводов
	|ИЗ
	|	втСоставКП КАК втСоставКП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения КАК КаталогПредметовСнабжения
	|		ПО втСоставКП.ПредметСнабжения = КаталогПредметовСнабжения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Заявка.Спецификация КАК ЗаявкаСпецификация
	|		ПО втСоставКП.ПредметСнабжения = ЗаявкаСпецификация.ПредметСнабжения
	|			И втСоставКП.Заявка = ЗаявкаСпецификация.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПредметСнабжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА Контракт.Контрагент ССЫЛКА Справочник.ИностранныеЗаказчики
	|			ТОГДА ВЫРАЗИТЬ(Контракт.Контрагент КАК Справочник.ИностранныеЗаказчики)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИностранныеЗаказчики.ПустаяСсылка)
	|	КОНЕЦ КАК Заказчик
	|ПОМЕСТИТЬ втЗаказчик
	|ИЗ
	|	Документ.Контракт КАК Контракт
	|ГДЕ
	|	Контракт.Ссылка = &КоммерческоеПредложение
	|	И Контракт.Контрагент ССЫЛКА Справочник.ИностранныеЗаказчики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДополнительныеНаименования.Владелец КАК Владелец,
	|	ДополнительныеНаименования.Перевод КАК Перевод
	|ПОМЕСТИТЬ втПереводыНаименований
	|ИЗ
	|	втЗаказчик КАК втЗаказчик
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИностранныеЗаказчики КАК ИностранныеЗаказчики
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Флоты КАК Флоты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеНаименования КАК ДополнительныеНаименования
	|				ПО Флоты.ЯзыкПредставленияДанных = ДополнительныеНаименования.Язык
	|					И (ДополнительныеНаименования.ИмяРеквизита = ""Наименование"")
	|			ПО ИностранныеЗаказчики.ВМС = Флоты.Ссылка
	|		ПО втЗаказчик.Заказчик = ИностранныеЗаказчики.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТКПБезПереводов.Заявка КАК Заявка,
	|	втТКПБезПереводов.НомерСтроки КАК НомерСтроки,
	|	втТКПБезПереводов.ПредметСнабжения КАК ПредметСнабжения,
	|	втТКПБезПереводов.Цена КАК Цена,
	|	втТКПБезПереводов.Количество КАК Количество,
	|	втТКПБезПереводов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втТКПБезПереводов.Обозначение КАК Обозначение,
	|	втТКПБезПереводов.НомерСтрокиЗаявки КАК НомерСтрокиЗаявки,
	|	ВЫБОР
	|		КОГДА втПереводыНаименований.Владелец ЕСТЬ NULL
	|			ТОГДА втТКПБезПереводов.Наименование
	|		ИНАЧЕ втТКПБезПереводов.Наименование + ""/"" + втПереводыНаименований.Перевод
	|	КОНЕЦ КАК Наименование
	|ПОМЕСТИТЬ втРезультатБезЕдИзм
	|ИЗ
	|	втТКПБезПереводов КАК втТКПБезПереводов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПереводыНаименований КАК втПереводыНаименований
	|		ПО втТКПБезПереводов.ПредметСнабжения = втПереводыНаименований.Владелец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втРезультатБезЕдИзм.НомерСтроки КАК НомерСтроки,
	|	втРезультатБезЕдИзм.НомерСтрокиЗаявки КАК НомерСтрокиЗаявки,
	|	втРезультатБезЕдИзм.Наименование КАК Наименование,
	|	втРезультатБезЕдИзм.Обозначение КАК Обозначение,
	|	ВЫБОР
	|		КОГДА ОКЕИ.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ОКЕИ.Наименование + ""/"" + ОКЕИ.УсловноеОбозначениеМеждународное
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	втРезультатБезЕдИзм.Цена КАК Цена,
	|	втРезультатБезЕдИзм.Количество КАК Количество,
	|	втРезультатБезЕдИзм.Цена * втРезультатБезЕдИзм.Количество КАК Стоимость
	|ИЗ
	|	втРезультатБезЕдИзм КАК втРезультатБезЕдИзм
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОКЕИ КАК ОКЕИ
	|		ПО втРезультатБезЕдИзм.ЕдиницаИзмерения = ОКЕИ.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	НомерСтрокиЗаявки";
	Запрос.УстановитьПараметр("КоммерческоеПредложение", Объект.Ссылка);
	 
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	СпецификацияТКП.Загрузить(ТаблицаЗапроса);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМакетНаСервере(ИмяМакета, ЭтоОбщийМакет = Ложь)
	
	Если ЭтоОбщийМакет Тогда
		
		Возврат ПолучитьОбщийМакет(ИмяМакета);
		
	Иначе
	
		Возврат Документы.Контракт.ПолучитьМакет(ИмяМакета);
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыТКП()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредметыСнабжения.Заявка КАК Заявка
	|ПОМЕСТИТЬ втЗаявки
	|ИЗ
	|	&ПредметыСнабжения КАК ПредметыСнабжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	докЗаявка.НомерЗаказчика КАК НомерЗаказчика,
	|	ЗапросТКП.Ссылка КАК ЗапросТКП
	|ИЗ
	|	втЗаявки КАК втЗаявки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заявка КАК докЗаявка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросТКПRFP КАК ЗапросТКП
	|			ПО докЗаявка.ЗапросТКПRFP = ЗапросТКП.Ссылка
	|		ПО втЗаявки.Заявка = докЗаявка.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(ЗапросТКП)
	|ПО
	|	ОБЩИЕ";
	Запрос.УстановитьПараметр("ПредметыСнабжения", Объект.ПредметыСнабжения.Выгрузить());
	
	ВыборкаИтого = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивЗаявок = Новый Массив;
	
	Пока ВыборкаИтого.Следующий() Цикл
		
		ЗапросТКП = ВыборкаИтого.ЗапросТКП;
		
		Выборка = ВыборкаИтого.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			МассивЗаявок.Добавить(Выборка.НомерЗаказчика);
			
		КонецЦикла;
		
	КонецЦикла;
	
	КонтрагентИнозаказчик = (ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.ИностранныеЗаказчики"));
	
	ПараметрыТКП = Новый Соответствие;
	ПараметрыТКП.Вставить("<НаименованиеИностранногоЗаказчика>", Строка(Объект.Контрагент));
	ПараметрыТКП.Вставить("<НомерЗапроса>", ЗапросТКП.НомерЗаказчика);
	ПараметрыТКП.Вставить("<УсловияПоставки>", ЗапросТКП.УсловияПоставки);
	ПараметрыТКП.Вставить("<ДатаЗапроса>", Формат(ЗапросТКП.Дата, "ДЛФ=DD"));
	ПараметрыТКП.Вставить("<ДатаЗапросаАнгл>", ФорматДатыАнгл(ЗапросТКП.Дата));
	ПараметрыТКП.Вставить("<НомерЗаявки>", СтрСоединить(МассивЗаявок, ", "));
	ПараметрыТКП.Вставить("<СрокПоставкиМес>", Формат(Окр(ЗапросТКП.СрокПоставки / 30, 0, РежимОкругления.Окр15как20), "ЧН=; ЧГ=0"));
	ПараметрыТКП.Вставить("<СрокДействияКП>", Формат(Объект.СрокДействияКП, "ДЛФ=DD"));
	ПараметрыТКП.Вставить("<ГодДействияЦен>", Формат(Год(Объект.СрокДействияКП), "ЧН=; ЧГ=0") + " г");
	ПараметрыТКП.Вставить("<ДолжностьСоставителя>", Объект.ОтветственноеЛицо.Должность);
	ПараметрыТКП.Вставить("<ДолжностьСоставителяАнгл>", Объект.ОтветственноеЛицо.ДолжностьАнгл);
	ПараметрыТКП.Вставить("<ФИОСоставителя>", Объект.ОтветственноеЛицо.Наименование);
	ПараметрыТКП.Вставить("<ФИОСоставителяАнгл>", Объект.ОтветственноеЛицо.НаименованиеАнгл);
	ПараметрыТКП.Вставить("<АдресИностранногоЗаказчика>", ?(КонтрагентИнозаказчик, Строка(Объект.Контрагент.ПолныйАдрес), ""));
	ПараметрыТКП.Вставить("<Страна>", ?(КонтрагентИнозаказчик, Строка(Объект.Контрагент.ВМС.Страна), ""));
	ПараметрыТКП.Вставить("<ДолжностьИмяКонтактногоЛица>", 
		?(КонтрагентИнозаказчик, Объект.Контрагент.ДолжностьРуководителя + " " +Объект.Контрагент.ФИОРуководителя, ""));
	
	Возврат ПараметрыТКП;
	
КонецФункции

&НаСервере
Функция ФорматДатыАнгл(ИсходнаяДата)
	
	СоответствиеМесяцев = Новый Соответствие;
	СоответствиеМесяцев.Вставить(1, "January");
	СоответствиеМесяцев.Вставить(2, "February");
	СоответствиеМесяцев.Вставить(3, "March");
	СоответствиеМесяцев.Вставить(4, "April");
	СоответствиеМесяцев.Вставить(5, "May");
	СоответствиеМесяцев.Вставить(6, "June");
	СоответствиеМесяцев.Вставить(7, "July");
	СоответствиеМесяцев.Вставить(8, "August");
	СоответствиеМесяцев.Вставить(9, "September");
	СоответствиеМесяцев.Вставить(10, "October");
	СоответствиеМесяцев.Вставить(11, "November");
	СоответствиеМесяцев.Вставить(12, "December");
	
	ДатаСтрокой = Строка(День(ИсходнаяДата)) + " " + СоответствиеМесяцев.Получить(Месяц(ИсходнаяДата)) + " " + Прав(Формат(Год(ИсходнаяДата), "ЧГ=0"), 2);
	
	Возврат ДатаСтрокой;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузкаВнешнихЦенДляФСВТС(Команда)
	
	Каталог = ПолучитьКаталогВыгрузки();
	
	Если Каталог = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Состояние("Выгрузка файлов в " + Каталог, , , БиблиотекаКартинок.ДлительнаяОперация48);
	
	ПараметрыФСВТС = ПолучитьПараметрыФСВТС();
	НомерЗапроса = ПараметрыФСВТС.Получить("<НомерЗапроса>");
	
	ИмяФайла = УдалитьЗапрещенныеСимволы(НомерЗапроса + " " + Объект.НомерКонтракта);
	
	ВыгрузитьПисьмоФСВТС(Каталог + "Сопровод в ФСВТС " + ИмяФайла + ".doc", ПараметрыФСВТС);
	ВыгрузитьПриложениеКПисьмуФСВТС(Каталог + "Приложение к письму " + ИмяФайла + ".xls", ПараметрыФСВТС);
	
	Сообщить("Завершена выгрузка файлов по адресу " + Каталог);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПисьмоФСВТС(ИмяФайла, ПараметрыФСВТС)
	
	Макет = ПолучитьМакетНаСервере("ПисьмоФСВТС", Истина);
	
	Попытка
		
		Макет.Записать(ИмяФайла);
		
	Исключение
		
		Сообщить("Не удалось записать файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	Попытка
		
		ОбъектВорд = Новый COMОбъект("Word.Application");
		ОбъектВорд.Documents.add(ИмяФайла);
		
		ДокументВорд = ОбъектВорд.Application.Documents(1);
		ДокументВорд.Activate();
		
	Исключение
		
		Сообщить("Не удалось открыть файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		УдалитьФайлы(ИмяФайла);
		
	КонецПопытки;
	
	Замена = ДокументВорд.Content.Find;
	
	Для каждого ПараметрФСВТС Из ПараметрыФСВТС Цикл
		
		Замена.Execute(ПараметрФСВТС.Ключ, , , , , , , , , ПараметрФСВТС.Значение, 2);
		
	КонецЦикла;
	
	Попытка
		
		ДокументВорд.SaveAs(ИмяФайла);
		ДокументВорд.Application.Quit();
		
	Исключение
		
		Сообщить("Не удалось сохранить файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	ДокументВорд = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПриложениеКПисьмуФСВТС(ИмяФайла, ПараметрыФСВТС)
	
	Макет = ПолучитьМакетНаСервере("ПриложениеКПисьмуФСВТС", Истина);   
	
	Попытка
		
		Макет.Записать(ИмяФайла);
		
	Исключение
		
		Сообщить("Не удалось записать файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	
	Попытка
		
		ОбъектExcel = Новый COMОбъект("Excel.Application");
		
		Книга = ОбъектExcel.WorkBooks.Open(ИмяФайла);
		
	Исключение
		
		Сообщить("Не удалось открыть файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	КоличествоСтрок = Объект.ПредметыСнабжения.Количество(); 
	
	Лист = Книга.WorkSheets(1);
	
	ТекущийГод = Год(?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()));
	Лист.Cells(4, 5).Value = "Цена предложения " + Формат(ТекущийГод, "ЧГ=0") + " г., долл США, CIF";
	Лист.Cells(4, 6).Value = "Цена предложения " + Формат(ТекущийГод + 1, "ЧГ=0") + " г., долл США, CIF";
	Лист.Cells(4, 7).Value = "Цена предложения " + Формат(ТекущийГод + 2, "ЧГ=0") + " г., долл США, CIF";
	
	Если КоличествоСтрок > 1 Тогда
		
		Для Сч = 1 По КоличествоСтрок - 1 Цикл 
		
			Лист.Rows(6).Select();
			Лист.Rows(6).Copy();
			Лист.Rows(6).Insert();
			
		КонецЦикла;
		
	КонецЕсли;
	
	Сч = 6;
	
	СоответствиеОбозначений = ПолучитьСоответствиеОбозначений();
	УсловияПоставки = ПараметрыФСВТС.Получить("<УсловияПоставки>");
	ГодСтрокой = Формат(Год(Объект.ДатаЗаключенияКонтракта), "ЧГ=0");
	
	МассивЦенообразования = Новый Массив;
	
	Для каждого СтрокаПредметСнабжения Из Объект.ПредметыСнабжения Цикл
		
		ИндексОбоснования = МассивЦенообразования.Найти(СтрокаПредметСнабжения.ОбоснованиеЦенообразования);
		
		Если ИндексОбоснования = Неопределено Тогда
			
			МассивЦенообразования.Добавить(СтрокаПредметСнабжения.ОбоснованиеЦенообразования);
			НомерОбоснования = МассивЦенообразования.Количество(); 
			
		Иначе
			
			НомерОбоснования = ИндексОбоснования + 1;
			
		КонецЕсли;
		
		Лист.Cells(Сч, 1).Value = СтрокаПредметСнабжения.НомерСтроки;
		Лист.Cells(Сч, 2).Value = Строка(СтрокаПредметСнабжения.ПредметСнабжения);
		Лист.Cells(Сч, 3).Value = СоответствиеОбозначений.Получить(СтрокаПредметСнабжения.ПредметСнабжения);
		Лист.Cells(Сч, 4).Value = Строка(СтрокаПредметСнабжения.ЕдиницаИзмерения);
		Лист.Cells(Сч, 5).Value = СтрокаПредметСнабжения.ЦенаТекущегоГода;
		Лист.Cells(Сч, 6).Value = СтрокаПредметСнабжения.ЦенаСледующегоГода;
		Лист.Cells(Сч, 7).Value = СтрокаПредметСнабжения.ЦенаГодаЧерез1;
		Лист.Cells(Сч, 8).Value = СтрокаПредметСнабжения.Цена;
		Лист.Cells(Сч, 9).Value = Строка(Объект.Контрагент) + ", " + Строка(Объект.Валюта) + ", " + ГодСтрокой + ", " + УсловияПоставки;
		Лист.Cells(Сч, 10).Value = СтрокаПредметСнабжения.ИсточникЦеновойИнформации;
		Лист.Cells(Сч, 11).Value = Формат(НомерОбоснования, "ЧГ=0");
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	Лист.Cells(Сч, 5).Value = Объект.ПредметыСнабжения.Итог("ЦенаТекущегоГода");
	Лист.Cells(Сч, 6).Value = Объект.ПредметыСнабжения.Итог("ЦенаСледующегоГода");
	Лист.Cells(Сч, 7).Value = Объект.ПредметыСнабжения.Итог("ЦенаГодаЧерез1");
	
	НомерСтрокиОбоснований = Сч + 4;
	Сч = НомерСтрокиОбоснований + 1;
	
	Для каждого ЭлементМассива Из МассивЦенообразования Цикл
		
		Лист.Rows(НомерСтрокиОбоснований).Select();
		Лист.Rows(НомерСтрокиОбоснований).Copy();
		Лист.Rows(НомерСтрокиОбоснований).Insert();
		
	КонецЦикла;
	
	Для каждого ЭлементМассива Из МассивЦенообразования Цикл
		
		Лист.Cells(Сч, 1).Value = Строка(Сч - НомерСтрокиОбоснований) + " - " + ЭлементМассива;
		Сч = Сч + 1;
		
	КонецЦикла;
	
	Попытка
		
		ОбъектExcel.Application.DisplayAlerts = False;
		Книга.SaveAs(ИмяФайла);
		ОбъектExcel.Application.Quit();
		
	Исключение

		Сообщить("Не удалось сохранить файл " + ИмяФайла + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		
	КонецПопытки;
	
	ОбъектExcel = "";
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСоответствиеОбозначений()
	
	СоответствиеОбозначений = Новый Соответствие;
	
	Для каждого СтрокаПредметСнабжения Из Объект.ПредметыСнабжения Цикл
		
		 СоответствиеОбозначений.Вставить(СтрокаПредметСнабжения.ПредметСнабжения, СтрокаПредметСнабжения.ПредметСнабжения.Обозначение); 
		
	КонецЦикла;
	
	Возврат СоответствиеОбозначений;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыФСВТС()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПредметыСнабжения.Заявка КАК Заявка
	|ПОМЕСТИТЬ втПредметыСнабжения
	|ИЗ
	|	&ПредметыСнабжения КАК ПредметыСнабжения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(докЗаявка.ЗапросТКПRFP) КАК ЗапросТКПRFP
	|ИЗ
	|	втПредметыСнабжения КАК втПредметыСнабжения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заявка КАК докЗаявка
	|		ПО втПредметыСнабжения.Заявка = докЗаявка.Ссылка";
	Запрос.УстановитьПараметр("ПредметыСнабжения", Объект.ПредметыСнабжения.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗапросТКП = Выборка.ЗапросТКПRFP;
		
	Иначе
		
		ЗапросТКП = Документы.ЗапросТКПRFP.ПустаяСсылка();
		
	КонецЕсли;
	
	ПараметрыФСВТС = Новый Соответствие;
	ПараметрыФСВТС.Вставить("<НомерФСВТС>", ЗапросТКП.НомерФСВТС);
	ПараметрыФСВТС.Вставить("<ИностранныйЗаказчик>", Строка(Объект.Контрагент));
	ПараметрыФСВТС.Вставить("<ГодПоставки>", Формат(Год(Объект.ДатаЗаключенияКонтракта + ЗапросТКП.СрокПоставки * 86400), "ЧГ=0"));
	ПараметрыФСВТС.Вставить("<УсловияПоставки>", ЗапросТКП.УсловияПоставки);
	ПараметрыФСВТС.Вставить("<НомерЗапроса>", ЗапросТКП.НомерЗаказчика);
	
	Возврат ПараметрыФСВТС;
	
КонецФункции

#КонецОбласти
//-- 21.02.2018 Веденеев П.

//++ 12.04.2018 Веденеев П. //реквизиты ФС ВТС
&НаКлиенте
Процедура ПоказатьСкрытьРеквизитыФСВТС(Команда)
	
	ВидимостьРеквизитов = Не Элементы.ПредметыСнабженияЦенаТекущегоГода.Видимость;
	
	Элементы.ПредметыСнабженияПоказатьСкрытьРеквизитыФСВТС.Пометка = ВидимостьРеквизитов;
	
	Элементы.ПредметыСнабженияЦенаТекущегоГода.Видимость = ВидимостьРеквизитов;
	Элементы.ПредметыСнабженияЦенаСледующегоГода.Видимость = ВидимостьРеквизитов;
	Элементы.ПредметыСнабженияЦенаГодаЧерез1.Видимость = ВидимостьРеквизитов;
	Элементы.ПредметыСнабженияИсточникЦеновойИнформации.Видимость = ВидимостьРеквизитов;
	Элементы.ПредметыСнабженияОбоснованиеЦенообразования.Видимость = ВидимостьРеквизитов;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовкиЦенФСВТС()
	
	ТекущийГод = Год(?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()));
	
	Элементы.ПредметыСнабженияЦенаТекущегоГода.Заголовок = "Цена " + Формат(ТекущийГод, "ЧГ=0") + " года";
	Элементы.ПредметыСнабженияЦенаСледующегоГода.Заголовок = "Цена " + Формат(ТекущийГод + 1, "ЧГ=0") + " года";
	Элементы.ПредметыСнабженияЦенаГодаЧерез1.Заголовок = "Цена " + Формат(ТекущийГод + 2, "ЧГ=0") + " года";
	
КонецПроцедуры
//-- 12.04.2018 Веденеев П. //реквизиты ФС ВТС

// ++ 21.09.2018 9:38:05 Базунов Д.А. Задача: 

&НаКлиенте
Процедура ЗаполнитьСрокПоставки(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПоказаВопроса", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, "Установить во всех строках срок поставки?",РежимДиалогаВопрос.ДаНет, 60);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПоказаВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеВводаЧисла", ЭтотОбъект, Параметры);
		
		ПоказатьВводЧисла(Оповещение, 1, "", 3, 0);
		
	КонецЕсли; 

КонецПроцедуры
  
&НаКлиенте
Процедура ПослеВводаЧисла(Число, Параметры) Экспорт
	
	Если НЕ Число = Неопределено Тогда
        
		ПроставитьСрокПоставки(Число);

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроставитьСрокПоставки(СрокПоставки)
	
	Для каждого ТекСтрока Из Объект.ПредметыСнабжения Цикл
		
		ТекСтрока.СрокПоставки = СрокПоставки;
		
	КонецЦикла; 
	
КонецПроцедуры

// -- 21.09.2018 9:38:05 Базунов Д.А. Задача:

&НаКлиенте
Процедура ПоказатьСкрытьТендерныеЦены(Команда)
	Если Элементы.ГруппаТендерныеЦены.Видимость Тогда
		
		Элементы.ГруппаТендерныеЦены.Видимость = Ложь;
		Элементы.ПредметыСнабженияПоказатьСкрытьТендерныеЦены.Пометка = Ложь;
		
	Иначе
		
		ОтобразитьЦены("ЦеныТендерные");
		Элементы.ГруппаТендерныеЦены.Видимость = Истина;
		Элементы.ПредметыСнабженияПоказатьСкрытьТендерныеЦены.Пометка = Истина;
		
	КонецЕсли;
КонецПроцедуры

#Область ЗагрузкаПредметовСнабженияИзExcel

#Область ВспомогательныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьЗагрузчикПредметовСнабжения()
	
	ПараметрыОткрытия  = Новый Структура("ДокументКонтракт", Объект.Ссылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗагрузкиПредметовСнабжения", ЭтаФорма);
	
	ОткрытьФорму("Документ.Контракт.Форма.ЗагрузкиПредметовСнабженияИзExcel",
					ПараметрыОткрытия,
					ЭтаФорма,
					ЭтаФорма.УникальныйИдентификатор,,,
					ОписаниеОповещения);
	
КонецПроцедуры // ОткрытьЗагрузчикПредметовСнабжения

&НаСервере
Процедура ЗагрузитьПредметыСнабженияИзВременногоХранилища(АдресВременногоХранилища)
	Объект.ПредметыСнабжения.Загрузить(ПолучитьИзВременногоХранилища(АдресВременногоХранилища));	
КонецПроцедуры // ЗагрузитьПредметыСнабженияИзВременногоХранилища

#КонецОбласти

#Область CallBackМетоды

&НаКлиенте
Процедура ПослеЗагрузкиПредметовСнабжения(Результат, ДополнительныеПараметры) Экспорт
	Элементы.ПредметыСнабжения.Обновить();
КонецПроцедуры // ПослеЗагрузкиПредметовСнабжения

&НаКлиенте
Процедура ПослеВопросаОСохранении(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Записать();
		
		Если Объект.ПредметыСнабжения.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОбОчистке", ЭтаФорма);
			ПоказатьВопрос(ОписаниеОповещения, "Табличная часть предметов снабжения будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет,30, КодВозвратаДиалога.Нет,,КодВозвратаДиалога.Нет);
		Иначе
			ОткрытьЗагрузчикПредметовСнабжения();	
		КонецЕсли; // Если Объект.ПредметыСнабжения.Количество() > 0 Тогда
		
	КонецЕсли; // Если Результат = КодВозвратаДиалога.Да Тогда
	
КонецПроцедуры // ПослеВопросаОСохранении

&НаКлиенте
Процедура ПослеВопросаОбОчистке(Результат, ДополнительынеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОткрытьЗагрузчикПредметовСнабжения();
	КонецЕсли; // Если Результат = КодВозвратаДиалога.Да Тогда
КонецПроцедуры // ПослеВопросаОбОчистке

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаЗагрузитьПредметыСнабжения(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОСохранении", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Для загрузки нужно сохранить документ, сохранить и продолжить?", РежимДиалогаВопрос.ДаНет,30,КодВозвратаДиалога.Нет,,КодВозвратаДиалога.Нет);
	Иначе
		ПослеВопросаОСохранении(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли; // Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
КонецПроцедуры // КомандаЗагрузитьПредметыСнабжения

#КонецОбласти

#Область СобытияФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗагрузитьПредметыСнабженияКонтракт" Тогда
		ЗагрузитьПредметыСнабженияИзВременногоХранилища(Параметр);
	КонецЕсли; // Если ИмяСобытия = "ЗагрузитьПредметыСнабженияКонтракт" Тогда
КонецПроцедуры // ОбработкаОповещения

#КонецОбласти

#КонецОбласти
