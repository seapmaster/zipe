////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьВидимость(РежимВыбора)
	РольПредставительСтроителяКорабля 		= РольДоступна("ПредставительСтроителяКорабля");
	РольПредставительКонтрагента 			= РольДоступна("ПредставительКонтрагента");
	РольПолныеПрава 						= РольДоступна("ПолныеПрава");
	РольСпециалистБлокаЗакупок 				= РольДоступна("СпециалистБлокаЗакупок");
	РольПредставительДЗОИсполнителяЗаявки 	= РольДоступна("ПредставительДЗОИсполнителяЗаявки");
	ПравоДобавление 						= ПравоДоступа("Добавление", Метаданные.Документы.Контракт);
	ПравоВзаимодействиеСРОЭ 				= ПравоДоступа("ИнтерактивныйСтарт", Метаданные.БизнесПроцессы.ВзаимодействиеСРОЭ);
	
	// Блок "Создать"
	Элементы.ФормаСоздать.Видимость						= Не РежимВыбора И ПравоДобавление;	
	Элементы.ФормаСоздатьСЗаказчиком.Видимость 			= Не РольПредставительСтроителяКорабля Или Не РольПредставительКонтрагента;
	
	// Блок "Создать по заявкам"
	Элементы.СоздатьПоЗаявкам.Видимость 				= (РольПолныеПрава Или РольСпециалистБлокаЗакупок Или РольПредставительКонтрагента Или РольПредставительДЗОИсполнителяЗаявки) И Не РежимВыбора;
	Элементы.ФормаСоздатьТКПСЗаказчиком.Видимость 		= Не РольПредставительДЗОИсполнителяЗаявки;
	Элементы.ФормаСоздатьКонтрактСЗаказчиком.Видимость 	= Не РольПредставительДЗОИсполнителяЗаявки;
	Если РольПредставительДЗОИсполнителяЗаявки Тогда
		ИсполнителиДЗО.ЗагрузитьЗначения(ОбщиеФункцииПривилегированный.ПолучитьЗначениеДоступа(ПараметрыСеанса.ТекущийПользователь));
	КонецЕсли; // Если РольПредставительДЗОИсполнителяЗаявки Тогда
	
	// Блок "Отправить"
	Элементы.Отправить.Видимость 						= Не (РольПредставительСтроителяКорабля Или РольПредставительКонтрагента) И Не РежимВыбора И ПравоВзаимодействиеСРОЭ;
	
	// Режим выбора
	Элементы.Список.РежимВыбора 			= РежимВыбора;
	Элементы.ФормаВыбрать.Видимость 		= РежимВыбора;
	Элементы.ФормаВыбрать.КнопкаПоУмолчанию = РежимВыбора;
КонецПроцедуры // УстановитьВидимость

&НаСервереБезКонтекста
Функция ПолучитьВидКонтракта(ВидКонтракта)	
	Возврат Перечисления.ВидыКонтрактов[ВидКонтракта];	
КонецФункции // ПолучитьВидКонтракта

&НаСервере
Процедура УстановитьОтборПоЗаявкам(ЗаявкаЗапрос)
	
	МассивЗаявок = Новый Массив;
	Если ТипЗнч(ЗаявкаЗапрос) = Тип("ДокументСсылка.ЗапросТКПRFP") Тогда		
		Запрос 			= Новый Запрос;
		Запрос.Текст 	= "ВЫБРАТЬ
		             	  |	Заявка.Ссылка КАК Ссылка
		             	  |ИЗ
		             	  |	Документ.Заявка КАК Заявка
		             	  |ГДЕ
		             	  |	Заявка.ЗапросТКПRFP = &ЗапросТКПRFP";
		Запрос.УстановитьПараметр("ЗапросТКПRFP", ЗаявкаЗапрос);
		МассивЗаявок 	= Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");		
	Иначе
		МассивЗаявок.Добавить(ЗаявкаЗапрос);		
	КонецЕсли; // Если ТипЗнч(ЗаявкаЗапрос) = Тип("ДокументСсылка.ЗапросТКПRFP") Тогда
	
	Список.ТекстЗапроса = Список.ТекстЗапроса + " ГДЕ ДокументКонтракт.ПредметыСнабжения.Заявка В(&СписокЗаявок)";	
	Список.Параметры.УстановитьЗначениеПараметра("СписокЗаявок", МассивЗаявок);
КонецПроцедуры // УстановитьОтборПоЗаявкам

&НаКлиенте
Процедура ОткрытьПодборПозицийЗаявок(ПараметрыОткрытия)

	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикПодбораПозицийЗаявок", 
														Этотобъект, 
														ПараметрыОткрытия);	
	ОткрытьФорму("Документ.Контракт.Форма.ФормаПодбораПозицийЗаявок", 
														ПараметрыОткрытия, 
														ЭтотОбъект,,,, 
														ОписаниеОповещения, 
														РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры // ОткрытьПодборПозицийЗаявок()

&НаКлиенте
Процедура ОбработчикПодбораПозицийЗаявок(АдресВременногоХранилища, ДопПараметры) Экспорт

	Если Не АдресВременногоХранилища = Неопределено Тогда
		
		ДопПараметры.Вставить("АдресВременногоХранилища", АдресВременногоХранилища);
		
		Если ДопПараметры.Свойство("ТКПСПоставщиком") Тогда
			
			ДопПараметры.Вставить("ВидКонтракта", ПолучитьВидКонтракта("КонтрактСПоставщиком")); 
			ОткрытьФорму("Документ.Контракт.Форма.ФормаКонтрактаСПоставщиком", ДопПараметры);	
			
		ИначеЕсли ДопПараметры.Свойство("ТКПСЗаказчиком") Тогда
			
			ДопПараметры.Вставить("ВидКонтракта",ПолучитьВидКонтракта("КонтрактСЗаказчиком"));
			ОткрытьФорму("Документ.Контракт.Форма.ФормаКонтрактаСЗаказчиком", ДопПараметры);	
			
		ИначеЕсли ДопПараметры.Свойство("КонтрактСЗаказчиком") Тогда
			
			ДопПараметры.Вставить("ВидКонтракта",ПолучитьВидКонтракта("КонтрактСЗаказчиком"));
			ОткрытьФорму("Документ.Контракт.Форма.ФормаКонтрактаСЗаказчиком", ДопПараметры);	
			
		КонецЕсли; 
		
	КонецЕсли;	

КонецПроцедуры // ОбработчикПодбораПозицийЗаявок()

&НаСервере
Процедура ЗаполнитьДанныеНаСервере(ДокОбъект, ДокСсылка)
	
	ВзаимодействиеСРОЭ.ЗаполнитьДанныеНаСервере(ДокОбъект, ДокСсылка);
	ДокОбъект.ВариантЗаполнения = 3;
	
КонецПроцедуры

////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура СоздатьТКПСПоставщиком(Команда)
	
	ПараметрыОткрытия = Новый Структура("ТКПСПоставщиком");
	
	Если ИсполнителиДЗО.Количество() > 0 Тогда
		ПараметрыОткрытия.Вставить("ИсполнительДЗО", ИсполнителиДЗО.ВыгрузитьЗначения());
	КонецЕсли; 
	
	ОткрытьПодборПозицийЗаявок(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьТКПСЗаказчиком(Команда)
	
	ПараметрыОткрытия = Новый Структура("ТКПСЗаказчиком");
	ОткрытьПодборПозицийЗаявок(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКонтрактСЗаказчиком(Команда)
	
	ПараметрыОткрытия = Новый Структура("КонтрактСЗаказчиком");
	ОткрытьПодборПозицийЗаявок(ПараметрыОткрытия);	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСПоставщиком(Команда)
	
	ОткрытьФорму("Документ.Контракт.Форма.ФормаКонтрактаСПоставщиком", Новый Структура("ВидКонтракта", ПолучитьВидКонтракта("КонтрактСПоставщиком")));
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСЗаказчиком(Команда)
	
	ОткрытьФорму("Документ.Контракт.Форма.ФормаКонтрактаСЗаказчиком", Новый Структура("ВидКонтракта", ПолучитьВидКонтракта("КонтрактСЗаказчиком")));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьРОЭ(Команда)
	
	ФормаБП = ПолучитьФорму("БизнесПроцесс.ВзаимодействиеСРОЭ.Форма.ФормаБизнесПроцесса");
    ДокОбъект = ФормаБП.Объект;
	
	ДокСсылка = Элементы.Список.ТекущаяСтрока;

	ЗаполнитьДанныеНаСервере(ДокОбъект, ДокСсылка);
    КопироватьДанныеФормы(ДокОбъект, ФормаБП.Объект);
	
	ФормаБП.Открыть();
		
КонецПроцедуры

////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимость(Параметры.РежимВыбора);		
	
	Если Параметры.Свойство("ЗаявкаЗапрос") Тогда		
		УстановитьОтборПоЗаявкам(Параметры.ЗаявкаЗапрос);		
	КонецЕсли; // Если Параметры.Свойство("ЗаявкаЗапрос") Тогда	
	
КонецПроцедуры // ПриСозданииНаСервере












