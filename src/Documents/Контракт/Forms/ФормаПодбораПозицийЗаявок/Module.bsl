
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТКПСПоставщиком 	= Параметры.Свойство("ТКПСПоставщиком");
	ТКПСЗаказчиком 		= Параметры.Свойство("ТКПСЗаказчиком");
	КонтрактСЗаказчиком = Параметры.Свойство("КонтрактСЗаказчиком"); 
	
	Элементы.ГруппаИсполнительДЗО.Видимость				= ТКПСПоставщиком;
	Элементы.ГруппаЗаказчик.Видимость					= ТКПСЗаказчиком Или КонтрактСЗаказчиком;
	Элементы.ПозицииЗаявкиЦенаОСК.Видимость				= ТКПСЗаказчиком Или КонтрактСЗаказчиком;
	Элементы.ВыбранныеПозицииЗаявокЦенаОСК.Видимость 	= ТКПСЗаказчиком Или КонтрактСЗаказчиком;
	
	ПолучитьДоступныеПозицииЗаявокДляТКП();	
	
	Если ТКПСЗаказчиком И Параметры.Свойство("ЗаявкаСсылка") Тогда
		Элементы.ПозицииЗаявкиСрокПоставки.Видимость 			= Истина;
		Элементы.ВыбранныеПозицииЗаявокСрокПоставки.Видимость 	= Истина;
		ЗаполнитьСрокиПоставки();
	Иначе
		Элементы.ПозицииЗаявкиСрокПоставки.Видимость 			= Ложь;
		Элементы.ВыбранныеПозицииЗаявокСрокПоставки.Видимость 	= Ложь;;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДоступныеПозицииЗаявокДляТКП()
	
	МВТ = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявкаСпецификация.Ссылка,
	|	ЗаявкаСпецификация.НомерСтроки,
	|	ЗаявкаСпецификация.ИдентификаторПозиции,
	|	ЗаявкаСпецификация.ПредметСнабжения КАК ПредметСнабжения,
	|	ЗаявкаСпецификация.ОписаниеИерархииИзделия,
	|	ЗаявкаСпецификация.Количество,
	|	ЗаявкаСпецификация.ЕдиницаИзмерения,
	|	" + ?(КонтрактСЗаказчиком, "ТКПСЗаказчикомПоЗаявкам.Цена КАК ЦенаОСК", "ЗаявкаСпецификация.ЦенаОСК") + ",
	|	ЗаявкаСпецификация.Ссылка.ЗапросТКПRFP.Заказчик КАК Заказчик,
	|	ЗаявкаСпецификация.ИсполнительДЗО
	|ПОМЕСТИТЬ ВТ_СпецификацииЗаявокПредв
	|ИЗ
	|	Документ.Заявка.Спецификация КАК ЗаявкаСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.%%ИмяПроверочногоРегистра%% КАК %%ИмяПроверочногоРегистра%%
	|		ПО ЗаявкаСпецификация.ИдентификаторПозиции = %%ИмяПроверочногоРегистра%%.ИдентификаторПозиции
	|			И ЗаявкаСпецификация.Ссылка = %%ИмяПроверочногоРегистра%%.Заявка" + ?(КонтрактСЗаказчиком, "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТКПСЗаказчикомПоЗаявкам КАК ТКПСЗаказчикомПоЗаявкам
	|		ПО ЗаявкаСпецификация.ИдентификаторПозиции = ТКПСЗаказчикомПоЗаявкам.ИдентификаторПозиции
	|			И ЗаявкаСпецификация.Ссылка = ТКПСЗаказчикомПоЗаявкам.Заявка", "") + "
	|ГДЕ
	|	%%ИмяПроверочногоРегистра%%.ИдентификаторПозиции ЕСТЬ NULL
	// ++ 19.09.2018 17:20:58 Базунов Д.А. Задача: 
	|	И НЕ ВЫРАЗИТЬ(ЗаявкаСпецификация.ОписаниеИерархииИзделия КАК Строка(500)) = """"
	// -- 19.09.2018 17:20:58 Базунов Д.А. Задача:
	|	%%Условие%%
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПредметСнабжения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СпецификацииЗаявокПредв.Ссылка КАК Ссылка,
	|	ВТ_СпецификацииЗаявокПредв.%%ПолеГруппировки%% КАК ПолеГруппировки
	|ПОМЕСТИТЬ ВТ_ЗаявкиПредв
	|ИЗ
	|	ВТ_СпецификацииЗаявокПредв КАК ВТ_СпецификацииЗаявокПредв
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявка.Ссылка КАК Заявка,
	|	Заявка.НомерЗаказчика,
	|	Заявка.Дата,
	|	ВТ_ЗаявкиПредв.ПолеГруппировки,
	|	Заявка.Валюта
	|ПОМЕСТИТЬ ВТ_Заявки
	|ИЗ
	|	ВТ_ЗаявкиПредв КАК ВТ_ЗаявкиПредв
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заявка КАК Заявка
	|		ПО ВТ_ЗаявкиПредв.Ссылка = Заявка.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СпецификацииЗаявокПредв.Ссылка КАК Заявка,
	|	ВТ_СпецификацииЗаявокПредв.НомерСтроки КАК НомерПозиции,
	|	ВТ_СпецификацииЗаявокПредв.ИдентификаторПозиции,
	|	ВТ_СпецификацииЗаявокПредв.ПредметСнабжения,
	|	КаталогПредметовСнабжения.Обозначение,
	|	ВТ_СпецификацииЗаявокПредв.ОписаниеИерархииИзделия КАК Изделие,
	|	ВТ_СпецификацииЗаявокПредв.Количество,
	|	ВТ_СпецификацииЗаявокПредв.ЕдиницаИзмерения,
	|	ВТ_СпецификацииЗаявокПредв.ЦенаОСК,
	|	ВТ_СпецификацииЗаявокПредв.%%ПолеГруппировки%% КАК ПолеГруппировки
	|ПОМЕСТИТЬ ВТ_СпецификацииЗаявок
	|ИЗ
	|	ВТ_СпецификацииЗаявокПредв КАК ВТ_СпецификацииЗаявокПредв
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КаталогПредметовСнабжения КАК КаталогПредметовСнабжения
	|		ПО ВТ_СпецификацииЗаявокПредв.ПредметСнабжения = КаталогПредметовСнабжения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Заявки.ПолеГруппировки
	|ПОМЕСТИТЬ ВТ_ЗначенияГруппировки
	|ИЗ
	|	ВТ_Заявки КАК ВТ_Заявки
	|ГДЕ
	|	НЕ ВТ_Заявки.ПолеГруппировки = %%ЗначениеУсловияЗначенияГруппировки%%";
	
	Если ТКПСПоставщиком Тогда
	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ПолеГруппировки%%", "ИсполнительДЗО");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ИмяПроверочногоРегистра%%", "ЦеныДЗО");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ЗначениеУсловияЗначенияГруппировки%%", "ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)");
	
	ИначеЕсли ТКПСЗаказчиком Тогда
	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ПолеГруппировки%%", "Заказчик");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ИмяПроверочногоРегистра%%", "ТКПСЗаказчикомПоЗаявкам");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ЗначениеУсловияЗначенияГруппировки%%", "ЗНАЧЕНИЕ(Справочник.ИностранныеЗаказчики.ПустаяСсылка)");
		
	ИначеЕсли КонтрактСЗаказчиком Тогда
	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ПолеГруппировки%%", "Заказчик");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ИмяПроверочногоРегистра%%", "КонтрактыСЗаказчикомПоЗаявкам");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ЗначениеУсловияЗначенияГруппировки%%", "ЗНАЧЕНИЕ(Справочник.ИностранныеЗаказчики.ПустаяСсылка)");
	
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаявкаСсылка") Тогда
		// ++ 09.07.2018 15:58:27 Базунов Д.А. Задача: Добавил фильтр по Исполнителю ДЗО из бизнес процесса 
		Если Параметры.Свойство("ИсполнительДЗО") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%Условие%%", "И ЗаявкаСпецификация.Ссылка = &ЗаявкаСсылка И ЗаявкаСпецификация.ИсполнительДЗО В (&ИсполнительДЗО)");
			Запрос.УстановитьПараметр("ЗаявкаСсылка", Параметры.ЗаявкаСсылка);
			Если ТипЗнч(Параметры.ИсполнительДЗО) = Тип("Массив") Тогда
				ПараметрМассив = Параметры.ИсполнительДЗО;
			Иначе
				ПараметрМассив = Новый Массив;
				Для каждого Исполнитель Из Параметры.ИсполнительДЗО Цикл
					ПараметрМассив.Добавить(Исполнитель);
				КонецЦикла; 
			КонецЕсли; 
			Запрос.УстановитьПараметр("ИсполнительДЗО", ПараметрМассив);
		Иначе
		// -- 09.07.2018 15:58:27 Базунов Д.А. Задача:
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%Условие%%", "И ЗаявкаСпецификация.Ссылка = &ЗаявкаСсылка");
			Запрос.УстановитьПараметр("ЗаявкаСсылка", Параметры.ЗаявкаСсылка);
		КонецЕсли; 
		
	ИначеЕсли Параметры.Свойство("ИсполнительДЗО") Тогда
		
		// если вызов идет из формы списка контрактов
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%Условие%%", "И ЗаявкаСпецификация.ИсполнительДЗО В (&ИсполнительДЗО)");
		Если ТипЗнч(Параметры.ИсполнительДЗО) = Тип("Массив") Тогда
			ПараметрМассив = Параметры.ИсполнительДЗО;
		Иначе
			ПараметрМассив = Новый Массив;
			Для каждого Исполнитель Из Параметры.ИсполнительДЗО Цикл
				ПараметрМассив.Добавить(Исполнитель);
			КонецЦикла; 
		КонецЕсли; 
		Запрос.УстановитьПараметр("ИсполнительДЗО", ПараметрМассив);
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%Условие%%", "");
		
	КонецЕсли; 
	
		
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Выполнить();
	
	РезультатЗапросаЗначенияГруппировки = МВТ.Таблицы.Получить(4).ПолучитьДанные();
	
	Если РезультатЗапросаЗначенияГруппировки.Пустой() Тогда
	
		Возврат;	
	
	КонецЕсли;
	
	РезультатЗапросаЗаявки = МВТ.Таблицы.Получить(2).ПолучитьДанные();
	
	РезультатЗапросаПозицииЗаявок = МВТ.Таблицы.Получить(3).ПолучитьДанные();
	
	Если ТКПСПоставщиком Тогда
		
		Элементы.ИсполнительДЗО.СписокВыбора.ЗагрузитьЗначения(РезультатЗапросаЗначенияГруппировки.Выгрузить().ВыгрузитьКолонку("ПолеГруппировки"));
		ИсполнительДЗО = Элементы.ИсполнительДЗО.СписокВыбора.Получить(0).Значение;
		ИсполнительДЗОПред = ИсполнительДЗО;
		
		Заявки.Загрузить(РезультатЗапросаЗаявки.Выгрузить());
		
		Для каждого Строка Из Заявки Цикл
			
			Если Строка.ПолеГруппировки = ИсполнительДЗО Тогда
				
				НоваяСтрока = ЗаявкиГруппировки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	ИначеЕсли ТКПСЗаказчиком Или КонтрактСЗаказчиком Тогда
		
		Элементы.Заказчик.СписокВыбора.ЗагрузитьЗначения(РезультатЗапросаЗначенияГруппировки.Выгрузить().ВыгрузитьКолонку("ПолеГруппировки"));
		Заказчик = Элементы.Заказчик.СписокВыбора.Получить(0).Значение;
		ЗаказчикПред = Заказчик;
		
		Заявки.Загрузить(РезультатЗапросаЗаявки.Выгрузить());
		
		Для каждого Строка Из Заявки Цикл
			
			Если Строка.ПолеГруппировки = Заказчик Тогда
				
				НоваяСтрока = ЗаявкиГруппировки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			КонецЕсли;	
			
		КонецЦикла;	
	
	КонецЕсли;
	
	ЗаявкиГруппировки.Сортировать("Дата, НомерЗаказчика");
	
	ПозицииЗаявок.Загрузить(РезультатЗапросаПозицииЗаявок.Выгрузить());

КонецПроцедуры // ПолучитьДоступныеПозицииЗаявокДляТКПСПоставщиком()

&НаКлиенте
Процедура ЗаявкиПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
	
		ЗаполнитьПозицииЗаявки(ТекДанные.Заявка, ТекДанные.ПолеГруппировки);	
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПозицииЗаявки(Заявка, ПолеГруппировки)

	ПозицииЗаявки.Очистить();
	
	Если ТКПСПоставщиком Тогда
		
		Для каждого Строка Из ПозицииЗаявок Цикл
			
			Если Строка.Заявка = Заявка И Строка.ПолеГруппировки = ИсполнительДЗО Тогда
				
				НоваяСтрока = ПозицииЗаявки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			КонецЕсли;	
			
		КонецЦикла;
		
	ИначеЕсли ТКПСЗаказчиком Или КонтрактСЗаказчиком Тогда
		
		Для каждого Строка Из ПозицииЗаявок Цикл
			
			Если Строка.Заявка = Заявка И Строка.ПолеГруппировки = Заказчик Тогда
				
				НоваяСтрока = ПозицииЗаявки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			КонецЕсли;	
			
		КонецЦикла;			
		
	КонецЕсли;
	
	ПозицииЗаявки.Сортировать("НомерПозиции");

КонецПроцедуры // ЗаполнитьПозицииЗаявки()

&НаКлиенте
Процедура ПозицииЗаявкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанныеЗаявки = Элементы.Заявки.ТекущиеДанные;
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ВыбранныеПозицииЗаявок.НайтиСтроки(Новый Структура("Заявка, ИдентификаторПозиции", ТекДанныеЗаявки.Заявка, ТекДанные.ИдентификаторПозиции)).Количество() = 0 Тогда
	
		НоваяСтрока = ВыбранныеПозицииЗаявок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекДанные);
		НоваяСтрока.Включить = Истина;
		НоваяСтрока.Заявка = ТекДанныеЗаявки.Заявка;
		НоваяСтрока.Валюта = ТекДанныеЗаявки.Валюта;
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть(?(ВыбранныеПозицииЗаявок.Количество() = 0, Неопределено, ПолучитьАдресВременногоХранилища()));	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресВременногоХранилища()
	
	ТаблицаВыбранныхПозицийЗаявок = Новый ТаблицаЗначений;
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("Заявка");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("ИдентификаторПозиции");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("НомерПозиции");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("ПредметСнабжения");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("Количество");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("ЦенаОСК");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("Валюта");
	ТаблицаВыбранныхПозицийЗаявок.Колонки.Добавить("СрокПоставки");
	
	Для каждого Строка Из ВыбранныеПозицииЗаявок Цикл
	
		Если Строка.Включить Тогда
		
			НоваяСтрока = ТаблицаВыбранныхПозицийЗаявок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		КонецЕсли;
	
	КонецЦикла;	
	
	Если ТаблицаВыбранныхПозицийЗаявок.Количество() = 0 Тогда
	
		Возврат Неопределено;	
	
	КонецЕсли;
	
	ДанныеПодбораЗаявок = Новый Структура;
	
	Если ТКПСПоставщиком Тогда
	
		ДанныеПодбораЗаявок.Вставить("ИсполнительДЗО", ИсполнительДЗО);	
	
	ИначеЕсли ТКПСЗаказчиком Или КонтрактСЗаказчиком Тогда
	
		ДанныеПодбораЗаявок.Вставить("Заказчик", Заказчик);		
	
	КонецЕсли;
	
	ДанныеПодбораЗаявок.Вставить("ТаблицаВыбранныхПозицийЗаявок", ТаблицаВыбранныхПозицийЗаявок);
	
	ТаблицаВалютВыбранныхЗаявок = ТаблицаВыбранныхПозицийЗаявок.Скопировать(, "Валюта");
	ТаблицаВалютВыбранныхЗаявок.Свернуть("Валюта");
	
	Если ТаблицаВалютВыбранныхЗаявок.Количество() = 1 Тогда
	
		ДанныеПодбораЗаявок.Вставить("Валюта", ТаблицаВалютВыбранныхЗаявок.Получить(0).Валюта); 		
	
	Иначе
	
		ДанныеПодбораЗаявок.Вставить("МассивВалют", ТаблицаВалютВыбранныхЗаявок.ВыгрузитьКолонку("Валюта"));	
	
	КонецЕсли;
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДанныеПодбораЗаявок, Новый УникальныйИдентификатор);
	
	Возврат АдресВременногоХранилища;

КонецФункции // ПолучитьАдресВременногоХранилища()

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительДЗОПриИзменении(Элемент)
	
	ПриИзмененииГруппировки();	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	
	ПриИзмененииГруппировки();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииГруппировки()

	Если ВыбранныеПозицииЗаявок.Количество() > 0 Тогда
	
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикИзмененияГруппировки", ЭтотОбъект);
		
		ПоказатьВопрос(ОписаниеОповещения, "Выбранные позиции будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена,,, "Подтверждение действия");
	
	Иначе
	
		ЗаполнитьЗаявкиГруппировки();	
	
	КонецЕсли;	

КонецПроцедуры // ПриИзмененииГруппировки()

&НаКлиенте
Процедура ОбработчикИзмененияГруппировки(Ответ, ДопПараметры = Неопределено) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
	
		ВыбранныеПозицииЗаявок.Очистить();
		
		ЗаполнитьЗаявкиГруппировки();
		
	Иначе
		
		Если ТКПСПоставщиком Тогда
		
			ИсполнительДЗО = ИсполнительДЗОПред;	
		
		ИначеЕсли ТКПСЗаказчиком Или КонтрактСЗаказчиком Тогда
		
			Заказчик = ЗаказчикПред;			
		
		КонецЕсли;
	
	КонецЕсли;	

КонецПроцедуры // ОбработчикИзмененияИсполнителяДЗО()

&НаКлиенте
Процедура ЗаполнитьЗаявкиГруппировки()
	
	ЗаявкиГруппировки.Очистить();
	
	Если ТКПСПоставщиком Тогда
		
		Для каждого Строка Из Заявки Цикл
			
			Если Строка.ПолеГруппировки = ИсполнительДЗО Тогда
				
				НоваяСтрока = ЗаявкиГруппировки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			КонецЕсли;	
			
		КонецЦикла;
		
		ИсполнительДЗОПред = ИсполнительДЗО;
		
	ИначеЕсли ТКПСЗаказчиком Или КонтрактСЗаказчиком Тогда
		
		Для каждого Строка Из Заявки Цикл
			
			Если Строка.ПолеГруппировки = Заказчик Тогда
				
				НоваяСтрока = ЗаявкиГруппировки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
			КонецЕсли;	
			
		КонецЦикла;
		
		ЗаказчикПред = Заказчик;			
		
	КонецЕсли;
	
	ЗаявкиГруппировки.Сортировать("Дата, НомерЗаказчика");

КонецПроцедуры // ЗаполнитьЗаявкиИсполнителяДЗО()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗавершениеРаботы И Не ЗакрытиеОбработано Тогда
		
		Если ВыбранныеПозицииЗаявок.Количество() > 0 И Не ЗначениеЗаполнено(АдресВременногоХранилища) Тогда
			
			Отказ = Истина;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемПродолжение", ЭтотОбъект);
			
			ПоказатьВопрос(ОписаниеОповещения, "Отменить подбор позиций заявок?", РежимДиалогаВопрос.ДаНет,,, "Подтверждение действия");
			
		Иначе
			
			ПередЗакрытиемПродолжение(КодВозвратаДиалога.Нет);		
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемПродолжение(Ответ, ДопПараметры = Неопределено) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ЗакрытиеОбработано = Истина;
		
		Закрыть();	
		
	КонецЕсли;	

КонецПроцедуры // ПередЗакрытиемПродолжение()

&НаСервере
Процедура УстановитьСнятьФлажки(Флаг = Ложь)
	
	Для каждого ТекСтрока Из ПозицииЗаявки Цикл
		ТекСтрока.Флаг = Флаг;
	КонецЦикла; 
	
КонецПроцедуры
 

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьСнятьФлажки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьСнятьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	
	ТекДанныеЗаявки = Элементы.Заявки.ТекущиеДанные;
	
	Для каждого ТекСтрока Из ПозицииЗаявки Цикл
		
		Если ТекСтрока.Флаг  Тогда
			
			Если ВыбранныеПозицииЗаявок.НайтиСтроки(Новый Структура("Заявка, ИдентификаторПозиции", ТекДанныеЗаявки.Заявка, ТекСтрока.ИдентификаторПозиции)).Количество() = 0 Тогда
				
				НоваяСтрока = ВыбранныеПозицииЗаявок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.Включить = Истина;
				НоваяСтрока.Заявка = ТекДанныеЗаявки.Заявка;
				НоваяСтрока.Валюта = ТекДанныеЗаявки.Валюта;
				
			КонецЕсли;			
			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСрокиПоставки()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Т_ПозицииЗаявок", ПозицииЗаявок.Выгрузить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПозицииЗаявок.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ПозицииЗаявок.Заявка КАК Заявка
	|ПОМЕСТИТЬ ВТ_ПозицииЗаявок
	|ИЗ
	|	&Т_ПозицииЗаявок КАК ПозицииЗаявок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПозицииЗаявок.ИдентификаторПозиции КАК ИдентификаторПозиции,
	|	ВТ_ПозицииЗаявок.Заявка КАК Заявка,
	|	ЦеныДЗОСрезПоследних.СрокПоставки КАК СрокПоставки
	|ИЗ
	|	РегистрСведений.ЦеныДЗО.СрезПоследних КАК ЦеныДЗОСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПозицииЗаявок КАК ВТ_ПозицииЗаявок
	|		ПО ЦеныДЗОСрезПоследних.Заявка = ВТ_ПозицииЗаявок.Заявка
	|			И ЦеныДЗОСрезПоследних.ИдентификаторПозиции = ВТ_ПозицииЗаявок.ИдентификаторПозиции";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаСроковПоставки = РезультатЗапроса.Выгрузить();
	Для каждого СтрокаПозицииЗаявок Из ПозицииЗаявок Цикл
		НайденныеСтроки = ТаблицаСроковПоставки.НайтиСтроки(Новый Структура("ИдентификаторПозиции,Заявка", СтрокаПозицииЗаявок.ИдентификаторПозиции, СтрокаПозицииЗаявок.Заявка));
	    Если НайденныеСтроки.Количество() > 0 Тогда 		
			СтрокаПозицииЗаявок.СрокПоставки = НайденныеСтроки[0].СрокПоставки;		
		КонецЕсли;  
	КонецЦикла; 	
КонецПроцедуры






