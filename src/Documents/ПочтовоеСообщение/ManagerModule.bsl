
// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl" и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//

Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
	НовыйРеквизит = Реквизиты.Добавить();
	НовыйРеквизит.Имя = "ИОРуководителя";
	НовыйРеквизит.Представление = НСтр("ru = 'Имя Отчество руководителя'");
	НовыйРеквизит.Тип = Новый ОписаниеТипов("Строка");

КонецПроцедуры //ПриПодготовкеШаблонаСообщения

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
	ФИОРуководителя = ?(ЗначениеЗаполнено(ПредметСообщения.Получатель), ПредметСообщения.Получатель.ФИОРуководителя, Неопределено);
	СтруктураФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФИОРуководителя);
	
	Сообщение.ЗначенияРеквизитов["ИОРуководителя"] = ?(НЕ СтруктураФИО.Имя = Неопределено, СтруктураФИО.Имя, "") + " " + ?(НЕ СтруктураФИО.Отчество = Неопределено, СтруктураФИО.Отчество, "");
		
КонецПроцедуры //ПриФормированииСообщения

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
	Если ЗначениеЗаполнено(ПредметСообщения.Ответственный) Тогда
		
		Получатель = ПолучателиПисьма.Добавить();
		Получатель.Адрес = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ПредметСообщения.Ответственный, Справочники.ВидыКонтактнойИнформации.EmailПользователя);
		Получатель.Представление = "";
		
	КонецЕсли; 
	
КонецПроцедуры

Функция СообщениеСуществует(Идентификатор) Экспорт
	Результат 		= Ложь;
	
	Запрос		 	= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	ПочтовоеСообщение.Ссылка КАК Ссылка
	             	  |ИЗ
	             	  |	Документ.ПочтовоеСообщение КАК ПочтовоеСообщение
	             	  |ГДЕ
	             	  |	ПочтовоеСообщение.ИдентификаторСообщения = &Идентификатор
	             	  |	И НЕ ПочтовоеСообщение.ПометкаУдаления";
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Выборка 		= Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат 	= Истина;
	КонецЕсли; // Если Выборка.Следующий() Тогда
	
	Возврат Результат;
КонецФункции // СообщениеСуществует
