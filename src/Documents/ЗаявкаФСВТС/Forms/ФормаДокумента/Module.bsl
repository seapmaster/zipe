/////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбработчикВыбораИзделия(Результат, ДопПараметры = Неопределено) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если Результат = Неопределено Тогда 	
	ТекущаяСтрока							= Элементы.ПредметыСнабжения.ТекущиеДанные;
	ТекущаяСтрока.Изделие					= Результат.Изделие;
	ТекущаяСтрока.ОписаниеИерархииИзделия 	= Результат.Описание;	
КонецПроцедуры // ОбработчикВыбораИзделия()

&НаСервере
Функция ПолучитьСписокВыбораПредметовСнабжения(Обозначение)
	Возврат Справочники.КаталогПредметовСнабжения.ПолучитьСписокПодобных(Обозначение);
КонецФункции // ПолучитьСписокВыбора

&НаСервере
Функция ПолучитьСписокВыбораИзделий(ПредметСнабжения)
	Возврат Справочники.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПолучитьСписок(ПредметСнабжения, Объект.Корабли.Выгрузить().ВыгрузитьКолонку("Корабль"));
КонецФункции // ПолучитьСписокВыбораИзделий

Функция ПолучитьОписаниеИзделия(Изделие)
	Возврат РегистрыСведений.ОписанияИерархииЭлементовСтруктурыЗаказовПоКомплектующимИзделиямИЗИП.ПолучитьОписание(Изделие);
КонецФункции // ПолучитьОписаниеИзделия

&НаСервере
Функция ПолучитьСтруктуруИзделия(ПредметСнабжения)
	Возврат Справочники.СтруктураЗаказаПоКомплектующимИзделиямИЗИП.ПолучитьИзделие(
													ПредметСнабжения,
													Объект.Корабли.Выгрузить().ВыгрузитьКолонку("Корабль"));
КонецФункции // ПолучитьСтруктуруИзделия

&НаСервере
Функция ПолучитьМассивКораблей()
	ТаблицаКораблей = Объект.Корабли.Выгрузить();
	ТаблицаКораблей.Свернуть("Корабль");
	Возврат ТаблицаКораблей.ВыгрузитьКолонку("Корабль");
КонецФункции // ПолучитьМассивКораблей

&НаСервере
Процедура ЗагрузитьПредметыСнабжения(АдресВХранилище) 
	Объект.ПредметыСнабжения.Загрузить(ПолучитьИзВременногоХранилища(АдресВХранилище));
КонецПроцедуры // ЗагрузитьПредметыСнабжения

&НаКлиенте
Процедура ПослеЗагрузиПредметовСнабжения(АдресВХранилище, ДополнительныеПараметры) Экспорт
	Если АдресВХранилище = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если АдресВХранилище = Неопределено Тогда	
	ЗагрузитьПредметыСнабжения(АдресВХранилище);
КонецПроцедуры // ПослеЗагрузиПредметовСнабжения

&НаСервере
Процедура СтартоватьБизнесПроцессРаспределенияЗаявки()
	Если БизнесПроцессы.РаспределениеЗаявкиФСВТС.СуществуютПроцессыПоЗявке(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("По заявке уже существует бизнес процесс.");
		Возврат;
	КонецЕсли; // Если БизнесПроцессы.РаспределениеЗаявкиФСВТС.СуществуютПроцессыПоЗявке(Объект.Ссылка) Тогда
	
	БизнесПроцесс =	БизнесПроцессы.РаспределениеЗаявкиФСВТС.Создать(Объект.Ссылка);
КонецПроцедуры // СтартоватьБизнесПроцессРаспределенияЗаявки

/////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура КомандаЗагрузитьИзExcel(Команда)
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Корабли", ПолучитьМассивКораблей());
	ОписаниеОповещения 	= Новый ОписаниеОповещения("ПослеЗагрузиПредметовСнабжения", ЭтаФорма);
	ОткрытьФорму("Документ.ЗаявкаФСВТС.Форма.ФормаЗагрузкиИзExcel",
					СтруктураПараметров, 
					ЭтаФорма, 
					ЭтаФорма.УникальныйИдентификатор,,,
					ОписаниеОповещения,
					РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры // КомандаЗагрузитьИзExcel

&НаКлиенте
Процедура КомандаЗапуститьБизнесПроцессРаспределенияЗаявки(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) 
		Или Модифицированность 
		Или Не Объект.Проведен Тогда
		ПоказатьПредупреждение(,"Необходимо сначала провести документ", 60, "Внимание");
		Возврат;
	КонецЕсли; // Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
	
	СтартоватьБизнесПроцессРаспределенияЗаявки();
КонецПроцедуры // КомандаЗапуститьБизнесПроцессРаспределенияЗаявки


/////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаКлиенте
Процедура КораблиКорабльАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ПараметрыПолученияДанных.Отбор.Вставить("Заказчик", Объект.Заказчик);
КонецПроцедуры // КораблиКорабльАвтоПодбор

&НаКлиенте
Процедура ПредметыСнабженияПредметСнабженияПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ПредметыСнабжения.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если ТекущаяСтрока = Неопределено Тогда
	
	
	СтруктураИзделия 			= ПолучитьСтруктуруИзделия(ТекущаяСтрока.ПредметСнабжения);
	Если СтруктураИзделия = Неопределено Тогда
		ТекущаяСтрока.Изделие 					= "";
		ТекущаяСтрока.ОписаниеИерархииИзделия 	= "";
	Иначе
		ТекущаяСтрока.Изделие		 			= СтруктураИзделия.Изделие;
		ТекущаяСтрока.ОписаниеИерархииИзделия 	= СтруктураИзделия.Описание;
	КонецЕсли; // Если Не СтруктураИзделия = Неопределено Тогда
КонецПроцедуры // ПредметыСнабженияПредметСнабженияПриИзменении

&НаКлиенте
Процедура ПредметыСнабженияПредметСнабженияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда
		ТекущаяСтрока 				= Элементы.ПредметыСнабжения.ТекущиеДанные;
		СписокВыбора 				= ПолучитьСписокВыбораПредметовСнабжения(ТекущаяСтрока.ОбозначениеПС);
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка 	= Ложь;
			ДанныеВыбора 			= СписокВыбора;		
		КонецЕсли; // Если СписокВыбора.Количество() > 0 Тогда
	КонецЕсли; // Если Ожидание = 0 Тогда 	              
КонецПроцедуры // ПредметыСнабженияПредметСнабженияАвтоПодбор

&НаКлиенте
Процедура ПредметыСнабженияИзделиеПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ПредметыСнабжения.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; // Если ТекущаяСтрока = Неопределено Тогда
	
	ТекущаяСтрока.ОписаниеИерархииИзделия = ПолучитьОписаниеИзделия(ТекущаяСтрока.Изделие);
КонецПроцедуры // ПредметыСнабженияИзделиеПриИзменении

&НаКлиенте
Процедура ПредметыСнабженияИзделиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;	
	ПредметСнабжения 		= Элементы.ПредметыСнабжения.ТекущиеДанные.ПредметСнабжения;	
	Если Не ЗначениеЗаполнено(ПредметСнабжения) Тогда                               	
		ПоказатьПредупреждение(, "Не заполнен предмет снабжения",, 
									"Действие запрещено");
		Возврат;                                          	
	КонецЕсли; // Если Не ЗначениеЗаполнено(ПредметСнабжения) Тогда
	
	ПараметрыОткрытия 		= Новый Структура("ПредметСнабжения", ПредметСнабжения);      	
	ОписаниеОповещения 		= Новый ОписаниеОповещения("ОбработчикВыбораИзделия", ЭтаФорма);	
	ОткрытьФорму("Документ.Заявка.Форма.ФормаПодбораИзделия", 
							ПараметрыОткрытия, 
							ЭтотОбъект,,,, 
							ОписаниеОповещения, 
							РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры // ПредметыСнабженияИзделиеНачалоВыбора 

&НаКлиенте
Процедура ПредметыСнабженияИзделиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда
		ТекущаяСтрока 				= Элементы.ПредметыСнабжения.ТекущиеДанные;
		СписокВыбора 				= ПолучитьСписокВыбораИзделий(ТекущаяСтрока.ПредметСнабжения);
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка 	= Ложь;
			ДанныеВыбора 			= СписокВыбора;		
		КонецЕсли; // Если СписокВыбора.Количество() > 0 Тогда
	КонецЕсли; // Если Ожидание = 0 Тогда
КонецПроцедуры // ПредметыСнабженияИзделиеАвтоПодбор

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	БизнесПроцесс = БизнесПроцессы.РаспределениеЗаявкиФСВТС.ПолучитьБизнесПроцесс(Объект.Ссылка);
КонецПроцедуры // ПриСозданииНаСервере




